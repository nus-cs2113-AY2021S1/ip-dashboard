[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "# Duke project"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "## User guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "### Table of contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* [QuickStart](#quickstart)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Adding a todo task](#todo)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Adding a deadline task](#deadline)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Adding an event task](#event)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Listing all tasks in the task list](#list)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Marking a task as done](#done)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Removing a task from the list](#delete)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Finding tasks with matching keyword(s)](#find)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Finding tasks with matching date / date and time](#date)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Exiting the program](#bye)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Saving the data](#saving-the-data)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  * [Loading the data](#loading-the-data)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "### QuickStart"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "2. Download the latest `jar` file from [here](https://github.com/xingrong123/ip/releases) "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "4. Run the jar file in the `terminal`. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "5. Type the command in the command box and press `Enter` to execute it. "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e Notes about the command format:  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e * Words in `UPPER_CASE` are the parameters to be supplied by the user.  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo homework`."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e * When inputting `DATE` or `TIME`, the user must follow a specific date and time format.  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       `DATE` requires to be in `\"d/M/yyyy\"` format.  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       e.g. `20/12/2020`, `4/2/1993`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       `TIME` requires to be in `\"HHmm\"` 24H format.  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       e.g. `2100` - 9.00 p.m., `0845` - 8.45 a.m."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e * Items in curly brackets with slashes between them are different inputs which "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       the user must choose to input one of them.  "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       e.g. in `deadline DESCRIPTION /by {DATE/DATE TIME/DESCRIPTION_OF_DATETIME}`, "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       the user must input one and only one of the three items in the curly brackets (`DATE`, `DATE TIME` or `DESCRIPTION`)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e * `TASK_NUMBER` refers to the number of the task which it is assigned to in the list.  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       To find out the `TASK_NUMBER` of a task, use the `list` command and "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       refer to the number on the left side of the task.  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003e       `TASK_NUMBER` ranges from 1 to 100 inclusively and is an integer."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"todo\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Adding a todo task: `todo`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Adds a todo task to the task list.  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: `todo DESCRIPTION`  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `todo test`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `todo math homework`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Adds a deadline task to the task list.  "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: `deadline DESCRIPTION /by {DATE/DATE TIME/DESCRIPTION_OF_DATETIME}`  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `deadline complete assignment /by 13/12/2039`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `deadline complete project /by 5/2/2020 1200`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `deadline complete project /by wed night`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"event\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Adding an event task: `event`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Adds an event task to the task list.  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: `event DESCRIPTION /at {DATE/DATE TIME/DESCRIPTION_OF_DATETIME}`  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `event complete assignment /at 13/12/2039`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `event complete project /at 5/2/2020 1200`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `event complete project /at friday morning`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Listing all tasks in the task list: `list`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Shows a list of all tasks.  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: `list`  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `list`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"done\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Marking a task as done: `done`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Changes a state of a task to \"done\".  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: `done TASK_NUMBER`  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `done 1`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `done 23`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"delete\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Removing a task from the list: `delete`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Permanently removes a task from the list.  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: `delete TASK_NUMBER`  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `delete 1`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `delete 23`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"find\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Finding tasks with matching keyword(s): `find`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Shows a list of tasks with descriptions which contain the keyword(s).  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: `find KEYWORD`  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `find math`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `find assignment one`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `find univers`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"date\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Finding tasks with matching date / date and time: `date`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Shows a list of scheduled tasks with matching date / date and time.  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: `date {DATE/DATE TIME}`  "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `date 21/12/2019`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `date 21/12/2019 2359`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "\u003ca name\u003d\"bye\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Exiting the program: `bye`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Exits the program.  "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Format: `bye`  "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "* `bye`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Saving the data"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "TaskList data are saved in the hard disk automatically after any command that changes the data. "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "#### Loading the data"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "TaskList data are loaded from the hard disk automatically after starting the program. "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "If the data file does not exist, an empty TaskList will be created instead."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "There is no need to load manually."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "### FAQ"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**Q**: How do I transfer my data to another Computer?  "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**A**: Copy and paste the `data/tasks.txt` file to the directory where the `jar` file is at. "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Start the application and all the data should be loaded."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "### Command summary"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**todo**|`todo DESCRIPTION` \u003cbr\u003e e.g., `todo math homework`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**deadline**|`deadline DESCRIPTION /by {DATE/DATE TIME/DESCRIPTION_OF_DATETIME}` \u003cbr\u003e e.g., `deadline assignment /by 20/3/2020`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**event**|`event DESCRIPTION /at {DATE/DATE TIME/DESCRIPTION_OF_DATETIME}` \u003cbr\u003e e.g., `event class /at 20/3/2020 0900`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**list**|`list`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**done**|`done TASK_NUMBER` \u003cbr\u003e e.g., `done 3`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**delete**|`delete TASK_NUMBER` \u003cbr\u003e e.g., `delete 12`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**find**|`find KEYWORD` \u003cbr\u003e e.g., `find math`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**date**|`date {DATE/DATE TIME}` \u003cbr\u003e e.g., `date 20/3/2020`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "**exit**|`bye`"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 145,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * This class is used to process strings with certain formats as date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns an instance of a LocalDate object by parsing a string of date in a specified format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * E.g. 20/12/2020, 1/3/1994"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param input String of date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return date in LocalDate."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DateTimeException If invalid date format is used."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static LocalDate getDate(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(input, formatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns an instance of a LocalTime object by parsing a string of time in a specified format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * E.g. 1800, 0345"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param input String of time."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return time in LocalTime."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DateTimeException If invalid time format is used."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static LocalTime getTime(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        LocalTime time \u003d LocalTime.parse(input, formatter1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a string of the date in a certain format."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method is used when saving data in a file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param date The date."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return date in string."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static String getDateData(LocalDate date) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dateString;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        dateString \u003d date.format(formatter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dateString;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a string of the time in a certain format."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method is used when saving time in a file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param time The time."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return time in string."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static String getTimeData(LocalTime time) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return getTimeString(time);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a string of the date in a certain format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method is used when printing date on the command line."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param date The date."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return date in string."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static String getDateString(LocalDate date) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dateString;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        dateString \u003d date.format(formatter2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dateString;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a string of the time in a certain format."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method is used when printing date on the command line."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param time The time."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return time in string."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static String getTimeString(LocalTime time) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dateString;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        dateString \u003d time.format(formatter1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dateString;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 93
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * The Duke program allows users to store and organize different types of tasks locally in their machines."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Duke instance."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Pass the filepath of the txt file to set up storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param filePath The filepath of the txt file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method is used run the Duke program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showWelcomeScreen();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This is the main method which creates a Duke object and runs it."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        new Duke(\"./data/tasks.txt\").run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 61,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.DateCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * This class deals with making sense of the user command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Creates and returns the command based on user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param input  full user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException If input command is unknown."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Command command \u003d createCommand(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static Command createCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (input.compareToIgnoreCase(ExitCommand.BYE_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.compareToIgnoreCase(ListCommand.LIST_KW) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.startsWith(DoneCommand.DONE_KW)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new DoneCommand(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.startsWith(DeleteCommand.DELETE_KW)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new DeleteCommand(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.startsWith(FindCommand.FIND_KW)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new FindCommand(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.startsWith(DateCommand.DATE_KW)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new DateCommand(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.startsWith(Todo.TODO_KW)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new AddTodoCommand(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.startsWith(Deadline.DEADLINE_KW)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new AddDeadlineCommand(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (input.startsWith(Event.EVENT_KW)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            command \u003d new AddEventCommand(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 63
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Storage instance by storing the given pathname of the file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param filePath The pathname of the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.filePath \u003d filePath.replace(\u0027/\u0027, File.separatorChar);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the tasks found within the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return Tasks found in the file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException If file is not found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "             tasks \u003d getTasks(f);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.ERROR_LOADING_FILE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private ArrayList\u003cString\u003e getTasks(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            tasks.add(s.nextLine());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method creates the file if it does not exist and saves"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * tasks data in the file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param data The string of all the data to be saved in the file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException If there is an error writing to the file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void save(String data) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            createDirectory();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            writeToFile(data);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void createDirectory() throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dirPath \u003d getDirectory(filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Path path \u003d Paths.get(dirPath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Files.createDirectories(path);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getDirectory(String path) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dirPath;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (path.contains(File.separator)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            dirPath \u003d path.substring(0, path.lastIndexOf(File.separator));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            dirPath \u003d path;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dirPath;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 96
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user interface on the command line and deals with interactions with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String LINE \u003d \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Ui instance."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a string of the user input in the command line."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the string of user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void showMessageLayout(String message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        System.out.println(LINE"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints a message after starting the program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showWelcomeScreen() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tHello! I\u0027m Duke.\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"\\tWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints a message before exiting the program."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showExitScreen() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tBye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the details of all the tasks in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param message The string to be printed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showTaskList(String message) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the details of all the tasks which has a matching date and/or time."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param message The string to be printed."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showTaskDate(String message) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the message after adding a task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param task The added task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskCount The number of tasks in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showAddTask(Task task, int taskCount) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d getAddTaskMessage(task, taskCount);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getAddTaskMessage(Task task, int size) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String taskCount \u003d size + (size \u003d\u003d 1 ? \" task\" : \" tasks\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tGot it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"\\t  \" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"\\tNow you have \" + taskCount + \" in the list.\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the details of all the tasks which description contains the keyword(s)."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param message The string to be printed."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showFindKeyword(String message) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the message after marking a task as done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param message The string to be printed."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showMarkTaskDone(String message) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the message after deleting a task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param message The string to be printed."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showDeleteTask(String message) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the error message if data file is not found."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tOOPS!!! Data file not found\\n\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method detects the type of dukeException error and prints the corresponding error message."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param dukeException The dukeException error."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void showErrorMessage(DukeException dukeException) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        switch (dukeException.getError()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case FULL_TASK_LIST:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printFullTaskListMessage();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case UNKNOWN_INPUT:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printUnknownInputMessage();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_TASK_NUMBER:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printUseValidTaskNumberMessage();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case WRITE_FILE_ERROR:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printErrorWritingToFile();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printEmptyTaskDescriptionMessage(dukeException.getTaskType());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_TASK_FORMAT:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printEnterValidTaskFormatMessage(dukeException.getTaskType());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case INVALID_DATE_TIME:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            printInvalidDateTime();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printUnknownInputMessage() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printFullTaskListMessage() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tOOPS!!! Tasklist is full.\\n\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printEmptyTaskDescriptionMessage(TaskType taskType) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tOOPS!!! The description of \" + taskType + \" cannot be empty.\\n\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printUseValidTaskNumberMessage() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tOOPS!!! Please enter valid task number.\\n\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printEnterValidTaskFormatMessage(TaskType taskType) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tOOPS!!! Invalid \" + taskType + \" format!!\\n\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printErrorWritingToFile() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tOOPS!!! Error writing to file.\\n\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void printInvalidDateTime() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tOOPS!!! Invalid date or time used.\\n\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        showMessageLayout(message);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 192
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command to add a deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new AddDeadlineCommand instance by detecting and storing the description and at from the user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the description is empty or the input format is invalid."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public AddDeadlineCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e descAndAt \u003d Deadline.getDescAndBy(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        description \u003d descAndAt.get(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        by \u003d descAndAt.get(1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This methods creates and adds a deadline task to the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Then it prints out a message and saves the list into the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException When list reaches MAX_SIZE or when there is an error writing to file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showAddTask(deadline, taskList.getSize());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        storage.save(taskList.getData());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 49
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command to add an event task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new AddEventCommand instance by detecting and storing the description and at from the user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the description is empty or the input format is invalid."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public AddEventCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e descAndAt \u003d Event.getDescAndAt(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        description \u003d descAndAt.get(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        at \u003d descAndAt.get(1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This methods creates and adds an event task to the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Then it prints out a message and saves the list into the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException when list reaches MAX_SIZE or when there is an error writing to file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showAddTask(event, taskList.getSize());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        storage.save(taskList.getData());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 47
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command to add a todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class AddTodoCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new AddTodoCommand instance by detecting and storing the description from the user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the description is empty or the input format is invalid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public AddTodoCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        description \u003d Todo.getDescription(command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This methods creates and adds a todo task to the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Then it prints out a message and saves the list into the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException when list reaches MAX_SIZE or when there is an error writing to file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showAddTask(todo, taskList.getSize());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        storage.save(taskList.getData());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 43
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * This abstract class provides execute and isExit methods for all Command classes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected boolean isExitCommand \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Execution of command depends on which command subclass the command belongs to."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns true if the command is an ExitCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return isExitCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Schedulable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command to search for tasks with specific date and/or time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String DATE_KW \u003d \"date\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DateCommand instance by detecting and storing the date and/or time from the user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the format of the command is invalid or the date and/or time is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DateCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String details \u003d command.substring(DATE_KW.length());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            setDateTime(details.trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_DATE_TIME);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void setDateTime(String details) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (details.contains(\" \")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            List\u003cString\u003e dateTimeString \u003d Arrays.asList(details.split(\" \", 2));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            date \u003d DateTime.getDate(dateTimeString.get(0));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            time \u003d DateTime.getTime(dateTimeString.get(1));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            date \u003d DateTime.getDate(details.trim());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints all the details of the tasks with matching date and/or time."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dateString \u003d getDate();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e tasksWithDate \u003d getTasksWithDate(taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d getMessage(tasksWithDate, dateString);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showTaskDate(message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getDate() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String dateString;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (time !\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            dateString \u003d DateTime.getDateString(date) + \" \" + DateTime.getTimeString(time);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            dateString \u003d DateTime.getDateString(date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dateString;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private ArrayList\u003cString\u003e getTasksWithDate(TaskList taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e arrayString \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Task task \u003d taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "             if (checkForDateInTask(task)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                 arrayString.add(task.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "             }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return arrayString;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean checkForDateInTask(Task task) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean hasMatchingDate \u003d false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (task instanceof Schedulable) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Schedulable scheduledTask \u003d (Schedulable) task;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            hasMatchingDate \u003d checkMatchingDate(scheduledTask);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return hasMatchingDate;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private boolean checkMatchingDate(Schedulable scheduledTask) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        boolean hasMatchingDate \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (time !\u003d null) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (scheduledTask.hasDate() \u0026\u0026 scheduledTask.hasTime()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                if ((date.compareTo(scheduledTask.getDate()) \u003d\u003d 0) \u0026\u0026 (time.compareTo(scheduledTask.getTime()) \u003d\u003d 0)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    hasMatchingDate \u003d true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (scheduledTask.hasDate()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                if (date.compareTo(scheduledTask.getDate()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                    hasMatchingDate \u003d true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return hasMatchingDate;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMessage(ArrayList\u003cString\u003e arrayString, String dateString) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tHere are the deadlines/events occurring on \" + dateString + \" in your list:\\n\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (String task : arrayString) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message +\u003d (\"\\t\" + task + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 126
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command to delete a task in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String DELETE_KW \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DeleteCommand instance by detecting and storing the task number from the user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the format of the command is invalid or the task number is invalid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DeleteCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String details \u003d command.substring(DELETE_KW.length());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NullPointerException | NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method gets the task with the corresponding index from the list, then deletes it."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Then it prints out a message and saves the list into the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the task number entered is not a valid index number of an existing task in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Task task \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            taskList.deleteTask(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.showDeleteTask(getMessage(task, taskList.getSize()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            storage.save(taskList.getData());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMessage(Task task, int size) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tNoted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"\\t  \" + task + \"\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"\\tNow you have \" + size + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 64
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command to mark an exiting task from the list as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String DONE_KW \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DoneCommand instance by detecting and storing the task number from the user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The user input command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the format of the command is invalid or the task number is invalid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DoneCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String details \u003d command.substring(DONE_KW.length());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            index \u003d Integer.parseInt(details.trim()) - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (NullPointerException | NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Gets the task with the corresponding index from the list, then marks it as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Then it prints out a message and saves the list into the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException When list reaches MAX_SIZE or when there is an error writing to file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            Task task \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            taskList.markTaskDone(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            ui.showMarkTaskDone(getMessage(task));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            storage.save(taskList.getData());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMessage(Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tNice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                + \"\\t  [\" + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 62
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command exit the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String BYE_KW \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new ExitCommand instance and sets isExitCommand to true."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        isExitCommand \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints the exit screen before the program exits."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showExitScreen();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 31
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command to search for tasks which description contains a specified keyword(s)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String FIND_KW \u003d \"find\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new ListCommand instance and sets isExitCommand to true."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param command The string of user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if input is unknown."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public FindCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String details \u003d command.substring(FIND_KW.length());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (!details.startsWith(\" \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.UNKNOWN_INPUT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        keyword \u003d details.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints all the details of the tasks which contains the keyword(s)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e tasks \u003d getTasks(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d getMessage(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showFindKeyword(message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private ArrayList\u003cString\u003e getTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                tasks.add(task.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMessage(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tHere are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d message + \"\\t\" + (i + 1) + \".\" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 65
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents the user command to mark an exiting task from the list as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String LIST_KW \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new ListCommand instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Prints all the details of the tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param storage The storage for saving and loading."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d getMessage(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ui.showTaskList(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getMessage(TaskList taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String message \u003d \"\\tHere are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            message \u003d message + \"\\t\" + (i + 1) + \".\" + taskList.getTaskList().get(i) + \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 40
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * The class DukeException is a subclass of Exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * It is thrown when an error specific to Duke occurs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private TaskType taskType \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private DukeExceptionType dukeExceptionType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DukeException instance by storing the given DukeExceptionType."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param dukeExceptionType The type of dukeException."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DukeException(DukeExceptionType dukeExceptionType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.dukeExceptionType \u003d dukeExceptionType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new DukeException instance by storing the given DukeExceptionType and TaskType."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param dukeExceptionType The type of dukeException."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param taskType The type of Task where the error occurred."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DukeException(DukeExceptionType dukeExceptionType, TaskType taskType) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.dukeExceptionType \u003d dukeExceptionType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the dukeExceptionType of the dukeException."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the dukeExceptionType."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public DukeExceptionType getError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return dukeExceptionType;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the taskType of where the dukeException occurred."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the taskType."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 51
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Enumeration of all the types of DukeException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public enum DukeExceptionType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_TASK_FORMAT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    FULL_TASK_LIST,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    UNKNOWN_INPUT,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_TASK_NUMBER,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    WRITE_FILE_ERROR,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    ERROR_LOADING_FILE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_TASK_DATA,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    INVALID_DATE_TIME"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * A type of task that contains a deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Deadline extends Task implements Schedulable {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String BY_KW \u003d \" /by \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String DEADLINE_KW \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final char CHAR_IDENTIFIER  \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private LocalDate byDate \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private LocalTime byTime \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Deadline instance by storing the given description and by."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param deadline The date and/or time of the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        super(description.trim(), TaskType.DEADLINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (deadline.contains(\" \")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                List\u003cString\u003e dateTimeString \u003d  Arrays.asList(deadline.split(\" \", 2));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                byDate \u003d DateTime.getDate(dateTimeString.get(0));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                byTime \u003d DateTime.getTime(dateTimeString.get(1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                byDate \u003d DateTime.getDate(deadline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            this.by \u003d deadline;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the description and by of the detected deadline command of the user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param input The user input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the description is empty or the input format is invalid."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static List\u003cString\u003e getDescAndBy(String input) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String descriptionAndBy \u003d input.substring(DEADLINE_KW.length());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e strings \u003d Arrays.asList(descriptionAndBy.split(BY_KW));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ensureValidDeadlineInput(descriptionAndBy, strings);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static void ensureValidDeadlineInput(String descriptionAndBy, List\u003cString\u003e strings) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (strings.get(0).isBlank()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_DESCRIPTION, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (strings.size() !\u003d 2 || strings.get(1).isBlank() || !descriptionAndBy.startsWith(\" \")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_TASK_FORMAT, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Creates and returns an deadline from the data read from the file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param data The user input."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The deadline created."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the task data is invalid."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static Task initDeadline(String data) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e details \u003d  Arrays.asList(data.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d details.get(2).trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String by \u003d details.get(3).trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Task deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String done \u003d details.get(1).trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        initCheckDone(deadline, done);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getBy() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String value;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (byDate !\u003d null \u0026\u0026 byTime !\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d DateTime.getDateString(byDate) + \" \" + DateTime.getTimeString(byTime);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (byDate !\u003d null \u0026\u0026 byTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d DateTime.getDateString(byDate);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d by;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getByData() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String value;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (byDate !\u003d null \u0026\u0026 byTime !\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d DateTime.getDateData(byDate) + \" \" + DateTime.getTimeData(byTime);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (byDate !\u003d null \u0026\u0026 byTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d DateTime.getDateData(byDate);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d by;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return byDate !\u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean hasTime() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return byTime !\u003d null;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return byDate;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return byTime;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a String of the details of the deadline to be printed for the Ui."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The details of the deadline."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the details of the deadline to be saved in the file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The details of the deadline."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"D\" + SEPARATOR + super.getData() + SEPARATOR + getByData();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 148
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * A type of task represents an event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Event extends Task implements Schedulable {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String AT_KW \u003d \" /at \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String EVENT_KW \u003d \"event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final char CHAR_IDENTIFIER  \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private LocalDate atDate \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private LocalTime atTime \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Event instance by storing the given description and at."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param at The date and/or time of the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        super(description.trim(), TaskType.EVENT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            if (at.contains(\" \")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                List\u003cString\u003e dateTimeString \u003d Arrays.asList(at.split(\" \", 2));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                atDate \u003d DateTime.getDate(dateTimeString.get(0));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                atTime \u003d DateTime.getTime(dateTimeString.get(1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                atDate \u003d DateTime.getDate(at);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            this.at \u003d at;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the description and at of the detected event command of the user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param input The user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the description is empty or the input format is invalid."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static List\u003cString\u003e getDescAndAt(String input) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String descriptionAndAt \u003d input.substring(EVENT_KW.length());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e strings \u003d  Arrays.asList(descriptionAndAt.split(AT_KW));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ensureValidEventInput(descriptionAndAt, strings);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static void ensureValidEventInput(String descriptionAndAt, List\u003cString\u003e strings) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (strings.get(0).isBlank()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_DESCRIPTION, TaskType.EVENT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (strings.size() !\u003d 2 || strings.get(1).isBlank() || !descriptionAndAt.startsWith(\" \")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_TASK_FORMAT, TaskType.EVENT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Creates and returns an event from the data read from the file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param data The user input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The event created."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the task data is invalid."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static Task initEvent(String data) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e details \u003d  Arrays.asList(data.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d details.get(2).trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String at \u003d details.get(3).trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Task event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String done \u003d details.get(1).trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        initCheckDone(event, done);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getAt() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String value;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (atDate !\u003d null \u0026\u0026 atTime !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d DateTime.getDateString(atDate) + \" \" + DateTime.getTimeString(atTime);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (atDate !\u003d null \u0026\u0026 atTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d DateTime.getDateString(atDate);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d at;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private String getAtData() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String value;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (atDate !\u003d null \u0026\u0026 atTime !\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d DateTime.getDateData(atDate) + \" \" + DateTime.getTimeData(atTime);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (atDate !\u003d null \u0026\u0026 atTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d DateTime.getDateData(atDate);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            value \u003d at;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return atDate !\u003d null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public boolean hasTime() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return atTime !\u003d null;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return atDate;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return atTime;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a string of the details of the event to be printed for the Ui."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The details of the event."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getAt() + \")\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the details of the event to be saved in the file."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The details of the event."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"E\" + SEPARATOR + super.getData() + SEPARATOR + getAtData();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 149
    }
  },
  {
    "path": "src/main/java/duke/task/Schedulable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * A class which has this interface is able to be scheduled according to date and/or time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public interface Schedulable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns true if the Schedulable has a date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return true if date is not null."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    boolean hasDate();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns true if the Schedulable has a time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return true if time is not null."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    boolean hasTime();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the date of the Schedulable."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return date in LocalDate."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    LocalDate getDate();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the time of the Schedulable."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return time in LocalTime."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    LocalTime getTime();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 38
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * The Task class and its subclasses represents a task containing a description and an indicator of whether it is done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String DONE \u003d \"1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final String NOT_DONE \u003d \"0\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Used by subclasses to set description, done state and tasktype."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected Task(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method sets the isDone variable of the task object to true."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method sets the isDone variable of the task object to true if it is done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if data of done state is invalid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    protected static void initCheckDone(Task task, String done) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (done.compareTo(DONE) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (done.compareTo(NOT_DONE) !\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_TASK_DATA);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the corresponding icon depending on isDone."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return TICK if isDone is true, else CROSS."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        // return tick or X symbols"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return (isDone ? TICK : CROSS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return description."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the full details of the task when saving."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return a string containing isDone and the description of the task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return (isDone ? 1 : 0) + SEPARATOR + description;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the details of the task to be printed in the command line."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The details of the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 86
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Represents a list containing all of the tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static final int MAX_SIZE \u003d 100;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new TaskList instance by creating an empty ArrayList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new TaskList instance and storing the tasks in an ArrayList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param tasks The tasks read from the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        loadTaskList(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method adds a task to the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param task The task to be added to the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException when list reaches MAX_SIZE."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void addTask(Task task) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (taskList.size() \u003d\u003d MAX_SIZE) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.FULL_TASK_LIST);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void loadTaskList(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (String task : tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            loadTask(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private void loadTask(String task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            switch (task.charAt(0)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            case Todo.CHAR_IDENTIFIER:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                taskList.add(Todo.initTodo(task));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            case Deadline.CHAR_IDENTIFIER:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                taskList.add(Deadline.initDeadline(task));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            case Event.CHAR_IDENTIFIER:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                taskList.add(Event.initEvent(task));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } catch (IndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            // Invalid task data, skips to the next entry"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method marks a task in the list as done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param index The index of the task in the list to be marked as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void markTaskDone(int index) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the the data of all of the tasks in the list to be saved in the file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the data of all the tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            data.append(task.getData()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return data.toString().trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the number of tasks in the list"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the size of the taskList."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns task based on the index."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param index The index of the task in the list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return Task The task with the corresponding index in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the taskList."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The taskList."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * This method deletes the task from the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param task The task to be deleted."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public void deleteTask(Task task) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 129
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " * Enumeration of the different task types: todo, deadline, event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a string of the task type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return the string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String task \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            task \u003d Todo.TODO_KW;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            task \u003d Event.EVENT_KW;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            task \u003d Deadline.DEADLINE_KW;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import duke.exception.DukeExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * The Todo class represents a type of task which contains a description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final String TODO_KW \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static final char CHAR_IDENTIFIER  \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Constructs a new Todo instance by storing the given description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param description The description of the todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the description detected in the user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param input The user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the description is empty or the input format is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static String getDescription(String input) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d input.substring(TODO_KW.length());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        ensureValidTodoInput(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return description.trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    private static void ensureValidTodoInput(String description) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.EMPTY_DESCRIPTION, TaskType.TODO);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        } else if (!description.startsWith(\" \")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "            throw new DukeException(DukeExceptionType.INVALID_TASK_FORMAT, TaskType.TODO);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Creates and returns a todo from the data read from the file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @param data The user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The todo created."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @throws DukeException if the task data is invalid."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public static Task initTodo(String data) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        List\u003cString\u003e details \u003d Arrays.asList(data.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String description \u003d details.get(2).trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        String done \u003d details.get(1).trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        initCheckDone(todo, done);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns a string of the details of the todo to be printed for the Ui."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The details of the todo."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * Returns the details of the todo to be saved in the file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     * @return The details of the todo."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "        return \"T\" + SEPARATOR + super.getData();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 80
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "jello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo adf asdf asdf"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline asdf"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline /by asdf"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline asdf /by"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadlineadsf/byasdf"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline asdf/byasdf"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadlineasdf /byasdf"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadlineasdf/by asdf"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline adsf /byasdf"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline asdf/by asdf"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadlineasdf /by asdf"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline asdf /at asdf"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline asddf /by asdf"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline asdf dsfgs /by asdf asdf"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  event asdf"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event /at asdf"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event asdf /at"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  eventasdf/atasdf"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event asdf/atasdf"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "eventasdf /atasdf"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "eventasdf/at asdf"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event asdf /atasdf"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event asdf/at asdf"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "eventasdf /at asdf"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event asdf /by asdf"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event asddf /at asdf"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event asdf asdf /at asdf asdf"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo sdfasfa"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo adsfasfasf"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  todo adsfasof"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdfasfa"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "done 50"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  done 5"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "done 4.5"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "done rrw"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event jaksdfj /at 1/1/1223 1234"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event jaksdfj /at 1/1/1223 0834"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event jaksdfj /at 1/1/1223 834"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event jaksdfj /at 1/1/1223"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event jaksdfj sdf /at 12/12/1223"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event jaksdfj /at 1/1/1223 asdf"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event jaksdfj /at 1/1/1223 12342"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event jaksdfj /at 13/13/1223 1234"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "event jaksdfj /at 1/1/13 1234"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline jaksdfj /by 1/1/1223 1234"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline jaksdfj /by 1/1/1223 0834"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline jaksdfj /by 1/1/1223 834"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline jaksdfj /by 1/1/1223"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline jaksdfj sdf /by 12/12/1223"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline jaksdfj /by 1/1/1223 asdf"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline jaksdfj /by 1/1/1223 12342"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline jaksdfj /by 13/13/1223 1234"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "deadline jaksdfj /by 1/1/13 1234"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asddf"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "  todo asdf"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asddf"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "todo asdf"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "list"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete1"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete  1"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete 123"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "delete -12"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "find asddf"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "find ddf"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "find sjdfasfdiab"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "date 1/1/1223"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "date 13/13/1223"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "date 1/1/1225"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "date 1/1/1223 1234"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "date 1/1/1223 1334"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "date asdf"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 159
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\command\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xingrong123"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "xingrong123": 1,
      "-": 37
    }
  }
]
