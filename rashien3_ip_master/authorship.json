[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_LINEBREAK \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_GREETING \u003d MESSAGE_LINEBREAK + \"\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            \"What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            MESSAGE_LINEBREAK;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_ERROR_INVALID_COMMAND \u003d \" is not a valid command\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_ERROR_DONE \u003d \"ERROR: \u0027done\u0027 must be followed by an integer\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_ERROR_TODO \u003d \"ERROR: \u0027todo\u0027 must be followed by a desciption\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_ERROR_DEADLINE \u003d \"ERROR: \u0027deadline\u0027 must be followed by a desciption\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_ERROR_DEADLINE_MISSING_BY \u003d \"ERROR: \u0027deadline\u0027 must have a /by tag followed by a time\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_ERROR_EVENT \u003d \"ERROR: \u0027event\u0027 must be followed by a desciption\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_ERROR_EVENT_MISSING_AT \u003d \"ERROR: \u0027event\u0027 must have a /at tag followed by a time\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String MESSAGE_ERROR_EMPTY_LIST \u003d \"ERROR: You have no tasks!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String TAG_BY \u003d \"/by \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final String TAG_AT \u003d \"/at \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static String inputCommand \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static String getFirstWordOf(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if(input.contains(\" \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return inputCommand.substring(0,inputCommand.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return input;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static String removeFirstWordOf(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if(input.contains(\" \")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return inputCommand.substring(inputCommand.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printList() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if(taskList.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println( (i+1) + \". \" + t.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void markDone(String inputCommand) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Task selectedTask;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            taskNumber \u003d Integer.parseInt(removeFirstWordOf(inputCommand)) - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(MESSAGE_ERROR_DONE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            selectedTask \u003d taskList.get(taskNumber);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"ERROR: task \u0027\" + (taskNumber + 1) + \"\u0027 does not exist\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        selectedTask.setDone(true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + selectedTask.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void addTodo(String inputCommand) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String todoName \u003d removeFirstWordOf(inputCommand);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if(todoName.equals(\"\")){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Task t \u003d new ToDo(todoName);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        addTask(t);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void addDeadline(String inputCommand) throws DukeException{"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String deadlineCommand, description \u003d \"\", by \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int byIndex;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        deadlineCommand \u003d removeFirstWordOf(inputCommand);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if(deadlineCommand.equals(\"\") || deadlineCommand.equals(TAG_BY.trim())) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            byIndex \u003d inputCommand.indexOf(TAG_BY);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            description \u003d inputCommand.substring(9, byIndex - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            by \u003d inputCommand.substring(byIndex + 4);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if(by.equals(\"\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | DukeException e){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(MESSAGE_ERROR_DEADLINE_MISSING_BY);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Task t \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        addTask(t);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void addEvent(String inputCommand) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String description \u003d \"\", at \u003d \"\", eventCommand;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int atIndex;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        eventCommand \u003d removeFirstWordOf(inputCommand).trim();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if(eventCommand.equals(\"\") || eventCommand.equals(TAG_AT.trim())){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            atIndex \u003d inputCommand.indexOf(TAG_AT);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            description \u003d inputCommand.substring(6, atIndex - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            at \u003d inputCommand.substring(atIndex + 4);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if(at.equals(\"\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | DukeException e){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(MESSAGE_ERROR_EVENT_MISSING_AT);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Task t \u003d new Event(description, at);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        addTask(t);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void addTask(Task t){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\\t\" + t.toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"Now you have \" + (++numberOfTasks) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void parseCommand(String inputCommand) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String firstWord \u003d getFirstWordOf(inputCommand);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(MESSAGE_LINEBREAK);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            switch(firstWord){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } catch(DukeException e){"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    System.out.println(MESSAGE_ERROR_EMPTY_LIST);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                markDone(inputCommand);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    addTodo(inputCommand);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } catch(DukeException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    System.out.println(MESSAGE_ERROR_TODO);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    addDeadline(inputCommand);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } catch(DukeException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    System.out.println(MESSAGE_ERROR_DEADLINE);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    addEvent(inputCommand);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } catch(DukeException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    System.out.println(MESSAGE_ERROR_EVENT);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"\u0027\" + firstWord + \"\u0027\" + MESSAGE_ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(MESSAGE_LINEBREAK);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(MESSAGE_GREETING);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            inputCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            parseCommand(inputCommand);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } while (!inputCommand.equals(\"bye\"));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(MESSAGE_BYE);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(MESSAGE_LINEBREAK);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "rashien3": 204
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 3
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 15
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 15
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    protected static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void setDone(boolean isDone){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public int getNumberOfTasks(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return numberOfTasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 34
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "event book eating competition /at June 7th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "rashien3": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "if [ -e \"./ACTUAL.TXT\"]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "then"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "fi"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "rashien3": 3
    }
  }
]
