[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "# duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "WYing333": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1. [Introduction](#1-introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "2. [Quick Start](#2-quick-start)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "3. [Features and Usage](#3-features-and-usage)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    3.1 [Add ToDo: `todo`](#31-add-todo-todo)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    3.2 [Add Event: `event`](#32-add-event-event)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    3.3 [Add Deadline: `deadline`](#33-add-deadline-deadline)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    3.4 [List All Tasks: `list`](#34-list-all-list)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    3.5 [Mark as Done: `done`](#35-mark-as-done-done)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    3.6 [Delete task: `delete`](#36-delete-task-delete)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    3.7 [Find by key word: `find`](#37-find-by-key-word-find)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    3.8 [Exit the program: `bye`](#39-exit-the-program-bye)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "4. [Command summary](#4-command-summary)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "5. [Additional Notes](#5-additional notes)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Duke is a task management application, which is designed for users who prefer "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "to work with a Command Line Interface (CLI) to manage their tasks efficiently. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 2. Quick Start "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1. Download and install Java 11 or above on your machine."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "2. Download the latest ip.jar file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "3. Copy the .jar file into a folder that you wish to use as the home directory"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "   of this application"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "4. Open command line app and go the home directory of the application and run"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    java -jar ip.jar"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 3. Features and Usage"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### Command Format"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Command word is case-sensitive e.g. `todo` cannot be entered as `TODO`."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.1 Add Todo: `todo`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Add a `todo` task to the task list\t"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: ```todo \u003cTask Description\u003e```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```todo return books```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": "   [T][✘] return books"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.2 Add Event: `event`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Add a `event` task to the task list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: ```event \u003cTask Description\u003e /at \u003cDate\u003e```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WYing333"
        },
        "content": "This supports date input of multiple format. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WYing333"
        },
        "content": "If the input is not in the listed formats, the "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WYing333"
        },
        "content": "exact user input will be not be recognised as a valid date "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WYing333"
        },
        "content": "and the code will print \"null\" instead of the exact user input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example 1"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```event CS2113 tutorial /at 2020 02 02```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WYing333"
        },
        "content": "[E][✘] CS2113 tutorial (at: 2020-02-02T00:00)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example 2"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```event CS2113 quiz /at Monday```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WYing333"
        },
        "content": "[E][✘] CS2113 quiz (at: null)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.3 Add Deadline: `deadline`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Add a `deadline` task to the task list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: ```deadline \u003cTask Description\u003e /by \u003cDate\u003e``` "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WYing333"
        },
        "content": "This supports date input of multiple format."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WYing333"
        },
        "content": "If the input is not in the listed formats, the "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WYing333"
        },
        "content": "exact user input will be not be recognised as a valid date "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WYing333"
        },
        "content": "and the code will print \"null\" instead of the exact user input."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```deadline IP submission /by 20190302```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WYing333"
        },
        "content": "[D][✘] IP submission (by: 2019-03-02T00:00)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```deadline go out to eat /by today```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WYing333"
        },
        "content": "[D][✘] go out to eat (by: null)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.4 List All Tasks: `list`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Display all the task."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: ```list```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```list```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1. [T][✘] return books"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WYing333"
        },
        "content": "2. [E][✘] CS2113 tutorial (at: 2020-02-02T00:00)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.5 Mark as Done: `done`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Mark a task as done."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: ```done \u003cindex\u003e```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The index corresponds to the index of the task when they are"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WYing333"
        },
        "content": "displayed in the list command. If the index falls out of the"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WYing333"
        },
        "content": "range, no action will be performed."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```done 1```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WYing333"
        },
        "content": "[T][✓] return books"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.6 Delete task: `delete`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Delete a task."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: ```delete \u003cindex\u003e```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The index corresponds to the index of the task when they are"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WYing333"
        },
        "content": "displayed in the list command. If the index falls out of the"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WYing333"
        },
        "content": "range, no action will be performed."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```delete 1```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Got it. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WYing333"
        },
        "content": "[T][✓] return books"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.7 Find by key word: `find`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Find all tasks with description that contains the query key word."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: ```find \u003ckey word\u003e```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example "
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```find tutorial```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1. [E][✘] CS2113 tutorial (at: 2020-02-02T00:00)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.8 Exit the program: `bye`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Exit the program."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```bye```"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WYing333"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 4. Command Summary"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|Command | Description|"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|:------------:|:------------|"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|todo | ```todo \u003ctodo description\u003e```|"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|event | ```event \u003cevent description\u003e /at \u003cdate\u003e```|"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|deadline | ```deadline \u003cdeadline description\u003e /by \u003cdate\u003e```|"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|list | ```list```|"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|done | ```done \u003cindex\u003e```|"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|delete | ```delete \u003cindex\u003e```|"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|find | ```find \u003ckey word\u003e```|"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|bye| ```bye```|"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 5. Additional Notes"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Here are all 3 valid formats."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    `yyyyMMdd`"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    `yyyy-MM-dd`"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    `yyyy MM dd`"
      }
    ],
    "authorContributionMap": {
      "WYing333": 201,
      "-": 11
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "D | 1 |  ip submission  | null"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": "E | 0 |  go out to play | null"
      }
    ],
    "authorContributionMap": {
      "WYing333": 2
    }
  },
  {
    "path": "src/main/java/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "T | 0 |  go home"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": "D | 0 |  ip submission  |  20190808"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "T | 1 |  go out to play"
      }
    ],
    "authorContributionMap": {
      "WYing333": 3
    }
  },
  {
    "path": "src/main/java/duke/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private static final List\u003cDateTimeFormatter\u003e dformaters \u003d Arrays.asList("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            DateTimeFormatter.ofPattern(\"yyyyMMdd\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            //DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            DateTimeFormatter.ofPattern(\"yyyy MM dd\") );"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Transfers a given string following one of the accepted format into date-time format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param in String input to be transferred"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return time in the form of LocalDateTime or null if no String in is found"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static LocalDateTime parseDate(String in) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        for(DateTimeFormatter df : dformaters) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                return LocalDate.parse(in, df).atStartOfDay();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 35
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import duke.exception.emptyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import duke.exception.nonMatchException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static int numOfTasks \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static boolean isTerminated \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        showWelcomeScreen();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            openFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                File f \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                if (f.createNewFile()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                    System.out.println(\"Create a new file.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                System.out.println(\"Unable to create file.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        while (!isTerminated) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            parse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Shows the welcome screen of the Duke."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void showWelcomeScreen() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.Duke\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Prints the line separator to make the output cleaner to users."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void printSeparator() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String separator\u003d\"____________________________________________________________\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(separator);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Prints the successfully added message to users."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param tasks the ArrayList of Task class used in the whole program."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param numOfTasks the total number of tasks in the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void printSuccessfullyAddedMessage (ArrayList\u003cTask\u003e tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(tasks.get(numOfTasks).toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Now you have \" + (numOfTasks+1) + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Opens the file--duke.txt."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @throws FileNotFoundException If the file is not found."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void openFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        File f \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            parse(s.nextLine());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Writes to the file--duke.txt."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param filePath path of the file--duke.txt."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private static void writeFile(String filePath) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        clearFile();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                fw.write(tasks.get(i).writeToFile()+\"\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }catch (IOException e){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(\"\\n\\tTrouble with IO stream.\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Clears the file."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void clearFile(){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            File f \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            fw.write(\"\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(\"\\n\\tTrouble with IO stream.\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Deals with the input from the uses and the file and reacts to the input."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param input the input string from the users and the file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void parse (String input) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            if(input.equals(\"done\") || input.equals(\"todo\") || input.equals(\"event\") || input.equals(\"deadline\")){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                throw new emptyException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                bye();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                list(numOfTasks, tasks);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                markDone(input, tasks);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } else if (input.contains(\"todo\")||input.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                addToDo(input, tasks, numOfTasks);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                numOfTasks++;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } else if (input.contains(\"deadline\")||input.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                addDeadline(input, tasks, numOfTasks);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                numOfTasks++;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } else if (input.contains(\"event\")||input.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                addEvent(input, tasks, numOfTasks);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                numOfTasks++;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                deleteTask(input);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } else if (input.contains(\"find \")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                find(input);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                throw new nonMatchException();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        } catch (nonMatchException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            printSeparator();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }catch (emptyException ex) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            printSeparator();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Lists all the tasks to the users."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param numOfTasks the total number of tasks in the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param tasks the ArrayList of Task class used in the whole program."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void list(int numOfTasks, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(\"Your list is empty.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(\"Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            for (int j \u003d 0; j \u003c numOfTasks; j++) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                System.out.println((j + 1) + \".\" + tasks.get(j).toString());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Adds task to the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param input the input string from the users and the file."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param tasks the ArrayList of Task class used in the whole program."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param numOfTasks the total number of tasks in the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void addTask (String input, ArrayList\u003cTask\u003e tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        tasks.add(new Task(input));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"added: \" + tasks.get(numOfTasks).getName());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Deletes task from the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param input the input string from the users."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void deleteTask (String input) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        int dividerPosition \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        int index \u003d Integer.parseInt(input.substring(dividerPosition+1)) - 1;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(tasks.get(index).toString());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        numOfTasks--;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Now you have \" + (numOfTasks) +\" task(s) in the list.\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Adds ToDo task from the users and the file to the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param in the input string from the users and the file."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param tasks the ArrayList of Task class used in the whole program."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param numOfTasks the total number of tasks in the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void addToDo(String in, ArrayList\u003cTask\u003e tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        boolean isFromFile \u003d in.startsWith(\"T\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            String[] sentences\u003din.split(\" \\\\| \");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            if (sentences[0].equals(\"T\")){"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                if (sentences[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            tasks.add(new ToDo(sentences[2]));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            tasks.add(new ToDo(in.replace(\"todo\", \"\")));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        tasks.get(numOfTasks).setDone(isDone);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSuccessfullyAddedMessage(tasks, numOfTasks);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Adds Deadline task from the users and the file to the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param in the input string from the users and the file."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param tasks the ArrayList of Task class used in the whole program."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param numOfTasks the total number of tasks in the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void addDeadline(String in, ArrayList\u003cTask\u003e tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        boolean isFromFile \u003d in.startsWith(\"D\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            String[] sentences\u003din.split(\" \\\\| \");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            if (sentences[0].equals(\"D\")){"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                if (sentences[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            tasks.add(new Deadline(sentences[2],sentences[3]));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            String[] inputDeadline \u003d in.split(\"/\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            tasks.add(new Deadline(inputDeadline[0].replace(\"deadline\", \"\"),"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                    inputDeadline[1].replace(\"by\", \"\")));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        tasks.get(numOfTasks).setDone(isDone);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSuccessfullyAddedMessage(tasks, numOfTasks);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Adds Event task from the users and the file to the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param in the input string from the users and the file."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param tasks the ArrayList of Task class used in the whole program."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param numOfTasks the total number of tasks in the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void addEvent(String in, ArrayList\u003cTask\u003e tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        boolean isFromFile \u003d in.startsWith(\"E\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            String[] sentences\u003din.split(\" \\\\| \");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            if (sentences[0].equals(\"E\")){"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                if (sentences[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            tasks.add(new Event(sentences[2],sentences[3]));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            String[] inputEvent \u003d in.split(\"/\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            tasks.add(new Event(inputEvent[0].replace(\"event\", \"\"),"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                    inputEvent[1].replace(\"at\", \"\")));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        tasks.get(numOfTasks).setDone(isDone);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSuccessfullyAddedMessage(tasks, numOfTasks);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Marks the specific task as Done."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param in the input string from the users."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param tasks the ArrayList of Task class used in the whole program."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void markDone(String in, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        int dividerPosition \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String number \u003d in.substring(dividerPosition+1);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        int i \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        i \u003d i - 1;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        tasks.get(i).markAsDone();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(tasks.get(i).toString());"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Finds the specific string provided by the users from the ArrayList of Task--tasks."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param in the input string from the users."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void find(String in) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String findName \u003d in.replace(\"find\", \"\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        tasks.stream()"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                .filter(t -\u003e t.getName().contains(findName))"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                .findAny()"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                .ifPresent(System.out::println);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Prints things that are related to exit the program."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        writeFile(\"duke.txt\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        isTerminated \u003d true;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 333,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/exception/emptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class emptyException extends java.lang.Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/nonMatchException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class nonMatchException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import duke.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public LocalDateTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        time \u003d DateParser.parseDate(by.trim());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Writes to the file in the specific format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the formatted string of Deadline task that will be stored in the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String done\u003d\"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (super.getDone()) done\u003d\"1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return \"D | \"+done+\" | \"+super.getName()+\" | \"+ time ;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import duke.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public LocalDateTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        time \u003d DateParser.parseDate(at.trim());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Writes to the file in the specific format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the formatted string of Event task that will be stored in the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String done\u003d\"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (super.getDone()) done\u003d\"1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return \"E | \"+done+\" | \"+super.getName()+\" | \"+ time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Gets the status icon of the specific task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Marks the specific task as Done and prints the message to notify the users."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Set the specific task as Done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param value the status of the specific task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public void setDone(boolean value) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        isDone\u003dvalue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Gets the status of the specific task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return true or false."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Gets the description of the specific task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return String which is the description of the specific task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Writes to the file in the specific format."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the formatted string of task that will be stored in the file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String writeToFile(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WYing333": 68
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Writes to the file in the specific format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the formatted string of ToDo task that will be stored in the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String done\u003d\"0\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (super.getDone()) done\u003d\"1\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return \"T | \"+done+\" | \"+super.getName();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "deadline task2 /by 3.10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "event task3 /at this Friday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WYing333": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "WYing333": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#java -classpath ../bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "WYing333": 3,
      "-": 36
    }
  }
]
