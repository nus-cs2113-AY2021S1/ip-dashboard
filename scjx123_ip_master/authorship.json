[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.InsufficientArgumentException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    What can i do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String userCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            userCommand \u003d Command.getCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Command.matchCommand(userCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } catch (InsufficientArgumentException iae) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                System.out.println(\"     OPPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } catch (InvalidCommandException ie) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                System.out.println(\"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                System.exit(1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 23,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/InsufficientArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class InsufficientArgumentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 5
    }
  },
  {
    "path": "src/main/java/duke/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 5
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.InsufficientArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static String getCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String userCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        userCommand \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void matchCommand(String userCommand) throws InsufficientArgumentException, InvalidCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(userCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String tokenHolder \u003d st.nextToken();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        int dividerPosition \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String dateTime \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if(userCommand.contains(\"/\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dividerPosition \u003d userCommand.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dateTime\u003duserCommand.substring(dividerPosition+1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            userCommand\u003duserCommand.substring(userCommand.indexOf(\u0027 \u0027),dividerPosition);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if(st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                userCommand \u003d userCommand.substring(userCommand.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        switch (tokenHolder) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.printList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            int itemNum \u003d Integer.parseInt(st.nextToken())-1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if(Task.itemExist(itemNum)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Task.markAsDone(itemNum);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if(!st.hasMoreTokens()){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            new Todo(userCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.printTask();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if(!st.hasMoreTokens()){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            new Deadline(userCommand,dateTime);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.printTask();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if(!st.hasMoreTokens()){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            new Event(userCommand,dateTime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.printTask();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": "//            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 80
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Deadline(String description,String dateTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if(!dateTime.isEmpty()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dateTime\u003ddateTime.replaceFirst(\" \",\": \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            this.dateTime \u003d \"(\" + dateTime + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"[D]\" + super.toString() + dateTime ;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if(!dateTime.isEmpty()) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dateTime\u003ddateTime.replaceFirst(\" \",\": \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            this.dateTime \u003d \"(\"+ dateTime +\")\" ;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"[E]\" + super.toString() + dateTime ;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    String dateTime \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        list.add(this);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return (\"[\"+getStatusIcon()+\"]\" +getDescription());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static boolean itemExist(int num) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return list.get(num) !\u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void markAsDone(int num) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        list.get(num).isDone\u003dtrue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    [\"+list.get(num).getStatusIcon()+\"]\" + list.get(num).getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        int i \u003d1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"     Here are the task in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        for(Task t : list) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     \"+i+\".\"+t.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void printTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //retrieve the last item on the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Task t \u003d list.get(list.size()-1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"       \"+t.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"     Now you have \"+list.size()+\" task in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 12
    }
  }
]
