[
  {
    "path": "src/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.DukeException.InsufficientArgumentException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.DukeException.InvalidCommandException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static boolean exitStatus \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static void parseCommand(String userCommand){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(userCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        int dividerPosition;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String dateTime \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (userCommand.contains(\"/\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dividerPosition \u003d userCommand.indexOf(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dateTime \u003d userCommand.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            userCommand \u003d userCommand.substring(userCommand.indexOf(\u0027 \u0027), dividerPosition);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            matchCommand(userCommand, dateTime,st);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }catch (InsufficientArgumentException iae) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"iae\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (InvalidCommandException ie) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"ie\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (NoSuchElementException ne){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"ne\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (IndexOutOfBoundsException iobe){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"iobe\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"e\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (NumberFormatException nfe){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"nfe\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static void matchCommand(String userCommand,String dateTime,StringTokenizer st) throws InsufficientArgumentException, InvalidCommandException,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            NoSuchElementException, IOException, NumberFormatException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String tokenHolder \u003d st.nextToken();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        switch (tokenHolder) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            int itemNum \u003d Integer.parseInt(st.nextToken()) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (Task.itemExist(itemNum)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Task.removeItem(itemNum);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.printList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            itemNum \u003d Integer.parseInt(st.nextToken()) - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (Task.itemExist(itemNum)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Task.markAsDone(itemNum);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Storage.writeFile(Task.getList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            exitStatus\u003dtrue;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (!st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            new Todo(userCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.printTask();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (!st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            new Deadline(userCommand, dateTime);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.printTask();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (!st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            new Event(userCommand, dateTime);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.printTask();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static boolean isExit(){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return exitStatus;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 105
    }
  },
  {
    "path": "src/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.DukeException.InvalidCommandException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch ( IOException io) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                CommandParser c \u003d new CommandParser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                CommandParser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }catch(InvalidCommandException ie){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                ui.showError(\"ie\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            finally {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 45
    }
  },
  {
    "path": "src/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    //get home directory"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static String[] dir\u003dnew String[2];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String filename \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String filedir \u003d \"data\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //Path indicated by user;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        dir\u003dfilePath.split(\"/\",2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        filename\u003ddir[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        filedir\u003ddir[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    //create a path"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static Path p1 \u003d Paths.get(home, filedir);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static Path p2 \u003d Paths.get(home, filedir, filename);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * loadedTask[0] indicates the type of task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * loadedTask[1] indicates done or not done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * loadedTask[2] indicates the task description."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static List\u003cString\u003e load() throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (!Files.exists(p2)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Files.createFile(p2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return Files.readAllLines(p2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void writeFile(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        FileWriter fw \u003d new FileWriter(p2.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //String[] s\u003d new String[list.size()];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //Writing Data to specified filePath"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        for(Task t : list) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            fw.write(t.getType() + \" \" + t.getStatusIcon() + \" \" + t.getDescription() + \" \" + t.getDateTime().replaceFirst(\":\",     \"\") + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 53
    }
  },
  {
    "path": "src/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.DukeException.InvalidCommandException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static String readCommand() throws InvalidCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String userCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        userCommand \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if(userCommand\u003d\u003dnull){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void showWelcome(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    What can i do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void showLoadingError(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"Unable to load file.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void showError(String error){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        switch(error){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"iae\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OPPS!!! Description cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"ie\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"ne\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OOPS!!! I\u0027m sorry, but that is an invalid command :-(\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"iobe\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OOPS!!! I\u0027m sorry, task does not exist in the list :-(\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"e\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Unable to write.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"nfe\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OOPS!!! That is an invalid format!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 62
    }
  },
  {
    "path": "src/duke/DukeException/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 12
    }
  },
  {
    "path": "src/duke/DukeException/InsufficientArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class InsufficientArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 5
    }
  },
  {
    "path": "src/duke/DukeException/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 7
    }
  },
  {
    "path": "src/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Task.commandType;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Deadline(String description,String dateTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if(!dateTime.isEmpty()) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            this.dateTime\u003ddateTime.replaceFirst(\" \",\": \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.type \u003d commandType.D;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"[\" +this.type+ \"]\" + super.toString() + \"(\" + dateTime + \")\" ;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 18
    }
  },
  {
    "path": "src/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Task.commandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if(!dateTime.isEmpty()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dateTime\u003ddateTime.replaceFirst(\" \",\": \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.type\u003dcommandType.E;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"[\" + this.type + \"]\" + super.toString() + \"(\" + dateTime + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 19
    }
  },
  {
    "path": "src/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    protected commandType type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    String dateTime \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public enum commandType {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        T, D, E"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        list.add(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void loadData(List\u003cString\u003e lineArray) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        for (String str : lineArray) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if(str!\u003dnull) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                String[] loadedTask \u003d str.split(\" \",3);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                String commandDescription;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                int index\u003d0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                if(loadedTask[2].contains(\"/\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    index \u003d loadedTask[2].indexOf(\"/\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    commandDescription \u003d loadedTask[2].substring(0, index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    commandDescription \u003d loadedTask[2];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                String loadedDateTime \u003d loadedTask[2].substring(index + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                switch (loadedTask[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    //creating a new object which automatically adds to the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    Todo object_T \u003d new Todo(commandDescription);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    markAsDone(object_T, loadedTask[1].equals(\"true\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    Event object_D \u003d new Event(commandDescription, loadedDateTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    markAsDone(object_D, loadedTask[1].equals(\"true\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    Deadline object_E \u003d new Deadline(commandDescription, loadedDateTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    markAsDone(object_E, loadedTask[1].equals(\"true\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void removeItem(int num) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Task t \u003d list.get(num);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        list.remove(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"     Now you have \" + list.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static boolean itemExist(int num) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return list.get(num) !\u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void markAsDone(Task task, boolean logic) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        task.isDone \u003d logic;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void markAsDone(int num) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        list.get(num).isDone \u003d true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    \" + list.get(num).toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"     Here are the task in your list:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     \" + i + \".\" + t.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void printTask() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //Retrieve the last item on the list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Task t \u003d list.get(list.size() - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"     Now you have \" + list.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"]\" + getDescription());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return (isDone ? \"Completed\" : \"Uncompleted\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public commandType getType() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 128
    }
  },
  {
    "path": "src/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public TaskList(List\u003cString\u003e loadedList){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Task.loadData(loadedList);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 12
    }
  },
  {
    "path": "src/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import duke.task.Task.commandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.type\u003dcommandType.T;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"[\" + this.type + \"]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 15
    }
  }
]
