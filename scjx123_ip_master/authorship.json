[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](Architecture Diagram.PNG)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u003c!--stackedit_data:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "eyJoaXN0b3J5IjpbLTU4MTI2MjQ2MiwtMTMzMDMyMDk3NSw5OT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "QwMzU1NjgsLTU4MTI2MjQ2MiwtNzQ2NjIzMTE0XX0\u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "--\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 25,
      "scjx123": 5
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    //mainClassName \u003d \"seedu.Duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                \"Class-Path\": configurations.compile.collect { it.getName() }.join(\u0027 \u0027))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    archiveBaseName \u003d \"ip\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "scjx123": 25
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "# About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Johanes Rafael Sudardji | [Github](https://github.com/johanesrafael.git) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kwek Chu Han | [Github](https://github.com/chuhann) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Adi Nata | [Github](https://github.com/) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![](https://avatars2.githubusercontent.com/u/26886705?s\u003d100\u0026v\u003d4) | Li Bozhao | [Github](https://github.com/) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![](https://avatars1.githubusercontent.com/u/60291742?s\u003d100\u0026u\u003d3a1d97f66f94074b478308e1ffdc734fcbf6de61\u0026v\u003d4) | Chan Jian Xiang | [Github](https://github.com/scjx123) | [Portfolio](docs/team/AboutUs.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 10
    }
  },
  {
    "path": "docs/ContactUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "# Contact us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- Bugs reports : If you have noticed any bugs, please make a post in our [issue tracker](https://github.com/AY2021S1-CS2113-T13-2/tp/issues) "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- Email us : You can reach us at our portfolio under \u0027AboutUs\u0027"
      }
    ],
    "authorContributionMap": {
      "scjx123": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## 1. Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**1. Table of content**\\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**2. Introduction**\\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**3. Setting Up**\\"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4. Design**\\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;4.1 Architecture\\"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;4.2 Main Layer\\"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;4.3 UI Layer\\"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;4.4 Command Interpreter Layer\\"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;4.5 Executor Layer\\"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;4.6 Storage Layer\\"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;4.7 Flow of DOMSUN\\"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**5. Implementation**\\"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;5.1 Module Planner Feature\\"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;5.2 Checker Feature\\"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;5.3 Cap Caculator Feature\\"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;5.4 Reminder Feature\\"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;5.5 Postpone Feature\\"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**6. Appendix A Product Scope**\\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**7. Appendix B User Stories** \\"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**8. Appendix C Use Cases** \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**9. Appendix D Non-funcitonal Requirements** \\"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**10. Appendix E Glossary** \\"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**11. Appendix F. Instruction for Manual Testing**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## 2. Introduction"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Domsun is a CLI program that allows users to manage tasks and modules. \u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Users will be able to browse and select modules, create and arrange tasks, add tasks to modules,\u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "create reminders and calculate their MCs / CAPs."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## 3. Setting Up"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Domnus.java` file, right-click it, and choose `Run Domnus.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \u003e Task :compileJava UP-TO-DATE"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \u003e Task :processResources UP-TO-DATE"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \u003e Task :classes UP-TO-DATE"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \u003e Task :Domnus.main()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t\tHello, I\u0027m Domnus. What can I do for you?"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t\tHere are the tasks due within 3 days: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t\tNo task within 3 days from now"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": " Type  `bye` to ensure there is no error saving or creating a new file when exiting. Re-launch and type `help` for all commands available in the program. "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## 4. Design"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 4.1 Architecture"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The **Architecture Diagram** below represents a high-level design overview of the App. Specifically, it is done with an N-tier architectural style, where the higher layers make use of services provided by lower layers. "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](Images/Architecture_Diagram.PNG)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "As shown in the above diagram, user only interacts with the UI layer and their commands, in turn will be passed to next adjacent layer. Given below is a quick overview of each component. "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4.2 Main Layer**\u003cbr\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `main` layer, it contains a single class known as `Domnus`. Its purpose can be split into 3 parts: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "At Start Up: It calls upon the `storage` component to load user\u0027s past data and it also loads the complete module list that is packaged inside the JAR file. \u003cbr\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "At Operating: It connects the relevant component of the program to ensure the program is operating as per the intended logic flow. \u003cbr\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "At Shutdown: It exits the running loop of the program to shutdown the program successfully. \u003cbr\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4.3 UI Layer**\u003cbr\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Main gets user input and displays messages through the use of UI component. "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The UI layer entails the package *visualize*, which contains classes *ColoredString*, *Bitmap*, *UI*, *Cli*, "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "*FancyCli* and enumerations *Color* and *Sprite* in the following structure:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![uml](Images/Package%20visualize.png)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "UI\u0027s interaction with user\u003cbr\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "UI gets user input through *nextline()*, and renders strings as a user-comprehensible interface through "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": "*update(String, Data)*."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "UI\u0027s interaction with the rest of the program\u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "UI passes the user\u0027s input string out to the DOMNUS object, which then passes the string to the Command Interpreter layer."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "UI also reads data from the Data object for refreshing purposes, but does not modify it. "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4.4 Command Interpreter Layer**\u003cbr\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Upon receiving command from the UI, DOMNUS would pass the entire user input into Command Interpreter (CI)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4.5 Execute Layer**\u003cbr\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `Execute` layer carries out the relevant actions required based on the analyzed input. All of the features in the program are stored under this layer which is under the package name `command`. To summarize, this layer is responsible for: "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1) Match the user\u0027s command to the relevant actions."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2) Throw any exception based on errorneous user input/invalid conditions. "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4.6 Storage Layer**\u003cbr\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `Storage` layer loads, saves, and do pre-data processing before performing the two aforementioned action. It is active in 2 phases. "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": "During loading phase: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1) For the user\u0027s task: This layer translates the previously (if any) saved data format into recognizable commands and loads these data as per how the app functions during runtime. "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2) For the module list: This layer conducts simple parsing of the text file containing all the modules and stores them creates individual item known as `SingleModule` before loading them into an arraylist. "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "During saving phase: "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1) For the user\u0027s task: This layer saves any changes that the user made to the task list onto a text file. "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2) For the module list: This layer saves any module marked `TAKEN` by the user onto a text file, together with the relevant module information such as module\u0027s code, and grade attained (if any).  "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4.7 Flow of DOMSUN**\u003cbr\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The sequence diagram below shows the main interaction of classes with each other throughout the whole lifecycle of DOMSUM."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![uml](Images/DOMNUS_Main_Flow.png)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## 5. Implementation\u003cbr\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This section highlights some of our project\u0027s key feature and its implementation. "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.1 Take Feature"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The take mechanism is facilitated by the `TakeAction` class and is extensively used by other classes via inheritance. "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The take mechanism does the following: Comprehends user input and generate target identifiers, "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scjx123"
        },
        "content": "filters the targets from data, and performs the specified operations on the targets. "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `TakeAction` class extends `Action` class, "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scjx123"
        },
        "content": "and internally it stores an arraylist of `Item` object in `targetBackup` field to restore the disruptions to the "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`data` object. Additionally, it implements the following operation: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `prepare()` - Interpret the `ParamNode` arguments and creates target identifiers for the `act()` function. "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scjx123"
        },
        "content": " In `TakeAction` the identifiers are `ArrayList` objects, `codes` and `indices`. "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `act()`- Get the target items from `data` based on identifiers, do `modifyObject()` on each target, and return a "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scjx123"
        },
        "content": " `String` as the execution result for this action."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `modifyObject()` - Performs the actual operation of modifying the target item. In `TakeAction`, it assigns the "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scjx123"
        },
        "content": " `isTaken` field of the target item as `true`."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `getObjectInfo()` - Controls what is the text representation of the target object in the return string."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `safetyCheck()`- Sets the `isBlind` flag if user\u0027s input has a void parameter tree, thereby specifying the default "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "scjx123"
        },
        "content": " mode of action for this command. "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `superAct()` - Returns `super.Act()`. Used as the break out node in the prototype chain for the inherited classes "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "scjx123"
        },
        "content": " to be able to call the method `Act()` of the ancestor. In child classes of `TakeAction`, this method can be overloaded"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "scjx123"
        },
        "content": " to return `super.superAct()` to start the upward propogation."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `superPrepare()` - Returns `super.Prepare()`. Used as the break out node in the prototype chain for the inherited "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scjx123"
        },
        "content": " classes to be able to call the method `Prepare()` of the ancestor. In child classes of `TakeAction`, this method can "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scjx123"
        },
        "content": " be overloaded to return `super.superPrepare()` to start the upward propogation."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how the take mechanism behaves at each step. "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user enters `take 1 2 CS2113`. Once the execute layer (`Command` object) executes the message and calls "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`action.prepare()`, `TakeAction` will begin its `prepare()` operation."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `prepare()` calls its prototype and extracts information from the `ParamNode` tree."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. `prepare()` checks if the command has a void parameter tree. If so, it calls the `safetyCheck()` method to "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "scjx123"
        },
        "content": " perform the default operation (sets the `isBlind` flag and ensure that the `act()` will execute in the `blind` "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "scjx123"
        },
        "content": " mode in this case). Otherwise, it parses the user parameters into `codes` or `indices` depending on "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "scjx123"
        },
        "content": " the most probable interpretations, and throws a custom exception `CommandException` object in case of exceptions."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "scjx123"
        },
        "content": " In this case, `1` and `2` will be added to `indices` and `CS2113` will be added to `codes`."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 4. Next, execute layer will call `action.act()` which causes `TakeAction` to begin its `act()` operation."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 5. `act()` stores the current state of the `data` object into its `flag` field and `targetBackup` field to prevent "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "scjx123"
        },
        "content": "unwanted changes to the `data` object."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 6. `act()` enters either the `blind` mode or the `normal` mode depending on the value of `isBlind`."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 7. If in `blind` mode, `act()` filters out all items in `data` by using the `blindSearch` flag. "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "scjx123"
        },
        "content": "In this case this flag is set to `Constants.SELECTED` to search through all selected items. In the children classes"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "scjx123"
        },
        "content": "of `TakeAction`, however, this variable may be reset to other values to have different blind search behaviours. "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Otherwise, in `normal` mode, `act()` filters out items from `data` based on identifiers, "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "scjx123"
        },
        "content": "in this case `codes` and `indices`."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 8. `act()` loops through all filtered items and calls `modifyObject()` on each of them."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 9. `modidyObject()` modifies the objects of interest, in this case by setting the `isTaken` field to true."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 10. Depending on the result of `modifyObject()`, `act()` parses the suitable string for output through the use of "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "scjx123"
        },
        "content": "a `StringBuilder` object, in the process calling `getObjectInfo()` to get the textual descriptions of the targets."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 11. `act()` restores the previous state to the `data` object using the `flag` field and the `targetBackup` field."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 12. `act()` replaces the string `Constants.TEXT_PLACEHOLDER` in the default output string for TakeAction "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "scjx123"
        },
        "content": "defined in `Constants.messageMap` with the actual result string, and returns it."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Design consideration:**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. Reuseable - functions such as `modyfiObject()` can be overloaded in child classes to achieve different functions."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. Low coupling - `prepare()` is not aware of the program `data`, and `act()` is not aware of the user input."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. Uniform - `TakeAction` as well as all other actions have uniform input and outputs, and can be mapped "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "scjx123"
        },
        "content": "indescriminatively to any `Command` object and executed indifferently."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Aspect : How TakeAction executes**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Alternative 1 (current choice):** calls `getTarget()` method of `data` object using different flags "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "scjx123"
        },
        "content": " to get wanted targets."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    - Pros: Easy to implement and easy to read. Easily extendable by adding more flags in the `getTarget()` method."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    - Cons: Slow. Everytime we `act()` on something, the `data` object needs to do the filtering again."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Alternative 2:** Have many different lists or maps, each stores one category of data"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    - Pros: Fast, no need filtering in most cases."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    - Cons: Harder to implement and extend. Everytime we want a new functionality we would need to create a new list."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.2 Statistic Feature "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The statistic feature is facilitated by the StatsAction class. It extends `Action` class, and it functions under the architectural component `execute`. Internally, it stores an arraylist of Item object in `targetList`. This class implements the following operation: "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `prepare()` - Sets `isMod` flag according to user\u0027s "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `act()`- Gets `targetList` and calculates the raw ratio of the completed items."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `roundedRatioBar()`- Returns a rounded ratio enclosed in square brackets for printing. "
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how the statistic mechanism behaves at each step. "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user enters `stats -mod CS2113`\tonce the execute layer executes the message and calls `action.prepare()` class, `StatsAction` will begin its `prepare()` operation"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `prepare()` looks at the input called `ParamNode args` which is user command processed by Command Intepreter layer, and starts to identify whether user has enter the keyword `mod ` if `userInput` contains the keyword, then `isMod` flag will be set. "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. Next, execute layer will call `action.act()` which causes StatsAction to begin its `act()` operation. If `isMod` flag is set, `act()` will search for the user specified module and get the list of tasks tagged to it."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 5. Once the list of task is obtain, the operation will loop through the task list and count the number of completed task followed by generating a ratio. "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 6. This ratio will be passed into `roundedRatioBar` to return *String* of a rounded ratio to 1 decimal place enclosing it in square brackets. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 7. Now `StatsAction` is completed and it will return this string back to `Command` to store it under the String variable `result`. The `Main` layer will retrieve `result`, before passing it onto `UI` layer for printing. "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![statsDiagram](Images/StatsAction.png)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Design consideration:**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Aspect : How statistics executes**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Alternative 1 (current choice):** Create a separate class and get list of tasks/taken modules\u0027 task and scan through them to calculate statistics"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - Pros: Reduces Coupling and increase testability as a software unit itself. "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - Cons: May have performance issues in terms of memory usage "
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Alternative 2:** initialize statistics as zero and each task contains an aspect called statistics"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - Pros: Will use less memory since the task itself will be deleted. "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - Cons: Stats will be updated constantly even though we do not need it. "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.3 CAP calculator feature"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This feature extends `Action` to execute command given by the user, output are then passed on to `Ui` for display. "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `CalculateCapAction#act()` - Calculate the user CAP based on stored user grades / input modules."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `CalculateCapAction#prepare()` - Parse user command to suitable parameter for `CalculateCapAction#act()` function."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how thecap calculator mechanism behaves at each step."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user executes `cap` command find his current CAP grade. Command is then parsed by `CalculateCapAction#prepare()` to be passed as arguments for `CalculateCapAction#act()`."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `CalculateCapAction#act()` retrieves data from the stored user\u0027s grades."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. `CalculateCapAction#act()` then retrieves module data from the `modulelist.txt` to determine Modular Credit (MC) allocation."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 4. CAP value is calculated and returned to the user through `Ui`."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![cap uml diagram](Images/CalculateCapSequence.png)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.4 Reminder Feature"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The proposed reminder mechanism is facilitated by `ReminderAction`. It extends `Action` and the output is passed onto `UI` for display. Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `ReminderAction#act()`- List out the deadlines and events tasks that are due within 3 days"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how the reminder mechanism behaves at each step."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user executes `reminder` command to list out tasks due within 3 days. Command is then parsed by `ReminderAction#act()`."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `ReminderAction#act` retrieves tasklist data from the user\u0027s list"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. `ReminderAction#act` then sorts the due dates in ascending order"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 4: Tasks due within 3 days are returned to the user through Ui"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The following sequence diagram diagram shows how the reminder operation works"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![Reminder_Sequence_Diagram](Images/ReminderAction_Sequence_Diagram.png)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.5 Remind Feature"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Another proposed manual reminder mechanism is facilitated by `RemindAction`. It extends `Action` to execute command given by the user, output are then passed on to `Ui` for display. "
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `RemindAction#act()` - Set the reminder to be executed on the chosen time."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `RemindAction#prepare()` - Parse user command to suitable parameter for `RemindAction#act()` function."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `RemindAction#getSchedule` - Returns the schedule set by the user."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how the remind mechanism behaves at each step."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user executes `remind [time]` command to set schedule for the reminder. Command is then parsed by `RemindAction#prepare()` to be passed as arguments for `RemindAction#act()`."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `RemindAction#act()` calls `RemindAction#getSchedule` to pass the schedule later in `Ui`."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. The schedule is returned to the user through `Ui`."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![Postpone_Sequence_Diagram](Images/Remind.png)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.6 Snooze Feature"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The proposed snooze mechanism is facilitated by `SnoozeAction`. It extends `Action` to execute command given by the user, output are then passed on to `Ui` for display. "
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `RemindAction#getNewInterval` - Returns the new interval set by the user."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how the snooze mechanism behaves at each step."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user executes `snooze` command to snooze for the reminder. "
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `SnoozeAction#getNewInterval` sets and returns the new interval."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. The new interval is returned to the user through `Ui`."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![Postpone_Sequence_Diagram](Images/Snooze.png)"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.8 Postpone Feature"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The proposed undo/redo mechanism is facilitated by `PostponeAction`. It extends `Action` to execute command given by the user, output are then passed on to `Ui` for display. "
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `PostponeAction#act()` - Postpone the deadline or event task by the chosen parameter."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `PostponeAction#prepare()` - Parse user command to suitable parameter for `PostponeAction#act()` function."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how the postpone mechanism behaves at each step."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user executes `postpone [index]` command to postpone the targeted task. Command is then parsed by `PostponeAction#prepare()` to be passed as arguments for `PostponeAction#act()`."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `PostponeAction#act()` re-sets the date of the targeted task from the stored user\u0027s tasks by default a day."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. `PostponeAction#act()` then updates the stored user\u0027s data."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 4. Postponed target task is returned to the user through `Ui`."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![Postpone_Sequence_Diagram](Images/PostponeAction_Sequence_Diagram.png)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.7 Grade feature"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This extends `TakeAction` to register modules as `isTaken` from `moduleList.txt`, output are then passed on to `Ui` for display. "
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `GradeAction#act()` - Calculate the user CAP based on stored user grades / input modules."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `GradeAction#prepare()` - Parse user command to suitable parameter for `GradeAction#act()` function."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how the grade feature mechanism behaves at each step."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user executes `grade GER1000 A-` command find his current CAP grade. Command is then parsed by `GradeAction#prepare()` to be passed as arguments for `GradeAction#act()`."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `GradeAction#act()` takes in data prepared by `GradeAction#prepare()`."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. `GradeAction#act()` then retrieves module data from the `modulelist.txt` to determine module details."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 4. Grade is attributed to the corresponding modules and response message is returned to the user through `Ui`."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![Grade_Sequence_Diagram](Images/GradeSequence.png)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.8 Focus Feature"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The proposed focus mechanism is facilitated by `FocusAction`. It extends `Action` to execute command given by the user, output are then passed on to `Ui` for display. "
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `FocusAction#act()` - Sets the task flag by the chosen parameter."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* `FocusAction#prepare()` - Parse user command to suitable parameter for `PostponeAction#act()` function."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how the focus mechanism behaves at each step."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user executes `focus [task type]` command to filter based on task type. Command is then parsed by `FocusAction#prepare()` to be passed as arguments for `FocusAction#act()`."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `FocusAction#act()` then sets flag in the data."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. Changed context is returned to inform the user through `Ui`."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![Postpone_Sequence_Diagram](Images/Focus.png)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix A. Product scope"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - has a need to manage significant number of schedules "
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - prefer desktop apps over other types "
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - can type fast"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - prefers typing to mouse interactions "
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - is reasonably comfortable using CLI apps "
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "scjx123"
        },
        "content": "All in one app to track tasks and their dates, monitor productivity and calculate cap. "
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix B. User Stories"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|Priority| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student before start of semester|List the modules MC|Follow the recommended MC |"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student before start of semester|List of module available|Easily Choose which modules to take|"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| ** |Student before start of semester|Find the modules either by keyword, module code or even MC |Easily see the desired modules |"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| ** |Student before start of semester|Select the modules but not taking it yet |Easily whether the MC fits my requirement |"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *  |Student before start of semester|Find out the etails of the Module|To find out more about the modules.|"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student before start of semester|Take the desired modules|Mark the modules that i want to take as taken  |"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student during the semester|Add tasks such as todo,deadline and event into my list|Easily keep track of all the task i have to complete  |"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| ** |Student during the semester|Have a Reminder of which deadline is due soon|Ensure that no task is missed out  |"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student during the semester|Add task to modules |Easily know which tasks belongs to which modules  |"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student during the semester|Delete task once they are completed |Remove unnecessary task on the list |"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| ** |Student after the semester|Calculate the CAP of my individual modules|Easily find out my performance this semester |"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| * |Student after the semester|Clear the list of tasks and modules|Start afresh for the next semester |"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "scjx123"
        },
        "content": "{More to be added}"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix C. Use Cases: "
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This section describes the Use Cases for some of the features implemented in DOMNUS. "
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Use Case: Taking a module "
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "scjx123"
        },
        "content": "MSS:** "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 1. User requests to list all modules "
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 2. DOMNUS shows a list of modules "
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 3. User requests to mark a specific module as \u0027taken\u0027 "
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 4. DOMNUS marks the module as taken"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Use case ends.\u003cbr\u003e"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Extensions** \\"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;3a. The module given is invalid\\"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a.1Use case shows `[NOT FOUND]` message"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes at step 3\\"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;3b. User adds in the wrong module \\"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3b.1The `untake` command can be used to untake the taken module"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Use Case: List MC**"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**MSS:**"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 1. User requests to list total MC on the current list."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 2. DOMNUS shows the total MC of the current list. Default list is entire modules list."
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Use case ends.\u003cbr\u003e "
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Extensions** "
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;1a. User not focusing on the correct list \\"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a1. DOMNUS shows the entire module list total MC instead of the \u0027taken\u0027 list MC"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix D. Non-Functional Requirements"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1.  Should work on any  _mainstream OS_  as long as it has Java  `11`  or above installed."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "scjx123"
        },
        "content": "3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "scjx123"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix E. Glossary"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - N-tier Architectural Style "
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - In the n-tier style, high layers make use of services provided by lower layers. Lower layers are independent of higher layers. "
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - Mainstream OS: Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - Private contact detail "
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix F. Instructions for manual testing"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. Launch and Shutdown "
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1: Download the latest version of  `DOMNUS`  from  [Our Release Page](https://github.com/AY2021S1-CS2113-T13-2/tp/releases/tag/v1.0).\\"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2: Copy the file to the folder you want to use as the home folder for your Mobile Nusmod.\\"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3: Open the Command Prompt if you are running on Windows or Terminal if you are running on Mac OS.\\"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 4: Navigate to your home folder and type  **‘java -jar domnus.jar’**"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2. Switching between Fancy and CLI "
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `fancy`\u003cbr\u003e"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Switches to fancy mode of display \u003cbr\u003e"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `plain`\u003cbr\u003e"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Switches to plain mode of display\u003cbr\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `Fancy` ,`Plain`\u003cbr\u003e"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Error message due to cap sensitive. \u003cbr\u003e"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "scjx123"
        },
        "content": "3. Focusing between different list"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus mod`/`task`/`todo`/`deadline`/`event`/`selected`/`taken`\u003cbr\u003e"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "scjx123"
        },
        "content": "           Expected : Shows the current list you are focused on. No list will be shown. \u003cbr\u003e"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus taken` \u003cbr\u003e"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the current list of modules you have taken. \u003cbr\u003e"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Other incorrect focus commands to try: `focus 0` , `focus what?`, ... (focus on non-existent list) \u003cbr\u003e"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected : Error message due to invalid command. \u003cbr\u003e"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "scjx123"
        },
        "content": "4. List Modules/Task"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus mod` -\u003e `list`\u003cbr\u003e"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the list of modules. \u003cbr\u003e"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus task` -\u003e `list` \u003cbr\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the current list of task. \u003cbr\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "scjx123"
        },
        "content": "5. Find Modules "
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus mod` -\u003e `find Engin`\u003cbr\u003e"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the list of available modules with keyword \u0027Engin\u0027 \u003cbr\u003e"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case:  `focus mod` -\u003e `find 2113`\u003cbr\u003e"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the list of modules with keyword \u00272113\u0027\u003cbr\u003e"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus task`-\u003e find deadline \u003cbr\u003e"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Show list of deadline modules "
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "scjx123"
        },
        "content": "6. Details of Modules "
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `detail CS2113`\u003cbr\u003e"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows Module code, name, mc, and description. \u003cbr\u003e"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `detail 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the information of the 1st task based on the current list focused on. \u003cbr\u003e"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `detail xyz` No detail of such item is found. \u003cbr\u003e"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "scjx123"
        },
        "content": "7. Take Modules "
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `focus mod` -\u003e `take 1 2` \u003cbr\u003e"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Takes the 1st and 2nd module on the module list.\u003cbr\u003e"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `focus task` -\u003e `take 1 2` \u003cbr\u003e"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Task is not module, therefore it cannot be taken.\u003cbr\u003e"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `focus mod` -\u003e `take CS2113` \u003cbr\u003e"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Mark CS2113 as taken.\u003cbr\u003e"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `focus mod` -\u003e `take cs2113`\u003cbr\u003e"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Module not found as inputs are case sensitive. \u003cbr\u003e"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "scjx123"
        },
        "content": "8. Reminder \u003cbr\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `reminder `\u003cbr\u003e"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows task that are due within 3 days. \u003cbr\u003e"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "scjx123"
        },
        "content": "9. Cap Calculation \u003cbr\u003e"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `cap`\u003cbr\u003e"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows you the calculated cap from stored useer data. \u003cbr\u003e"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `cap -m CS2113 A+ EE2026 B CS1010 B-`\u003cbr\u003e"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows you the calculated cap from given input modules. \u003cbr\u003e"
      }
    ],
    "authorContributionMap": {
      "scjx123": 511
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "# Domnus - An easy way to track your schedules!"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](Images/Logo.PNG../UI.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - This is a desktop tasks tracker application. It comes with a fancy and plain mode of display in which user can switch anytime between them."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - It is a Java application intended for students to track their modules, mc, daily task, as well as assignments for the individUser Guide Duke project (Marvel-Themed) "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![Marvel The Avengers Logo Hd Wallpaper - Marvel - 1600x900 - Download HD  Wallpaper - WallpaperTip](https://wi.wallpapertip.com/wsimgs/26-262036_marvel-the-avengers-logo-hd-wallpaper-marvel.jpg)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Duke is a Personal Assistant Chatbot that helps a person to keep track of various tasks. It comes in both CLI and GUI to allow user to vidsual modules. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Domnusuke.java` file, right-click it, and choose `Run Domnusuke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \u003e Task :compileJava UP-TO-DATE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": " "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   \u003e Task :processResources UP-TO-DATNO-SOURCE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \u003e Task :classes UP-TO-DATE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": " "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   \u003e Task :Domnusuke.main()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t_________________________________________________________Hello from"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t\tHello, I\u0027m Domnus. What can I do for you?"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t\tHere a"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* This project uses Gradle for builize the conversation better. "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Upon downloading and running the command `java -jar \u003cip.jar path\u003e` start off by choosing a character to serve as your chat bot assistant. You may type in the one of the following option : "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- `TONY`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- `STEVE`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- `ROMANOFF`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "*Note that caps do not matter. "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "During the chat, you may feel free the tasks due within 3 days: "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t\tNo task within 3 days from now"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \t____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* This project uses Gradle for builo change your chatbot assistant anytime during the chat, by typing in the above names as mentioned. "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. **Adding a new Task** "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tThere are 3 different types of Task that you can add to Duke. Todo, Deadline and Event. Their respective formats are given as below: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t- Adds a \u0027Todo\u0027 task "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t- Format: `todo task_name`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t- Example: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t- Add \u0027eat sushi\u0027 to list as a todo task: `todo eat sushi`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t- Expected output: "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t\u003e     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t\u003e \t[T][Uncompleted] eat sushi "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t\u003e \tNow you have 1 task in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t- Adds a \u0027Deadline\u0027 task "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t- Format: `deadline task_name /by DD/MM/YYYY HHMM`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t- Example:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t- Add \u0027eat sushi\u0027 to list as a deadline task: `deadline eat sushi /by 1/10/2020 1800`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t- Expected output: "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t\u003e     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t\u003e \t[D][Uncompleted] eat sushi by: Oct 1 2020 06:00PM"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t\u003e \tNow you have 2 task in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t    -\tnote that you will only have 2 task in the list, if you have added the previous \u0027todo\u0027 example. "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t- Adds an \u0027Event\u0027 task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t- Format:  `event task_name /by DD/MM/YYYY HHMM`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t- Example:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t- Add \u0027eat sushi\u0027 to list as an event task: `event eat sushi /by 1/10/2020 1800`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t- Expected aoutomation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* If youput: "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t\u003e     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t\u003e \t[E][Uncompleted] eat sushi by: Oct 1 2020 06:00PM"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t\u003e \tNow you have 3 task in the list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2. **List** "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tList out are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`/docs` folder contains a skeleton version of the project documentation."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Steps for publishing documentation to the public: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   If you are using this project template for a team project, go to the team fork on GitHub."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2. Click on the `settings` tab."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scjx123"
        },
        "content": "3. Scroll down to the `GitHub Pages` section."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scjx123"
        },
        "content": "4. Set the `source` as `master branch /docs folder`."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scjx123"
        },
        "content": "5. Optionally, use the `choose a theme` button to choose a theme for your documentation."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Site Map"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* [User Guide](https://github.com/AY2021S1-CS2113-T13-2/tp/blob/master/docs/UserGuide.md)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* [Developer Guide](https://github.com/AY2021S1-CS2113-T13-2/tp/blob/master/docs/DeveloperGuide.md)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* [About Us](https://github.com/AY2021S1-CS2113-T13-2/tp/blob/master/docs/AboutUs.md)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "scjx123"
        },
        "content": "* [Contact Us](https://github.com/AY2021S1-CS2113-T13-2/tp/blob/master/docs/ContactUs.md)ll the task that you have added. "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tFormat: `list`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tExpected output: "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\t"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\u003e  Here are the task in your list: "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\u003e [T][Uncompleted] borrow book "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\u003e [D][Uncompleted] eat sushi by: Oct 1 2020 06:00PM"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t\t\u003e [E][Uncompleted] eat sushi by: Oct 1 2020 06:00PM"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tHowever, do note that for GUI, the display is limited. Hence, the list will be chop off. You may refer to the CLI for the whole list. "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "scjx123"
        },
        "content": "3. **Mark as done** "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tMarks a task as completed. "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tFormat: `done task_index_on_list`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tExample: "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t- To mark the first task on list as completed: `done 1` "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tExpected output: "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t  \u003e Nice! I\u0027ve marked this task as done:  \t"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t  \u003e [T][Completed] borrow book"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "scjx123"
        },
        "content": "4. **Delete** "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tDeletes the specified task on list "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tFormat: `delete task_index_on_list`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tExample: "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t- To delete the first task on list: `delete 1`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tExpected output: "
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t  \u003e Got it. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t  \u003e [T][Completed] borrow book"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t  \u003e Now you have 2 task in the list."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "scjx123"
        },
        "content": "5. **Find** "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tFinds a task by searching for a keyword "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tFormat: `find keyword` "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tExample:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t- To find all the task with the word \"eat\": `find eat` "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tExpected output: "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t  \u003e 1.[D][Uncompleted] eat sushi by: Oct 1 2020 06:00PM"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t  \u003e 2.[E][Uncompleted] eat sushi by: Oct 1 2020 06:00PM"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "scjx123"
        },
        "content": "6. **Bye** "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tExits the application."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tFormat: `bye` "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\tExpected output: "
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t  \u003e Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Q: **Will my data be saved after exiting from the application?** "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "scjx123"
        },
        "content": "A: All task that have been added to the list will automatically be saved when you exit Duke. No Additional action is required to save or load up from boot. "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Q: **Where can i find a text file my tasks?** "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "scjx123"
        },
        "content": "A: All task are saved at *./data/tasks.txt* depending on the location you have your duke.jar file. "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Add task to list** "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - `todo\t task_name` "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t - eg. `todo eat sushi`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - `deadline  task_name /by DD/MM/YYYY HHMM` "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t - eg. `deadline eat sushi /by 1/10/2020 1800`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - `event task_name /by DD/MM/YYYY HHMM` "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t\t - eg. `event eat sushi /by 1/10/2020 1800`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **List task**: list"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - eg. `list`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Mark task as completed**: done task_index_on_list "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - eg. `done 1`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Delete task**: delete task_index_on_list "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - eg. `delete 1`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Find task**: find keyword"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - eg. `find sushi`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Exit**: bye"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - eg. `bye`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u003c!--stackedit_data:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "scjx123"
        },
        "content": "eyJoaXN0b3J5IjpbMTU5MTUyMDcxNV19"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "scjx123"
        },
        "content": "--\u003e"
      }
    ],
    "authorContributionMap": {
      "scjx123": 223,
      "-": 9
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](Images/Logo.PNG)png)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Domsun is a **Desktop Command Line Interface (CLI) program that allows users to manage tasks and modules.** \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Domsun is targeted at busy NUS students who want to manage their tasks and modules well to achieve their dream CAP. \u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Users will be able to browse and select modules, create and arrange tasks, add tasks to modules,\u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "create reminders, calculate and set goals for their MCs / CAPs."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Contents"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- [Preliminaries](#preliminaries)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "  * [Installation](#installation)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "  * [Running the program](#running-the-program)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "  * [Guide format](#guide-format)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- [Usage](#usage)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`add` - Add task(s) to module(s)](#add---add-task-to-module)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`bye` - Quit the program](#bye---quit-the-program)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`cap` - Prints CAPs](#cap---calculate-caps)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`clear` - Clear the task list](#clear---clear-the-task-list)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`deadline` - Add a deadline to the task list](#deadline---add-a-deadline-to-the-task-list)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`delete` - Delete a task from the task list](#delete---delete-a-task-from-the-task-list)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`detail` - Prints item detail](#detail---Prints-item-detail)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`done` - Mark a task as done](#done---mark-a-task-as-done)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`edit` - Modify attributes of an item](#edit---Modify-attributes-of-an-item)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`event` - Add an event to the task list](#event---add-an-event-to-the-task-list)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`fancy` - Switch the UI to the fancy mode (GUI-like CLI)](#fancy---switch-the-ui-to-the-fancy-mode-(gui-like-cli))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`find` - Find an event in the task list](#find---find-an-event-in-the-task-list)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`focus` - Change the context of the program](#focus---change-the-context-of-the-program)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`grade` - Add grade to course or module](#grade---add-grade-to-course-or-module)  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`help` - Print help text of the commands](#help---print-help-text-of-the-commands)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`list` - Print a list of added tasks](#list---print-a-list-of-added-tasks)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`mc` - Prints MCs](#mc---prints-mcs)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`next` - Switch the target region to the next page ***(GUI mode only)***](#next---switch-the-target-region-to-the-next-page)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`plain` - Switch the UI to the plain mode (pure-text CLI)](#plain---switch-the-ui-to-the-plain-mode-(pure-text-cli))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`prev` - Switch the target region to the previous page ***(GUI mode only)***](#prev---switch-the-target-region-to-the-previous-page)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`postpone` - Postpone a task to a later date](#postpone---postpone-a-task-to-a-later-date)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`reminder` - Print tasks that are due soon](#reminder---print-tasks-that-are-due-soon)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`sel` - Select items by index](#sel---select-items-by-index)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`snooze` - Delays reminder popup](#snooze---delays-reminder-popup)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`stats` - Prints Statistics](#stats---Prints-Statistics)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`take` - Take module(s)](#take---take-module)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`todo` - Add a todo to the task list](#todo---add-a-todo-to-the-task-list)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`undone` - Mark a task as undone](#undone---mark-a-task-as-undone)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`unknown` - Prints error message](#unknown---prints-error-message)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`unsel` - Unselect items](#unsel---unselect-items)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    * [`untake` - Untake module(s)](#untake---untake-module)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- [Triggering the syntax reminder](#triggering-the-syntax-reminder)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- [FAQ](#faq)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "- [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Preliminaries"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Installation"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2. Download the latest version of `Domsun` from [Our Release Page](https://github.com/AY2021S1-CS2113-T13-2/tp/releases)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u003e Java 11 and above is highly recommended, although Domsun might run on a lower version."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Running the program"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Open your command line or terminal and navigate to the folder where you downloaded the jar file (e.g., `~/downloads`). "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Then simply run the comman ` -jaomsun.jar`:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "```batch"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "$ cd ~/downloads"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "$ ls "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "domsun.jar"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "$ java -jar domsun.jar"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u003e Note: You can also run Domsun by double clicking the `domsun.jar` file directly."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Domsun Tutorial "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Here is an overview of how Domsun works. It maintains 3 key lists that you should take note. "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](Images/Overview1pic2.PNG)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. `focus` command focuses the app onto the list of task that you currently have. "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2. Likewise, `focus mod`focuses the app on the entire list of modules available in NUS, while `focus taken` is the list of taken modules of your choice. "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "3. To add a task under a module, you may enter the command `add -task 1 2 -mod CS2113`. 1 and 2 here are indices of the tasks in the task list. So be sure to have some task added BEFORE typing this command. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "4. To mark a module as \u0027taken\u0027, you may enter `take CS2113 CS1010` while focusing on the module list by using `focus mod`. alternatively, you may use the indices method as before such as `take 1 2` to take the 1st and 2nd module available on the module list. "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "5. The `list` commands follows the app\u0027s current focus. If it is focusing on list of task, typing list will show all task. Likewise for modules and taken. "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "6. Typing `detail 1` when focusing on task list, will display the 1st index, task details. "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "7. Note that `detail 2` here will display different results as the two indicies of 2 represent different modules! "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**A point to note before venturing into the libraries of commands that we have.**\u003cbr\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "You can switch between fancy mode display, and plain display anytime during the program. "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "During `list` command, you will be able to toggle between pages of fancy by using `prev` and `next`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "However, the current version of fancy mode is still in beta, hence, it is expected to not be able to fully display certain commands that are too long. such as `help`, `detail`,`mc` etc. Do look forward to the next update!"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](Images/Overview2 etes "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Features . "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": ". N"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "#### Addition and removal of tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program allows user to add or delete tasks from the task list.\u003cbr\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program also provides shortcuts such as the `clear` command to delete tasks quickly."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Mark tasks as done or undone"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program allows user to mark tasks as done (denoted by `[V]`) or undone (denoted by `[X]`)."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### List tasks and reorder them by their ***date*** field"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program allows user to list tasks in ascending order or descending order with respect to their ***date*** values.\u003cbr\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program also allows the user to filter the task list and only display tasks within a specified date."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Deadlines, Events and ToDo\u0027s"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program allows user to create 3 different kinds of tasks, *deadlines*, *events* and *todos*.\u003cbr\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scjx123"
        },
        "content": "*deadline* and *event* consists of both *description* and *time*, while *todo* does not contain *time*.\u003cbr\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The *time* field consists of a *date* part (such as `Oct 13 1998`), and a *time* part (such as `00:00`).\u003cbr\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Fuzzy parsing"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program fuzzily parses user\u0027s inputs with respect to date and time.\u003cbr\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Supports any date format delimited by `\" \"`, `-` and `/`, with days, months and years in any order, such as "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`\"Oct 13 1998\"`, `13/10/193/98` and `1998-10-13`.\u003cbr\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Supports any time format delimited by `:` in 1 or 2 digits, such as13"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`1:1:0`, `01:01:00`, `1:01` and, `01:1`. Does not support the notations \"am\" or c."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Auto-save and auto-load"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program saves the tasks list automatically every time the list changes. \u003cbr\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scjx123"
        },
        "content": "When the program loads up, it looks for the last saved tasks list first and tries to load it."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Syntax reminder"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program can remind the user of the syntax of a command if the command is correct but wrong syntax is present."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Module operations"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program allows users to list modules, mark modules as taken or untaken, and score grades for each module."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Find function"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program allows users to find items (tasks or modules) by keyword using the `find` command. "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Dynamic target"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program operates data dynamically. Users can operate on items as-is in the displayed sequence,\u003cbr\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scjx123"
        },
        "content": "and need not follow the sequence of task creation or module addition."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### GUI inside CLI"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program has a GUI mode that accomplishes a GUI-like CLI interface using the ansi escape code sequence.\u003cbr\u003e "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The user can use `fancy` to switch to the GUI mode and use `plain` to switch to plain text CLI mode."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Link tasks to Modules"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program allows users to add some tasks to modules using the `add` command."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Reminders"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The program allows user to set reminders at certain time, or remind themselves of the most urgent tasks on start-up."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Features - Daily Tasks "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `todo` - Add a todo to the task list"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `todo` allows the program to parse user\u0027s input and create a ***todo*** object with "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "scjx123"
        },
        "content": "specified *description*. It will be appended to the end of the task list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`todo [description]`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`todo class`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [T][X] class"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `deadline` - Add a deadline to the task list"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `deadline` allows the program to parse user\u0027s input and create a ***deadline*** object with "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "scjx123"
        },
        "content": "specified *description* and *time*. It will be appended to the end of the task list."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`deadline [description] /by [time]`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`deadline ddl /by 21/9/15 1:12`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [D][X] ddl (by: Sep 15 2021 01:12)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "scjx123"
        },
        "content": " in the list."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `event   ```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "scjx123"
        },
        "content": "         task:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [D][X] ddl (by: Sep 15 2021 01:12)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Now you have 0 tasks` - Add an event to the task list"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `event` allows the program to parse user\u0027s input and create an ***event*** object with "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "scjx123"
        },
        "content": "specified *description* and *time*. It will be appended to the end of the task list."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`event [description] /at [time]`"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`event midterm exam /at May 13 2020 8:00`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [E][X] midterm exam (at: May 13 2020 08:00)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `list` - Print a list of added tasks"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `list` commands the program to print either all added tasks or tasks at a specified *date*.\u003cbr\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The user can also control how the tasks printed are ordered with respect to *date*:\u003cbr\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `asc` parameter tells the program to list tasks in ascending order with respect to their *date* field.\u003cbr\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `desc` parameter tells the program to list tasks in descending order with respect to their *date* field.\u003cbr\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `spec` parameter tells the program to only list tasks with the specified value of the *date* field.\u003cbr\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Note: with each execution of the `list` command, the indices of all tasks will be "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "scjx123"
        },
        "content": "dynamically changed to refer to the task in the current list with the current indices.\u003cbr\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "scjx123"
        },
        "content": "In other words, indices of tasks are not tied to their sequence of creation, allowing the user"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "scjx123"
        },
        "content": "to use commands much more flexibly, especially with the `find` command or the reordering parameters."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`list` \u003cbr\u003e `list date [asc / desc / spec \"date\"]`, where `\"date\"` can be in any common date format."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Here is the list ofNoted. I\u0027ve removed this tasks:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2.[D][X] CS exam (by: Oct 18 2020 15:00)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        3.[E][X] exam review session (at: Oct 01 2020 08:00)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`list date asc`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Here is the list of tasks:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1.[E][X] exam review session (at: Oct 01 2020 08:00)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        3.[D][X] CS exam (by: Oct 18 2020 15:00)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`list date spec 10/15/20`"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Here is the list of tasks:"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `done` allows the user to mark the task at a specified *index* as **done**.\u003cbr\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Note: *index* can be an integer number or a letter (`A` or `a` corresponds to 1)."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`done [index]`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [D][V] ddl (by: Sep 15 2021 01:12)"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `undone` - Mark a task as undone"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `undone` allows the user to mark the task at a specified *index* as **undone**.\u003cbr\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Note: *index* can be an integer number or a letter (`A` or `a` corresponds to 1)."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`undone [index]`"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`undone 1`"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Nice! I\u0027ve marked this task as undone:"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [DE][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `find` - Find an event in the task list"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `find` commands the program to search through the task list and print all tasks with the"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "scjx123"
        },
        "content": "specified *keyword*. If there is no task with such a *keyword*, `[NOT FOUND]` will be printed instead."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`find [keyword]`"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`find exam`"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome (found):"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Tasks with the specified keyword are:"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2.[D][X] CS exam (by: Oct 18 2020 15:00)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        3.[E][X] exam review session (at: Oct 01 2020 08:00)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome (not found):"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Tasks with the specified keyword are:"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [NOT FOUND]"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `postpone` - Postpone a task by index"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `postpone` delays a task specified by the user or by default a day.\u003cbr\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Note: Option `h` for an hour. Option `w` for a week. Option `y` for a year."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`postpone [index]` \u003cbr\u003e"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`postpone [h/w/y] [index]` "
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`postpone 1`"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "scjx123"
        },
        "content": " "
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        I\u0027ve postpone this task:"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [D][X] project submission (by: Sep 16 2021 01:12)"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`postpone h 1`"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        I\u0027ve postpone this task:"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [D][X] project submission (by: Sep 16 2021 02:12)"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`postpone w 1`"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        I\u0027ve postpone this task:"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [D][X] project submission (by: Sep 23 2021 02:12)"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`postpone y 1`"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        I\u0027ve postpone this task:"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [D][X] project submission (by: Sep 23 2022 02:12)"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `reminder` - Print tasks that are due soon"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `reminder` prints the tasks that are due within a certain time range or to activate the reminder.\u003cbr\u003e"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Note: The reminder popup is set by default to emerge every 5 minutes.  "
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`reminder` \u003cbr\u003e"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`reminder [on/off]`"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`reminder`"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here are the tasks due within 3 days: "
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    [D][X] submission 2 (by: Oct 15 2020 02:00)"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`reminder on`"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here are the tasks due within 3 days: "
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    [D][X] submission 2 (by: Oct 15 2020 02:00)"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`reminder off`"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `snooze` - Delays reminder popup"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `snooze` delays reminder popup by a default of 1 minute."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`snooze`"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`snooze`"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        I\u0027ve snoozed the reminder for 1 minute. Will remind you in 6 minutes."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________    "
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Features - Module Planner "
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `take` - Take module"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `take` marks specified module(s) as taken."
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`take [index(es) / module code(s) (for modules only)]`"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`take CS2113 CS2113T`"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    I have marked these modules as taken:"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Module: CS2113"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Module: CS2113T"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `untake` - Untake module"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `untake` marks specified module(s) as not taken."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`untake [index(es) / module code(s) (for modules only)]`"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`untake CS2113T`"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    I have marked these modules as not taken:"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Module: CS2113T"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `sel` - Select items by index"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `sel` selects the items specified."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`sel [index(es) (for the currently listed items) / module code(s) (for modules only)]`"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "scjx123"
        },
        "content": "ed on selected option."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Use \"help [target]\" to see details :) Try \"help help\"!"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`sel 1 2 3`"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    I have selected the items you specified:"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 1: borrow book"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 2: eat"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 3: jumping"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `unsel` - Unselect items"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `unsel` marks items specified as unselected."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`unsel [index(es) (for the currently listed items) / module code(s) (for modules only)]`"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`unsel 1 2 3`"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    I have un-selected the items you specified:"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 1: borrow book"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 2: eat"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 3: jumping"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `detail` - Prints item detail"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `detail` prints the details of a specified item."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`detail [module code (for modules only) / index]"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2.[D][X] CS exam (by: Oct 18 2020 15:00)"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        3.[E][X] exam review session (at: Oct 01 2020 08:00)"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`detail 1`"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here areis the details you requested:"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 1: [T][X] borrow booklist of tasks:"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1.[E][X] exam review session (at: Oct 01 2020 08:00)"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        3.[D][X] CS exam (by: Oct 18 2020 15:00)"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`detail CS2113T`"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here are the details you requested:"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item: CS2113T Software Engineering \u0026 Object-Oriented Programming 4MC"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    \"This module introduces the necessary skills for systematic and rigorous development of software sys"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    tems. It covers requirements, design, implementation, quality assurance, and project management aspe"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    cts of small-to-medium size multi-person software projects. The module uses the Object Oriented Prog"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ramming paradigm. Students of this module will receive hands-on practice of tools commonly used in t"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    he industry, such as test automation tools, build automation tools, and code revisioning tools will "
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    be covered."
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Tasks: [NOT FOUND]    Here is the list of tasks:"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1.[D][X] math exam (by: Oct 15 2020 10:30)"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `grade` - Add grade to course or module"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `grade` allows the user to add grade to the user\u0027s taken course or module."
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`grade` \u003cbr\u003e"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`grade [-option] [module] [grade] {[module] [grade]...}` \u003cbr\u003e"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`option: -s(show, default), -a(add)`"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`grade -a CS2113 A- CG1112 A-`"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        These are your grades so far:"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1. CS2113   A-"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2. CG1112   A-"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`grade`"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        These are your grades so far:"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1. CG1112   A-"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2. CS1010   A"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        3. CS1231   B"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        4. CS2040C  A"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        5. CS2113   A-"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `goal` - Calculate how far the user is from his/her target CAP"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `goal` allows the user to calculate how far the user is from his/her target CAP."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`goal [-option] [total MC] [target CAP] {[taken MC] [current CAP]}` \u003cbr\u003e"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`option: -u(user\u0027s cap and mc), -c(custom cap and mc)`"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`goal -c 160 4.9 100 4.5`"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Your required average CAP is: 5.57"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Looks like the target is a bit far away TT"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`goal -u 160 4.9`"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Your required average CAP is: 4.89"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Jia you! :D"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `mc` - Prints MCs"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `mc` prints the number of MCs based on selected option. By default, this command focuses on the entire module list. In order to print the MC of taken modules, do remember to enter \u0027focus taken\u0027 before proceeding with this command. "
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`mc [-option] [-detail]` \u003cbr\u003e"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`option: -d(detailed)`"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when there are modules in the target): "
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`mc`"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here is the total MC:"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    22"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when there are modules in the target): "
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`mc -d`"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here is the total MC:"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1001: 4MCs"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1001X: 4MCs"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1002: 4MCs"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1003: 4MCs"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1111: 6MCs"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `cap` - Prints CAPs"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `mc` prints the calculated CAP for courses based on selected option."
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`cap [-option] [module] [grade] {[module] [grade]...}`"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`option: -u(user, default), -m(multiple/custom modules)`"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when there are modules in the target): "
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`cap`"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here is your existing CAP: 4.00"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when there are modules in the target): "
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`cap -m CS2113 A CS1010 B`"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here is your existing CAP: 4.25"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Features - General Features for both Daily Tasks \u0026 Module Planner"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `add` - Add task to module"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `add` adds specified task(s) to specified module(s)."
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`add -task [index(es)] -mod [module code(s)]`"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`add -task 1 2 -mod CS2113 CS2113T`"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    I have added the specified tasks to the specified modules."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    CS2113 \u003c\u003c tasks: borrow book; eat; "
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    CS2113T \u003c\u003c tasks: borrow book; eat; "
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `clear` - Clear the task list"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `clear` results in the program deleting all added tasks from the task list."
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`clear`"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Nice! I\u0027ve cleared everything in the list."
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `delete` - Delete a task from the task list"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `delete` deletes the task with specified *index* from the current task list.\u003cbr\u003e"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Note: *index* can be an integer number or a letter (`A` or `a` corresponds to 1)."
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`delete [index]`"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        "
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```  "
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `edit` - Modify attributes of an item"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `edit ` modifies the attributes of an task or module"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`edit [-mod / -task] [index / code (for module only)] [field\u003dnew value]`"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`No space allowed around \"\u003d\". Use \"_\" in place of space for the \"[field\u003dnew value]\" parameters`"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`edit -mod CS2113T grade\u003dA`"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Exepected outcome:"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Trying to modify the attribute(s) you specified:"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        grade\u003dA; "
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`edit -task 1 description\u003ddo_homework`"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Trying to modify the attribute(s) you specified:"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        description\u003ddo homework; "
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    list"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Here is the list of items:"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1.[T][X] do homework"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2.[T][X] blah"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`edit -task 1 type\u003devent`"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Trying to modify the attribute(s) you specified:"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        type\u003devent; "
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    list"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Here is the list of items:"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1.[E][X] do homework (at: Jan 01 2021 00:00)"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2.[T][X] blah    "
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`edit -mod CS2113 grade\u003dA -task 1 description\u003ddo_homework type\u003devent`"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Trying to modify the attribute(s) you specified:"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        grade\u003dA; "
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        description\u003ddo homework; type\u003devent; "
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    list"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Here is the list of items:"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1.[E][X] do homework (at: Jan 01 2021 00:00)"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2.[T][X] blah"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `focus` - Change the context of the program"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `focus` changes the context that all other commands are based on to the specified target. \u003cbr\u003e"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "scjx123"
        },
        "content": "If no parameter is provided, the program will focus on `task`. \u003cbr\u003e"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Other commands such as `list`, `done`, `sel`, etc. all operated based on the current focused context."
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`focus`"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`focus [deadline / todo / event / task / mod / selected / taken]`"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`focus mod`"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Now we are focusing on:"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    mod"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`focus`"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Now we are focusing on:"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    task"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `stats` - Prints Statistics"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `stats` prints the percentage of the task completed."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`stats [-option] [-detail]` \u003cbr\u003e"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`option: -mod` \u003cbr\u003e"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`detail: [module code]`"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when focused on task list, and no task is completed): "
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`stats`"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here are the statistics: "
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    [0.0%]"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when checking specific modules, with all task completed): "
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`stats -mod CS2113 `"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here are the statistics: "
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    [100.0%]"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `help` - Print help text of the commands"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `help` allows the user to either print a list of available commands, "
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "scjx123"
        },
        "content": "or print the details of a specified command."
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`help` \u003cbr\u003e `help [target]`"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`hel`"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    I have selected the items you specified:"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 1: borrow book"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 2: eat"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Item 3: jumping"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `take` - Take module"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `take` marks specified module(s) as taken."
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`take [index(es) / module code(s) (for modules only)]`"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`helptake CS2113 CS2113T`"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Here are all available commands:"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: bye  Description: Quit the program"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: clear  Description: Clear the task list"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: deadline  Description: Add a deadline to the task list"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: delete  Description: Delete a task from the task list"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: done  Description: Mark a task as done"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: event  Description: Add an event to the task list"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: find  Description: Find an event in the task list with the specified keyword"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: help  Description: Print the list of available commands, or print the details of a specified command"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: focus  Description: Change context. Changes the target of other commands to the specified target"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: reminder  Description: List out events and deadlines tasks that are due within 3 days"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: list  Description: Print a list of tasks/modules depending on the current Focus"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: todo  Description: Add a todo to the task list"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: undone  Description: Mark a task as undone"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: unknown  Description: Prints the error message for an unrecognized command for debugging purposes"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: next  Description: Switch the target region to the next page, keeping other regions unchanged."
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: prev  Description: Switch the target region to the previous page, keeping other regions unchanged."
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: fancy  Description: Switch to a fancy Cli (requires the shell to support ansi codes)."
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: plain  Description: Switch to a plain Cli."
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: sel  Description: Make selection: Add specified item(s) to the selection."
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: unsel  Description: Cancel selection: Make specified item(s) no longer selected."
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: add  Description: Add task(s) to module(s): Add specified task(s) to specified module(s)."
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: take  Description: Take module(s): Mark specified module(s) as taken."
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: untake  Description: Untake module(s): Mark specified module(s) as not taken."
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: mc  Description: Print MCs: Print the number of MCs based on selected option."
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: detail  Description: Print Details: Print the details of a specified module."
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Command: cap  Description: Calculate CAP: Calculate CAP for courses based on selected option."
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Use \"help [target]\" to see details :) Try \"help help\"!"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`help list`"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Name: list"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Description: Print a list of items depending on the current Focus"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Syntax:"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        list"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        list date [asc / desc / spec \"date\"(any common date format)]"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Usages:"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        1. \"list\" \u003e\u003e list all added items"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        2. \"list date asc\" \u003e\u003e list items with a \"date\" field in ascending order"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        3. \"list date spec Oct 5 2020\" \u003e\u003e list items with specific \"date\" field of Oct 5 2020"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `fancy` - Switch the UI to the fancy mode (GUI-like CLI)"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `fancy` switches the UI to the fancy mode (GUI-like CLI interface).\u003cbr\u003e"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This command has no effect if the UI is already in fancy mode.\u003cbr\u003e"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The fancy mode only shows correctly if your terminal supports ansi escape codes."
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`fancy`"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`fancy`"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "scjx123"
        },
        "content": "the UI switches to fancy mode (GUI-like CLI interface)."
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `plain` - Switch the UI to the plain mode (pure-text CLI)"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `plain` switches the UI to the plain mode (pure-text CLI interface). \u003cbr\u003e"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This command has no effect if the UI is already in plain mode.\u003cbr\u003e"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The plain mode shows correctly on all terminals."
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`plain   ```  "
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        [T][X] class"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `undone` - Mark a task as undone"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `undone` allows the user to mark the task at a specified *index* as **undone**.\u003cbr\u003e"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Note: *index* can be an integer number or a letter (`A` or `a` corresponds to 1)."
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`undone [index]`"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`plain`"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The UI switches to plain mode (pure-text CLI interface)."
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `next` - Switch the target region to the next page"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `next` switches the target region to the next page, should a next page exist.\u003cbr\u003e"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This command has no effect on pure text CLI mode."
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`next [region]` \u003cbr\u003e"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`region: i(item list), s(selection), a(all, default)`"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`next`"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome ***(GUI mode only)***:"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The both regions of the GUI are switched to the next page if a next page is available."
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`next i`"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome ***(GUI mode only)***:"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The item list region (top) of the GUI is switched to the next page if a next page is available."
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `prev` - Switch the target region to the previous page"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `prev` switches the target region to the previous page, should a previous page exist.\u003cbr\u003e"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This command has no effect on pure text CLI mode."
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`prev [region]` \u003cbr\u003e"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`region: i(item list), s(selection), a(all, default)`"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`prev`"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome ***(GUI mode only)***:"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The both regions of the GUI are switched to the pevious page if a previous page is available."
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`prev i`"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome ***(GUI mode only)***:"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The item list region (top) of the GUI is switched to the previous page if a previous page is available."
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `unknown` - Prints error message"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `unknown` or any string that is not a command will trigger the `unknown` command.\u003cbr\u003e"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `unknown` command prints an error message for debug purposes, it is also the default behaviour of the program"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "scjx123"
        },
        "content": "when it fails to recognize the user\u0027s command. \u003cbr\u003e"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Note: If the program recognizes the command successfully, yet fails to find required parameters, "
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "scjx123"
        },
        "content": "it will not trigger this `unknown` command. It will print a syntax error and remind the user of"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "scjx123"
        },
        "content": "the correct syntax instead."
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`unknown` \u003cbr\u003e `[anything that is not a command]`"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`who is duke?`"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        OOPS, I don\u0027t know what that means :-( Try \"help\"!"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `bye` - Quit the program"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `bye` results in the program saving the current task list to a local file named "
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`./data/duke.txt`, and then quitting the program.unsel` - Unselect items"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `unsel` marks items specified as unselected."
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`unsel [index(es) (for the currently listed items) / module code(s) (for modules only)]`"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "scjx123"
        },
        "content": "``"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    "
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Triggering the syntax reminder"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing a correct command with wrong syntax will trigger the syntax reminder."
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`deadline /at 10-10-10`\u003cbr\u003e"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Note that the command `deadline` is a correct command, but:\u003cbr\u003e"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. Description is missing"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2. Parameter name is wrong"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Invalid Command! Please check the syntax."
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        deadline [description] /by [time]"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**A**: Send the `data` folder in your program directory to the program directory on your new device."
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Q**: How do I run this program ?"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**A**: To run this program execute the jar file by ‘java -jar domnus.jar’"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "scjx123"
        },
        "content": "A cheat sheet of commonly used commands:"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Daily Tasks"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**Action** | **Format**| **Examples**|"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|------------|-------------|-------------|"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**todo**|`todo [description]`|`todo borrow book`|"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**deadline**|`deadline [description] -by [time]`|`deadline project submission -by 21/9/15 1:12`|"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**event**|`event [description] -at [time]`|`event concert -at May 13 2020 8:00`|"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**list**|`list date [asc / desc / spec “date”]`|`list date asc`|"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**done**|`done [index]`|`done 2`|"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**undone**|`undondelete [index]`|`undone 2`|"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**find**|`find [keyword]`|`find exam`|"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**postpone**| `postpone [index]`|`postpone 1`|"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**reminder**|`reminder [on/off]` |`reminder`|"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**snooze**|`snooze`||"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Module Planner"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**Action** | **Format**| **Examples**|"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|------------|-------------|-------------|"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**take**|`take [index / module code]`|`take CS2113T`|"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**untake**|`untake [index / module code]`|`untake CS2113T`|"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**sel**|`sel [index / module code]`|`sel 1 2 3`|"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**unsel**|`unsel [index / module code]`|`unsel CS1010 CS2113`|"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**detail**|`detail [index / module code]`|`detail CS2113T`|"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**grade**|`grade [-option] [module] [grade] {[module] [grade]...}`|`grade -a CS2113 A CG1112 A-`|"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**goal**|`goal [-option] [total MC] [target CAP] [taken MC] [current CAP]`|`goal -c 160 4.9 100 4.5`|"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**mc**|`mc [-option] [-details]`|`mc -p`|"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**cap**|`cap [-option] [module] [grade] {[module] [grade]...}`|`cap -m CS2113 A CG1112 A-`|"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### General Features"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**Action** | **Format**| **Examples**|"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|------------|-------------|-------------|"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**add**|`add -task [index] -mod [module code]`|`add -task 1 -mod CS2113`|"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**clear** | `clear`||"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**delete**|`delete [index]`|`delete 2`|"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**edit**|`edit [-mod / -task] [index / code (for module only)]`|`edit -mod CS2113 grade\u003dA -task 1 description\u003ddo_homework type\u003devent`|"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**focus**|`focus [deadline / todo / event / task / mod / selected / taken]`|`focus deadline`|"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**stats**|`stats [target]`| `stats`|"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**help**|`help [options]`|`help deadline`|"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**fancy**|`fancy [option]`|`fancy`|"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**plain**|`plain [option]`|`plain`|"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**next**|`next [option]`|`next`|"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**prev**|`prev [option]`|`prev`|"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|**bye**|`bye`||"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u003c!--stackedit_data:"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "scjx123"
        },
        "content": "eyJoaXN0b3J5IjpbNDYzOTEzMjQ1XX0\u003d"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "scjx123"
        },
        "content": "--\u003e"
      }
    ],
    "authorContributionMap": {
      "scjx123": 1334
    }
  },
  {
    "path": "docs/team/adinata15.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "# Adi Nata - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "scjx123": 6
    }
  },
  {
    "path": "docs/team/johanesrafael.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "# Johanes Rafael Sudardji - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "scjx123": 6
    }
  },
  {
    "path": "docs/team/johndoe.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "# John Doe - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "scjx123": 6
    }
  },
  {
    "path": "docs/team/scjx123.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "# Chan Jian Xiang - Project Portfolio Page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## 1. Overview"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 1.1 Project Overview "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "DOMNUS - is a desktop application that helps in module and task tracking. It was developed under the module CS2113 Software Engineering \u0026 Object Oriented Programming. Within the schedule of approximately 7 weeks, my team of 5 Computer Engineering students successfully created DOMNUS to help students to stay organize with respective to the modules they take in NUS. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This is what out product looks like: "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](../UI.png)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## 2. Summary of Contributions"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below are my contributions to the project. "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 2.1 Enhancements Implemented: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**MC Feature**: Added the ability to list total number of MCs or the individual components that made up the MC based on the selected list.\u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**What it does**: Allows the user to print the total number of MC based on the list that he/she is focusing on (i.e list of taken module). See the individual components that made up the total MC using this feature by typing `mc -d`\u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Justification**: This feature improves the product as user would want to keep track of his current taken module\u0027s MC so as to prevent overloading/under-loading of modules in the upcoming semester. \u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Highlights**: This enhancement works well with the existing CAP calculation feature, as it allows the aforementioned feature to make use of the total MC to do further mathematical calculation of the user\u0027s CAP. This aligns with the practice of code reusability. \u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Statistic Feature**: Added the ability to show the statistics of the number of task that have been completed. \u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**What it does**: Allows users to track the current completion status of their tasks. \u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Justification**: Very often, students are not sure of how much task have been completed or how much are they left with for the week. This feature enables them to keep track of their weekly progress. \u003cbr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Highlights**:  This feature is capable of keeping track of individual module\u0027s task progress as well. This works in conjuncture with the ability to add individual task to the modules which allow user to better track his/her progress. \u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Recurrence Feature**: Added the ability to allow user to add Recurring Tasks.\u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**What it does**: Allows user to add weekly recurring task such as a weekly meeting or weekly quiz. \u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Justification**: It is common to have a weekly meeting amongst the busy students schedule. This features enables the user to do so simply by adding `Weekly` at the end of a deadline or event command. Be it a weekly quiz or weekly CCA meeting, this helps users to quickly setup a weekly schedule. \u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Highlights**: The combination of this feature with the reminder feature done by the 2 other student Computer Engineer on our team, will enable the student using this app to plan ahead of his time for the upcoming schedule. Which is a key factor in productivity for the student. \u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Code Contributed**: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "[Reposense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dscjx123\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 2.2 Contributions to UG: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The following section shows my contribution to the DOMNUS User Guide. It includes: Domsun Tutorial, mc and stats. \u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "{start of extract}\u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Domsun Tutorial "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Here is an overview of how Domsun works. It maintains 3 key lists that you should take note. "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](../Images/Overview1.PNG)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. `focus` command focuses the app onto the list of task that you currently have. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2. Likewise, `focus mod`focuses the app on the entire list of modules available in NUS, while `focus taken` is the list of taken modules of your choice. "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "3. To add a task under a module, you may enter the command `add -task 1 3 -mod CS2113`. 1 and 3 here are indices of the tasks in the task list. So be sure to have some task added BEFORE typing this command. "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "4. To mark a module as \u0027taken\u0027, you may enter `take CS2113 CS1010` while focusing on the module list by using `focus mod`. alternatively, you may use the indices method as before such as `take 1 4` to take the 1st and 2nd module available on the module list. "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "5. The `list` commands follows the app\u0027s current focus. If it is focusing on list of task, typing list will show all task. Likewise for modules and taken. "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "6. Typing `detail 1` when focusing on task list, will display the 1st index, task details. "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "7. Note that `detail 2` here will display different results as the two indicies of 2 represent different modules! The one on the left represents CG2027 while the one on the right represent CS1010. "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**A point to note before venturing into the libraries of commands that we have.**\u003cbr\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "You can switch between fancy mode display, and plain display anytime during the program. "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "During `list` command, you will be able to toggle between pages of fancy by using `prev` and `next`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "However, the current version of fancy mode is still in beta, hence, it is expected to not be able to fully display certain commands that are too long. such as `help`, `detail`,`mc` etc. Do look forward to the next update!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](../Images/Overview2.PNG)\u003cbr\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "{end of extract} \u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The Domsun tutorial section was a result of the peer feedback during the PE Dry run. As i realised the importance of building the intuition in user to know how the app actually works, i decided to bridge the learning gap by providing a pictorial guide for the user. \u003cbr\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Below shows the extract of the `mc` and `stats` section contributed by me in the User Guide. \u003cbr\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "{start of extract} \u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `mc` - Prints MCs"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `mc` prints the number of MCs based on selected option. By default, this command focuses on the entire module list. In order to print the MC of taken modules, do remember to enter \u0027focus taken\u0027 before proceeding with this command. "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`mc [-option] [-detail]` \u003cbr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`option: -d(detailed)`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when there are modules in the target): "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`mc`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here is the total MC:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    22"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when there are modules in the target): "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`mc -d`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here is the total MC:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1001: 4MCs"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1001X: 4MCs"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1002: 4MCs"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1003: 4MCs"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    EE1111: 6MCs"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### `stats` - Prints Statistics"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Typing `stats` prints the percentage of the task completed."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`stats [-option] [-detail]` \u003cbr\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`option: -mod` \u003cbr\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`detail: [module code]`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when focused on task list, and no task is completed): "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`stats`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here are the statistics: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    [0.0%]"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Example of usage (when checking specific modules, with all task completed): "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scjx123"
        },
        "content": "`stats -mod CS2113 `"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```  "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Here are the statistics: "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    [100.0%]"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "scjx123"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "scjx123"
        },
        "content": "{end of extract} "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 2.3 Contributions to DG:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The following section shows my contribution to the DOMNUS Developer Guide. It includes: Introduction, Setting up, (Design) 4.1, 4.2, 4.5, 4.6, (Implementation) 5.2, Appendix A,B,C,D,E,F. \u003cbr\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scjx123"
        },
        "content": "{start of extract}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 4.1 Architecture"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The **Architecture Diagram** below represents a high-level design overview of the App. Specifically, it is done with an N-tier architectural style, where the higher layers make use of services provided by lower layers. "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![here](../Images/Architecture_Diagram.PNG)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scjx123"
        },
        "content": "As shown in the above diagram, user only interacts with the UI layer and their commands, in turn will be passed to next adjacent layer. Given below is a quick overview of each component. "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4.2 Main Layer**\u003cbr\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `main` layer, it contains a single class known as `Domnus`. Its purpose can be split into 3 parts: "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "scjx123"
        },
        "content": "At Start Up: It calls upon the `storage` component to load user\u0027s past data and it also loads the complete module list that is packaged inside the JAR file. \u003cbr\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "scjx123"
        },
        "content": "At Operating: It connects the relevant component of the program to ensure the program is operating as per the intended logic flow. \u003cbr\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "scjx123"
        },
        "content": "At Shutdown: It exits the running loop of the program to shutdown the program successfully. \u003cbr\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4.5 Execute Layer**\u003cbr\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `Execute` layer carries out the relevant actions required based on the analyzed input. All of the features in the program are stored under this layer which is under the package name `command`. To summarize, this layer is responsible for: "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1) Match the user\u0027s command to the relevant actions."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2) Throw any exception based on errorneous user input/invalid conditions. "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**4.6 Storage Layer**\u003cbr\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The `Storage` layer loads, saves, and do pre-data processing before performing the two aforementioned action. It is active in 2 phases. "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "scjx123"
        },
        "content": "During loading phase: "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1) For the user\u0027s task: This layer translates the previously (if any) saved data format into recognizable commands and loads these data as per how the app functions during runtime. "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2) For the module list: This layer conducts simple parsing of the text file containing all the modules and stores them creates individual item known as `SingleModule` before loading them into an arraylist. "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "scjx123"
        },
        "content": "During saving phase: "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1) For the user\u0027s task: This layer saves any changes that the user made to the task list onto a text file. "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2) For the module list: This layer saves any module marked `TAKEN` by the user onto a text file, together with the relevant module information such as module\u0027s code, and grade attained (if any).  "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 5.2 Statistic Feature "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "scjx123"
        },
        "content": "The statistic feature is facilitated by the StatsAction class. It extends `Action` class, and it functions under the architectural component `execute`. Internally, it stores an arraylist of Item object in `targetList`. This class implements the following operation: "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![statsDiagram](Images/StatsActionClass.png)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `prepare()` - Sets `isMod` flag according to user\u0027s "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `act()`- Gets `targetList` and calculates the raw ratio of the completed items."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - `roundedRatioBar()`- Returns a rounded ratio enclosed in square brackets for printing. "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "scjx123"
        },
        "content": " "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![statsDiagram](../Images/StatsActionClass.png)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Given below is an example usage scenario and how the statistic mechanism behaves at each step. "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1. The user enters `stats -mod CS2113`\tonce the execute layer executes the message and calls `action.prepare()` class, `StatsAction` will begin its `prepare()` operation"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2. `prepare()` looks at the input called `ParamNode args` which is user command processed by Command Intepreter layer, and starts to identify whether user has enter the keyword `mod ` if `userInput` contains the keyword, then `isMod` flag will be set. "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3. Next, execute layer will call `action.act()` which causes StatsAction to begin its `act()` operation. If `isMod` flag is set, `act()` will search for the user specified module and get the list of tasks tagged to it."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 5. Once the list of task is obtain, the operation will loop through the task list and count the number of completed task followed by generating a ratio. "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 6. This ratio will be passed into `roundedRatioBar` to return *String* of a rounded ratio to 1 decimal place enclosing it in square brackets. "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 7. Now `StatsAction` is completed and it will return this string back to `Command` to store it under the String variable `result`. The `Main` layer will retrieve `result`, before passing it onto `UI` layer for printing. "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "scjx123"
        },
        "content": "![statsDiagram](../Images/StatsAction.png)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Design consideration:**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Aspect : How statistics executes**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Alternative 1 (current choice):** Create a separate class and get list of tasks/taken modules\u0027 task and scan through them to calculate statistics"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - Pros: Reduces Coupling and increase testability as a software unit itself. "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - Cons: May have performance issues in terms of memory usage "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - **Alternative 2:** initialize statistics as zero and each task contains an aspect called statistics"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - Pros: Will use less memory since the task itself will be deleted. "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - Cons: Stats will be updated constantly even though we do not need it. "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix A. Product scope"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - has a need to manage significant number of schedules "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - prefer desktop apps over other types "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - can type fast"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - prefers typing to mouse interactions "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - is reasonably comfortable using CLI apps "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "scjx123"
        },
        "content": "All in one app to track tasks and their dates, monitor productivity and calculate cap. "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix B. User Stories"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|Priority| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "scjx123"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student before start of semester|List the modules MC|Follow the recommended MC |"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student before start of semester|List of module available|Easily Choose which modules to take|"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| ** |Student before start of semester|Find the modules either by keyword, module code or even MC |Easily see the desired modules |"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| ** |Student before start of semester|Select the modules but not taking it yet |Easily whether the MC fits my requirement |"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *  |Student before start of semester|Find out the etails of the Module|To find out more about the modules.|"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student before start of semester|Take the desired modules|Mark the modules that i want to take as taken  |"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student during the semester|Add tasks such as todo,deadline and event into my list|Easily keep track of all the task i have to complete  |"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| ** |Student during the semester|Have a Reminder of which deadline is due soon|Ensure that no task is missed out  |"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student during the semester|Add task to modules |Easily know which tasks belongs to which modules  |"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| *** |Student during the semester|Delete task once they are completed |Remove unnecessary task on the list |"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| ** |Student after the semester|Calculate the CAP of my individual modules|Easily find out my performance this semester |"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "scjx123"
        },
        "content": "| * |Student after the semester|Clear the list of tasks and modules|Start afresh for the next semester |"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "scjx123"
        },
        "content": "{More to be added}"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix C. Use Cases: "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "scjx123"
        },
        "content": "This section describes the Use Cases for some of the features implemented in DOMNUS. "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Use Case: Taking a module "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "scjx123"
        },
        "content": "MSS:** "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 1. User requests to list all modules "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 2. DOMNUS shows a list of modules "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 3. User requests to mark a specific module as \u0027taken\u0027 "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 4. DOMNUS marks the module as taken"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Use case ends.\u003cbr\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Extensions** \\"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;3a. The module given is invalid\\"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a.1Use case shows `[NOT FOUND]` message"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes at step 3\\"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;3b. User adds in the wrong module \\"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3b.1The `untake` command can be used to untake the taken module"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Use Case: List MC**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**MSS:**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 1. User requests to list total MC on the current list."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "scjx123"
        },
        "content": " 2. DOMNUS shows the total MC of the current list. Default list is entire modules list."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Use case ends.\u003cbr\u003e "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "scjx123"
        },
        "content": "**Extensions** "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;1a. User not focusing on the correct list \\"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a1. DOMNUS shows the entire module list total MC instead of the \u0027taken\u0027 list MC"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix D. Non-Functional Requirements"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1.  Should work on any  _mainstream OS_  as long as it has Java  `11`  or above installed."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "scjx123"
        },
        "content": "3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "scjx123"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix E. Glossary"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - N-tier Architectural Style "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t - In the n-tier style, high layers make use of services provided by lower layers. Lower layers are independent of higher layers. "
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - Mainstream OS: Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "scjx123"
        },
        "content": " - Private contact detail "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "scjx123"
        },
        "content": "## Appendix F. Instructions for manual testing"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. Launch and Shutdown "
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 1: Download the latest version of  `DOMNUS`  from  [Our Release Page](https://github.com/AY2021S1-CS2113-T13-2/tp/releases/tag/v1.0).\\"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 2: Copy the file to the folder you want to use as the home folder for your Mobile Nusmod.\\"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 3: Open the Command Prompt if you are running on Windows or Terminal if you are running on Mac OS.\\"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Step 4: Navigate to your home folder and type  **‘java -jar domnus.jar’**"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2. Switching between Fancy and CLI "
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `fancy`\u003cbr\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Switches to fancy mode of display \u003cbr\u003e"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `plain`\u003cbr\u003e"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Switches to plain mode of display\u003cbr\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `Fancy` ,`Plain`\u003cbr\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Error message due to cap sensitive. \u003cbr\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "scjx123"
        },
        "content": "3. Focusing between different list"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus mod`/`task`/`todo`/`deadline`/`event`/`selected`/`taken`\u003cbr\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "scjx123"
        },
        "content": "           Expected : Shows the current list you are focused on. No list will be shown. \u003cbr\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus taken` \u003cbr\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the current list of modules you have taken. \u003cbr\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Other incorrect focus commands to try: `focus 0` , `focus what?`, ... (focus on non-existent list) \u003cbr\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected : Error message due to invalid command. \u003cbr\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "scjx123"
        },
        "content": "4. List Modules/Task"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus mod` -\u003e `list`\u003cbr\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the list of modules. \u003cbr\u003e"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus task` -\u003e `list` \u003cbr\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the current list of task. \u003cbr\u003e"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\t"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "scjx123"
        },
        "content": "5. Find Modules "
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus mod` -\u003e `find Engin`\u003cbr\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the list of available modules with keyword \u0027Engin\u0027 \u003cbr\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case:  `focus mod` -\u003e `find 2113`\u003cbr\u003e"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the list of modules with keyword \u00272113\u0027\u003cbr\u003e"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test case: `focus task`-\u003e find deadline \u003cbr\u003e"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Show list of deadline modules "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "scjx123"
        },
        "content": "6. Details of Modules "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `detail CS2113`\u003cbr\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows Module code, name, mc, and description. \u003cbr\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `detail 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows the information of the 1st task based on the current list focused on. \u003cbr\u003e"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `detail xyz` No detail of such item is found. \u003cbr\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "scjx123"
        },
        "content": "7. Take Modules "
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `focus mod` -\u003e `take 1 2` \u003cbr\u003e"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Takes the 1st and 2nd module on the module list.\u003cbr\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `focus task` -\u003e `take 1 2` \u003cbr\u003e"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Task is not module, therefore it cannot be taken.\u003cbr\u003e"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `focus mod` -\u003e `take CS2113` \u003cbr\u003e"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Mark CS2113 as taken.\u003cbr\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `focus mod` -\u003e `take cs2113`\u003cbr\u003e"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Module not found as inputs are case sensitive. \u003cbr\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "scjx123"
        },
        "content": "8. Reminder \u003cbr\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `reminder `\u003cbr\u003e"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows task that are due within 3 days. \u003cbr\u003e"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "scjx123"
        },
        "content": "9. Cap Calculation \u003cbr\u003e"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `cap`\u003cbr\u003e"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows you the calculated cap from stored useer data. \u003cbr\u003e"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Test cases: `cap -m CS2113 A+ EE2026 B CS1010 B-`\u003cbr\u003e"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "scjx123"
        },
        "content": "Expected: Shows you the calculated cap from given input modules. \u003cbr\u003e"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "scjx123"
        },
        "content": "{End of extract} "
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "scjx123"
        },
        "content": "### 2.4 Contributions to team-based tasks: "
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "scjx123"
        },
        "content": "1. Retrieved a complete list of Module Data that includes its relevant details such as Module Code, MC, Prerequisites, etc. "
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "scjx123"
        },
        "content": "2. Wrote the ModuleParser code for (which was really taxing amount of data to sieve through due to incompatible formatting from excel into text file)."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "scjx123"
        },
        "content": "3. For UG: Wrote the \u0027Domnus Tutorial\u0027 section "
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "scjx123"
        },
        "content": "4. For DG: Wrote the Introduction, Setting up, (Design) 4.1, 4.2, 4.5, 4.6, Appendix A,B,C,D,E,F"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "scjx123"
        },
        "content": "5. Planned and recorded the first and second video demo. "
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\u003c!--stackedit_data:"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "scjx123"
        },
        "content": "eyJoaXN0b3J5IjpbLTY1MDA4OTIyOV19"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "scjx123"
        },
        "content": "--\u003e"
      }
    ],
    "authorContributionMap": {
      "scjx123": 355
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "if exist \"%JAVA_EXE%\" goto execute"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 85,
      "scjx123": 4
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        final Circle clip \u003d new Circle(55,55,45);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 64
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 12
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.media.AudioClip;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.stage.Window;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.Duke;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    Window window;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            stage.setTitle(\"Duke Personal Assistant\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            AudioClip mediaPlayer \u003d new AudioClip(Main.class.getResource(\"/music/assemble.mp3\").toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            mediaPlayer.play();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 42
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.Duke;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private seedu.Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Image nickImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/nickfury.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Image steveImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/steve.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Image tonyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/stark.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Image romanoffImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/romanoff.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public enum CharacterChoice {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        STEVE,STARK,ROMANOFF,NULL"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public CharacterChoice choice \u003d CharacterChoice.NULL;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.guiWelcome(), nickImage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public MainWindow(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        setChoice(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (choice \u003d\u003d CharacterChoice.STEVE) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    DialogBox.getDukeDialog(response, steveImage)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            );"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else if (choice \u003d\u003d CharacterChoice.STARK) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    DialogBox.getDukeDialog(response, tonyImage)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else if (choice \u003d\u003d CharacterChoice.ROMANOFF) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    DialogBox.getDukeDialog(response, romanoffImage)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else if (choice \u003d\u003d CharacterChoice.NULL) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    DialogBox.getDukeDialog(response, nickImage)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            );"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private void setChoice(String input) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        switch (input.toLowerCase()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"steve\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            choice \u003d CharacterChoice.STEVE;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"tony\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            choice \u003d CharacterChoice.STARK;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"romanoff\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            choice \u003d CharacterChoice.ROMANOFF;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 110
    }
  },
  {
    "path": "src/main/java/seedu/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.dukeexception.InsufficientArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.dukeexception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static boolean exitStatus \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static final int NOTUSED \u003d -1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static String loadedCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static String loadedDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static String formattedUserCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static String formattedDateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static String originalDateTime \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static int dividerPosition;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    protected static String dateTime \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String[] tempDateTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String year;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String month;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String day;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String time;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Create object based on commands that were loaded from text file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param lineArray Contains lines of data that were previously entered by user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static void loadData(List\u003cString\u003e lineArray) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        for (String str : lineArray) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (str !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                String[] loadedTask \u003d str.split(\" \", 3);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                if (loadedTask[2].contains(\"by: \")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    loadedTask[2] \u003d loadedTask[2].replace(\"by: \",\"/by\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    loadedCommand \u003d userCommandFormatter(loadedTask[2],true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    loadedDateTime \u003d datetimeFormatter(loadedTask[2]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    loadedCommand \u003d loadedTask[2];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                switch (str.charAt(0)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    Todo objectTask \u003d new Todo(loadedCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    Task.markAsDone(objectTask, loadedTask[1].equals(\"true\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    Event objectDeadline \u003d new Event(loadedCommand, loadedDateTime);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    Task.markAsDone(objectDeadline, loadedTask[1].equals(\"true\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    Deadline objectEvent \u003d new Deadline(loadedCommand, loadedDateTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    Task.markAsDone(objectEvent, loadedTask[1].equals(\"true\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Formats the userCommand to sieve out the task description."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * It also replaces \u0027/by\u0027 with \u0027by:\u0027 for printing purposes in later on."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param userCommand The unformatted string entered by user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param containsSlash True if userCommand contains slash, false otherwise."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return Returns the formatted userCommand with only its description."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static String userCommandFormatter(String userCommand,boolean containsSlash) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (containsSlash) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dividerPosition \u003d userCommand.indexOf(\"/\") + 3;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            formattedUserCommand \u003d userCommand.substring(userCommand.indexOf(\u0027 \u0027), dividerPosition - 3) + \"by: \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            formattedUserCommand \u003d userCommand.substring(userCommand.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return formattedUserCommand;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Formats the userCommand to sieve out the task date and time."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * If the date was 12/09/2019 it will be changed to 12-09-2019."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * It also detects whether the user entered 2019/12/1 or 1/12/2019."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param userCommand The unformatted string entered by user."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return Returns the formatted userCommand with only its date and time information."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static String datetimeFormatter(String userCommand) throws NumberFormatException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //Divide between Task description and Task date"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        dividerPosition \u003d userCommand.indexOf(\"/\") + 3;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        formattedDateTime \u003d userCommand.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        originalDateTime \u003d formattedDateTime;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        time \u003d formattedDateTime.substring(formattedDateTime.indexOf(\" \"));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        time \u003d time.substring(1,3) + \":\" + time.substring(3);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        formattedDateTime \u003d formattedDateTime.substring(0,formattedDateTime.indexOf(\" \"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //Re-format the date given by the user"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (formattedDateTime.contains(\"/\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            tempDateTime \u003d formattedDateTime.split(\"/\", 3);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            tempDateTime \u003d formattedDateTime.split(\"-\", 3);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //Figure out whether user entered year first or day first ."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (tempDateTime[0].length() \u003e tempDateTime[2].length()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            year \u003d tempDateTime[0];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            day \u003d tempDateTime[2];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            year \u003d tempDateTime[2];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            day \u003d tempDateTime[0];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        month \u003d tempDateTime[1];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //String building"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (Integer.parseInt(day) \u003c 10 \u0026\u0026 !day.contains(\"0\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            formattedDateTime \u003d year + \"-\" + month + \"-0\" + day + \"@\" + time;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            formattedDateTime \u003d year + \"-\" + month + \"-\" + day + \"@\" + time;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return formattedDateTime;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Controls the flow of how a new userCommand is processed."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * It also catches error that is thrown by the matchCommand method."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param userCommand The unformatted string entered by user."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static void parseCommand(String userCommand) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(userCommand);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (userCommand.contains(\"/\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                dateTime \u003d datetimeFormatter(userCommand);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                userCommand \u003d userCommandFormatter(userCommand,true);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                userCommand \u003d userCommandFormatter(userCommand,false);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            matchCommand(userCommand, dateTime,st);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dateTime \u003d null;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (InsufficientArgumentException iae) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"iae\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (InvalidCommandException ie) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"ie\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (NoSuchElementException ne) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"ne\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (IndexOutOfBoundsException iobe) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"iobe\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"e\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.showError(\"nfe\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Matches the given command with the possible task object and subsequently, take necessary action that"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * relates to the command itself."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Relevant errors are being thrown here as well. Read below for Error information."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param userCommand The unformatted string entered by user."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param dateTime The formatted date and time information keyed in by user."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param st A StringTokenizer that holds the original userCommand information."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @throws InsufficientArgumentException Thrown when user provides insufficient argument after a valid first word."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @throws InvalidCommandException Thrown when user pressed \u0027enter\u0027 without keying anything or it does not make"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *                                 the word entered is not recognized by switch statement."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @throws NoSuchElementException Thrown when non existing element if expected."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @throws IOException Thrown by writeFile() in the \"bye\" case of switch statement."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @throws NumberFormatException Thrown when user keys in illegal number format following a valid first word."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static void matchCommand(String userCommand,String dateTime,StringTokenizer st)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            throws InsufficientArgumentException, InvalidCommandException,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            NoSuchElementException, IOException, NumberFormatException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        /** TokenHolder holds the first word of the userCommand, which enables the use of Switch statement */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String tokenHolder \u003d st.nextToken();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        switch (tokenHolder.toLowerCase().trim()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"hi\":"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.taskIO(\"hi\",null,NOTUSED);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            int itemNum \u003d Integer.parseInt(st.nextToken()) - 1;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (Task.itemExist(itemNum)) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Task.removeItem(itemNum);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.printList();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            itemNum \u003d Integer.parseInt(st.nextToken()) - 1;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (Task.itemExist(itemNum)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Task.markAsDone(itemNum);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.taskIO(\"bye\",null,NOTUSED);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Storage.writeFile(Task.getList());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            exitStatus \u003d true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (!st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                new Todo(\" \" + userCommand);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Task.printTask();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (!st.hasMoreTokens() || dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                new Deadline(userCommand, dateTime);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Task.printTask();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (!st.hasMoreTokens() || dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                new Event(userCommand, dateTime);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Task.printTask();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Task.find(st.nextToken());"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"tony\":"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.agentMessage(\"tony\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"romanoff\":"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.agentMessage(\"romanoff\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"steve\":"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.agentMessage(\"steve\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.agentMessage(\"nick\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Returns the status of exitStatus."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return Returns exitStatus."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static boolean isExit() {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return exitStatus;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 266
    }
  },
  {
    "path": "src/main/java/seedu/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.dukeexception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Passes the filePath variable to storage class to further read/load in existing data"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * The same path is also used for writing. This constructor catches error thrown from"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * storage.load() method as well."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param filePath an absolute path of the text file that stores user data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Shows the main workflow when the app is running. isExit will be true once the"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * user types in \u0027bye\u0027 command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                CommandParser c \u003d new CommandParser();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                CommandParser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } catch (InvalidCommandException ie) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                ui.showError(\"ie\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        CommandParser c \u003d new CommandParser();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        CommandParser.parseCommand(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return Ui.concat;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 71
    }
  },
  {
    "path": "src/main/java/seedu/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.nio.file.FileSystems;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /** Get home directory of the user\u0027s operating system. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /** Temporary stores the file directory and the name of the text file itself given in the filePath. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String[] dir \u003d new String[2];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String filename \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String filedir \u003d \"data\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Splits the filePath variable into file directory and file name."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param filePath an absolute path of the text file that stores user data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        dir \u003d filePath.split(\"/\",2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        filename \u003d dir[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        filedir \u003d dir[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /** Create a path p2. */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static Path p2 \u003d Paths.get(home + File.separator + filedir + File.separator + filename);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static Path p1 \u003d Paths.get(filename);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static Path filePath \u003d Paths.get(filedir,filename);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static Path fileDirectory \u003d Paths.get(filedir);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static String OS \u003d System.getProperty(\"os.name\").toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static File file \u003d new File(filename);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Checks if the filePath stated by user exist."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * If it does not exist, this method will create a new filePath accordingly."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * It will then proceed to read the text file, which can be either empty"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * or has existing data in it."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return \u003cString\u003e\u003c/String\u003ereturn list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @throws IOException Thrown by the input/reading operation."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static List\u003cString\u003e load() throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        List\u003cString\u003e dataList \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (OS.contains(\"mac\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (!Files.exists(p2)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dataList \u003d Files.readAllLines(p1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (!Files.exists(fileDirectory)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Files.createDirectory(fileDirectory);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Files.createFile(filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            dataList \u003d Files.readAllLines(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return dataList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Iterates through the current task objects stored in the list, and writes them"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * to the filePath specified by the user."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param list that stores all the current Task object."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @throws IOException Thrown by the writing operation."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void writeFile(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (OS.contains(\"mac\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file.getAbsoluteFile());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (list.isEmpty()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                bufferedWriter.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                for (Task t : list) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    bufferedWriter.write(t.getType() + \" \" + t.getStatusIcon() + \" \" + t.getDescription() + \" \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                            + CommandParser.originalDateTime + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                bufferedWriter.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                fw.write(t.getType() + \" \" + t.getStatusIcon() + \" \" + t.getDescription() + \" \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                        + CommandParser.originalDateTime + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 106
    }
  },
  {
    "path": "src/main/java/seedu/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public TaskList(List\u003cString\u003e loadedList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        CommandParser c \u003d new CommandParser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        c.loadData(loadedList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 15
    }
  },
  {
    "path": "src/main/java/seedu/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.dukeexception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static String userCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Returns string entered by user in the CLI."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * If user presses enter without any command, seedu.DukeException.InvalidCommandException will be thrown."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return userCommand String command entered by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @throws InvalidCommandException if userCommand is \u003d\u003d null."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static String readCommand() throws InvalidCommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        userCommand \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        if (userCommand \u003d\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static String guiWelcome() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"Hello Avenger, who would you like to speak with today?\" + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + \"- Agent Romanoff\\n -Steve Roger\\n -Tony Stark\\n\" + \"\\ntype: TONY / STEVE / ROMANOFF\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void agentMessage(String name) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        switch (name) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"tony\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"I\u0027ll take over, since i\u0027m the smartest in the room.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"romanoff\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"Hey fella, let me remind you of your task. (:\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"steve\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"Glad to work with you, Avenger. I\u0027ll make sure you never forget anything since 1975.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Shows the welcome text art of seedu.Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m seedu.Duke\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    What can i do for you?\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Prints out a line that allows CLI to demarcate its return result."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Prints out \"Unable to load file.\" error message when seedu.Storage.load()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * is unable to read text file in the file path."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        System.out.println(\"Unable to load file.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Prints out the error messages."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param error Error code of the error being thrown."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void showError(String error) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        switch (error) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"iae\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OPPS!!! Please enter a description!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     OPPS!!! Please enter a description!\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"ie\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"ne\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OOPS!!! I\u0027m sorry, but that is an invalid command :-(\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     OOPS!!! I\u0027m sorry, but that is an invalid command :-(\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"iobe\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OOPS!!! I\u0027m sorry, task does not exist in the list :-(\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     OOPS!!! I\u0027m sorry, task does not exist in the list :-(\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"e\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Unable to write.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     OOPS!!! I\u0027m sorry, task does not exist in the list :-(\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"nfe\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     OOPS!!! That is an invalid format!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     OOPS!!! That is an invalid format!\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static String concat \u003d \"Hello\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Prints out the necessary statements corresponding to the user\u0027s command."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param taskCases Specifies individual task to print."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param t Task object passed in from individual task."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param i the index of the task or it can also be the number of the task left in the list depending on cases."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void taskIO(String taskCases,Task t,int i) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        switch (taskCases) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"hi\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"Hello\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Now you have \" + i + \" task in the list.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     Got it. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    + \"       \" + t.toString() + \"\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    + \"     Now you have \" + i + \" task in the list.\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"listHeader\":"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Here are the task in your list:\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"Here are the task in your list:\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d concat.replace(\"Hello\",\"\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (i !\u003d -1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                System.out.println(\"        \" + i + \".\" + t.toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                concat \u003d concat.concat(\"\\n\" + \"     \" + i + \".\" + t.toString());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"    \" + t.toString());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    + \"     \" + t.toString();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"task\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     Now you have \" + i + \" task in the list.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    + \"       \" + t.toString() + \"\\n\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    + \"     Now you have \" + i + \" task in the list.\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            System.out.println(\"     \" + i + \".\" + t.toString());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            concat \u003d \"     \" + i + \".\" + t.toString();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 178
    }
  },
  {
    "path": "src/main/java/seedu/dukeexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu.dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 9
    }
  },
  {
    "path": "src/main/java/seedu/dukeexception/InsufficientArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu.dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class InsufficientArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 5
    }
  },
  {
    "path": "src/main/java/seedu/dukeexception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu.dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 5
    }
  },
  {
    "path": "src/main/java/seedu/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Creates a \u0027Deadline\u0027 task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param description Description of the task specified by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param dateTime Date and Time of the task specified by user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Deadline(String description,String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.dateTime \u003d dateTimeParser(dateTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.type \u003d CommandType.D;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private String dateTimeParser(String dateTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        LocalDate d \u003d LocalDate.parse(dateTime.substring(0,dateTime.indexOf(\"@\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        LocalTime t \u003d LocalTime.parse(dateTime.substring(dateTime.indexOf(\"@\") + 1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + t.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"[\" + this.type + \"]\" + super.toString() + dateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 33
    }
  },
  {
    "path": "src/main/java/seedu/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Creates an \u0027Event\u0027 task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param description Description of the task specified by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param dateTime Date and Time of the task specified by user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.dateTime \u003d dateTimeParser(dateTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.type \u003d CommandType.E;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private String dateTimeParser(String dateTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        LocalDate d \u003d LocalDate.parse(dateTime.substring(0,dateTime.indexOf(\"@\")));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        LocalTime t \u003d LocalTime.parse(dateTime.substring(dateTime.indexOf(\"@\") + 1));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                + t.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"[\" + this.type + \"]\" + super.toString() + dateTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scjx123": 33
    }
  },
  {
    "path": "src/main/java/seedu/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import seedu.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    protected CommandType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    String dateTime \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public enum CommandType {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        T, D, E"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Constructs a new Task object while initiating description, isDone"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * and add the new Task object to the ArrayList list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param description Description of the task specified by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        list.add(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Removes an item on the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param num The index of the task on the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void removeItem(int num) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Task t \u003d list.get(num);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Ui.taskIO(\"delete\",t,list.size() - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        list.remove(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Check if an item exist on the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Returns true if item exist, and false if it does not exist."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param num The index of the task on the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return Logical true or false based on whether item exist in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static boolean itemExist(int num) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return list.get(num) !\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Mark a Task based on the logic it is provided with."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Used mainly for loading in previous data from text file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param task The task object that is being mark as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param logic The task completion status (true or false)."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *              true : Completed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *              false: Uncompleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void markAsDone(Task task, boolean logic) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        task.isDone \u003d logic;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Mark a Task as completed when provided with an index on the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param num The index of the task on the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void markAsDone(int num) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Task t \u003d list.get(num);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        t.isDone \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Ui.taskIO(\"done\",t,list.size());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Returns the entire list object."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return list The entire current ArrayList list object."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Search through the entire list for task with description that matches the userKeyword."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @param userKeyword A String keyword that the user wish to search in the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void find(String userKeyword) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //Example find \u0027book\u0027"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            if (t.getDescription().contains(userKeyword)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                Ui.taskIO(\"find\",t,i);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Iterates through the entire list object and prints each one out."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Ui.taskIO(\"listHeader\",null,-1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Ui.taskIO(\"list\", t, i);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Prints description of a single task object that is being added to the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public static void printTask() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //Retrieve the last item on the list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Task t \u003d list.get(list.size() - 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        Ui.taskIO(\"task\",t,list.size());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"]\" + getDescription());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Returns the status icon of the \"Completed\" or \"Uncompleted\"."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return isDone Completed or Uncompleted status of the task."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return (isDone ? \"Completed\" : \"Uncompleted\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return description Description of the task."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Returns commandType data type of the event. Mostly used for writing to text file."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return commandType Data type of the event."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public CommandType getType() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * Returns the date and time of the object stated by user."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     * @return dateTime Date and Time of the object."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "scjx123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 164
    }
  },
  {
    "path": "src/main/java/seedu/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        this.type \u003d CommandType.T;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        return \"[\" + this.type + \"]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 13
    }
  },
  {
    "path": "src/test/java/seedu/CommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.DisplayName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.Nested;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": "public class CommandParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    public String[] testCommands \u003d {\"done 1\",\"done e\",\"done 1e\"};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Nested"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @DisplayName(\"when new\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    class MatchCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(\"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        @DisplayName(\"empty command \")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        void throwsInvalidCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            st \u003d new StringTokenizer(\"delete 1\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            Exception exception \u003d assertThrows(IndexOutOfBoundsException.class, () -\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                    CommandParser.matchCommand(\"delete 1\", \"\", st));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            assertEquals(\"Index 0 out of bounds for length 0\",exception.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 30
    }
  },
  {
    "path": "src/test/java/seedu/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.Tag;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.DisplayName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.DisplayNameGeneration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.DisplayNameGenerator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import org.junit.jupiter.api.Nested;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scjx123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scjx123"
        },
        "content": "@DisplayName(\"Test Class: DukeTest\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scjx123"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    private static final String DateFormat \u003d \"2019-12-12@18:30\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @Nested"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    @DisplayName(\"Date and Year format test\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    class DateAndYear {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scjx123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        //Test method"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        @Tag(\"dates\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        @DisplayName(\"😱\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        public void groupedAssertions() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scjx123"
        },
        "content": "            assertAll(DateFormat,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                () -\u003e assertEquals(DateFormat,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                            CommandParser.datetimeFormatter(\"eat food /by 12-12-2019 1830\")),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                () -\u003e assertEquals(DateFormat,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scjx123"
        },
        "content": "                            CommandParser.datetimeFormatter(\"eat food /by 2019-12-12 1830\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scjx123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scjx123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scjx123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scjx123": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scjx123"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "scjx123": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scjx123"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\seedu\\*.java ..\\src\\main\\java\\seedu\\task\\*.java ..\\src\\main\\java\\seedu\\DukeException\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scjx123"
        },
        "content": "java -classpath ..\\bin seedu.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "scjx123": 2
    }
  }
]
