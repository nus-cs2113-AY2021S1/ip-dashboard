[
  {
    "path": "EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 6
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "### Command Words Supported"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "1. Create task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   1. `todo`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "      - Required format: `todo [description]`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   1. `event`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "      - Required format: `event [description] /at [sometime]`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   1. `deadline`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "      - Required format: `deadline [description] /by [sometime]`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "1. View list of tasks: `list`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   - Required format: `list`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   - Returns a list of tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "1. Mark task as done: `done` "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   - Required format: `done [task number in list]`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   - Task number must be less than or equal to total number of tasks "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "1. Delete tasks: `delete`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   - Required format: `delete [task number in list]`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   - Task number must be less than or equal to total number of tasks "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "1. Search for words: `find`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   - Required format: `find [single non-spaced word]`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "1. `bye`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "   - Terminates program"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "- The list of tasks saves to hard drive, but the data will not reflect if you have marked it as done. (See section **Bugs and Issues**)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "### Bugs and Issues"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "- If you mark a task as done, it does not save to hard drive. So if you close and open the app and look at the list, all the tasks will be marked as undone."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "- Most errors are not handled. So if you write symbols like `\\` instead of `/`, or do not follow the correct format for `event` or `deadline`, the app will crash."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 26,
      "yh-ng": 30
    }
  },
  {
    "path": "input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "todo asdf"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 1
    }
  },
  {
    "path": "runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "if not exist C:\\cs2113\\ip\\bin mkdir C:\\cs2113\\ip\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "javac  -cp C:\\cs2113\\ip\\src -Xlint:none -d C:\\cs2113\\ip\\bin C:\\cs2113\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "java -classpath C:\\cs2113\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        super(description.substring(9, description.indexOf(\"/\") - 1));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        this.dueDate \u003d description.substring(description.indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String formatInput() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"deadline \" + description + \"/by \" + dueDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "The main Duke class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        int listCounter \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        On startup, searches for file \"taskList.txt\", and writes data into the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        Creates the file if it does not exist."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "         */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        String FilePath \u003d \"taskList.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        File file \u003d new File(FilePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        while ( fileScanner.hasNextLine() ) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            String fileInput \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            list.add(listCounter,taskType(fileInput));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            listCounter++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            String[] inputArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            String commandWord \u003d inputArray[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            System.out.println(commandWord);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            if(!( commandWord.equals(\"todo\") || commandWord.equals(\"deadline\") || commandWord.equals(\"event\") || commandWord.equals(\"done\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    || commandWord.equals(\"list\") || commandWord.equals(\"delete\") || commandWord.equals(\"find\")  )  ) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Sorry I don\u0027t understand :(\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(commandWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                int deletionIndex \u003d Integer.parseInt(inputArray[1])-1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\" Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(list.get(deletionIndex).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                list.remove(deletionIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                listCounter--;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Now you have \" + listCounter + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                /*"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                After deleting item from list, we clear the taskList.txt file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                Then we fill up the taskList.txt file again using the new list with deleted task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                FileWriter clearFile \u003d new FileWriter(FilePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                clearFile.append(\"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                FileWriter taskToFile \u003d new FileWriter(FilePath,true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                for (Task taskItem : list) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    taskToFile.append(taskItem.formatInput());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    taskToFile.append(\"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    taskToFile.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(input.equals(\"list\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                for(int i \u003d 0; i \u003c listCounter; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    System.out.println(Integer.toString(i+1) + \". \" + list.get(i).toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(validDoneInput(input,listCounter)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                int itemNumber \u003d Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                list.get(itemNumber - 1).markDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(list.get(itemNumber - 1).toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(commandWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                String searchWord \u003d inputArray[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                int candidateListCount \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                ArrayList\u003cTask\u003e candidateList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                for (Task myTask : list) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    if(myTask.getDescription().contains(searchWord)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                        candidateList.add(candidateListCount,myTask);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                        candidateListCount++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                for(int i \u003d 0; i \u003c candidateListCount; i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    System.out.println(Integer.toString(i+1) + \". \" + candidateList.get(i).toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(commandWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"done index out of range\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(inputArray.length\u003c2) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"item cannot be empty\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                list.add(listCounter, taskType(input));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\" + \"\\n\" + list.get(listCounter).toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                listCounter++;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Now you have \" + Integer.toString(listCounter) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                FileWriter taskToFile \u003d new FileWriter(FilePath,true);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                taskToFile.append(input);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                taskToFile.append(\"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                taskToFile.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    Check if the input string is in the \"done ... \" format, and if it is a valid format"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public static boolean validDoneInput(String s, int n) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        if(s.length() \u003c 6){ // check if string is long enough"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        else if(!s.substring(0,4).equals(\"done\")){ // check if string is \"done ...\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        int m \u003d 0;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            m \u003d Integer.parseInt(s.substring(5));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        if(m\u003en) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        } else return true;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    Given the input string, we determine the task type"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public static Task taskType(String s) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        String[] splitted \u003d s.split(\" \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        switch(splitted[0]) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                return new Todo(s);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                return new Deadline(s);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                return new Event(s);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                return new Task(s);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "yh-ng": 160
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        super(description.substring(6, description.indexOf(\"/\") - 1));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        this.date \u003d description.substring(description.indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String inputFormat() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"event \" + description + \"/at \" + date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 16
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class Task { //"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    Returns tick or X symbols depending on whether task is done or not"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    Marks task as done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    Placeholder function. Formats the class based on the type, so can add back to list from saved file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String formatInput() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 43
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 3
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        super(description.substring(5));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String formatInput() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"todo \" + this.description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 14
    }
  }
]
