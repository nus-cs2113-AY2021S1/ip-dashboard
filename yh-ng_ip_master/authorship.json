[
  {
    "path": "EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 6
    }
  },
  {
    "path": "input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "todo asdf"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 1
    }
  },
  {
    "path": "runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "if not exist C:\\cs2113\\ip\\bin mkdir C:\\cs2113\\ip\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "javac  -cp C:\\cs2113\\ip\\src -Xlint:none -d C:\\cs2113\\ip\\bin C:\\cs2113\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "java -classpath C:\\cs2113\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        super(description.substring(9, description.indexOf(\"/\") - 1));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        this.dueDate \u003d description.substring(description.indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        Task[] list \u003d new Task[100];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        int listCounter \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            String[] inputArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            String commandWord \u003d inputArray[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            System.out.println(commandWord);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            if(!(commandWord.equals(\"todo\") || commandWord.equals(\"deadline\") || commandWord.equals(\"event\") || commandWord.equals(\"done\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    || commandWord.equals(\"list\")) ) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Sorry I don\u0027t understand :(\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(input.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                for(int i \u003d 0; i \u003c listCounter; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                    System.out.println(Integer.toString(i+1) + \". \" + list[i].toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(validDoneInput(input,listCounter)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                int itemNumber \u003d Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                list[itemNumber - 1].markDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(list[itemNumber - 1].toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(commandWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"done index out of range\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else if(inputArray.length\u003c2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"item cannot be empty\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                list[listCounter] \u003d taskType(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\" + \"\\n\" + list[listCounter].toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                listCounter++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                System.out.println(\"Now you have \" + Integer.toString(listCounter) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public static boolean validDoneInput(String s, int n) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        if(s.length() \u003c 6){ // check if string is long enough"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        else if(!s.substring(0,4).equals(\"done\")){ // check if string is \"done ...\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        int m \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            m \u003d Integer.parseInt(s.substring(5));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        if(m\u003en) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        } else return true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public static Task taskType(String s) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        String[] splitted \u003d s.split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        switch(splitted[0]) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                return new Todo(s);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                return new Deadline(s);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                return new Event(s);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                return new Task(s);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 11,
      "yh-ng": 79
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        super(description.substring(6, description.indexOf(\"/\") - 1));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        this.date \u003d description.substring(description.indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 12
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 23
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 3
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        super(description.substring(5));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yh-ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yh-ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yh-ng": 10
    }
  }
]
