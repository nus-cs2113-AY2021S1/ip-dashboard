[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "-": 25
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "## 1. Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 1.1. Three Types of Tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* To Do - *To do task with description.*"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Deadline - *Deadline task with description and its due time.*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Event - *Event task with description and its occurring time.*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 1.2. Modification of Task List"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Add - *Add any type of tasks into the task list.*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Delete - *Remove a task from the task list.*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Mark As Done - *Mark a finished task as done.*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 1.3. Search Functions"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Search by Date - *Search tasks occurring on a specific date.*"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Search by Keyword - *Search tasks containing a keyword.*"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "## 2. Usage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Command Format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user e.g. in `todo TASK_DESCRIPTION`, `TASK_DESCRIPTION` is a parameter which can be used as `todo task1`.  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Some parameters need to follow certain patterns which would be explained in `(...)` e.g. for the command `deadline /by TASK_TIME(yyyy-MM-dd HH:mm)` the user should supply time in the format `yyyy-MM-dd HH:mm`."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 2.1. `todo` - Adding To Do Task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Add a to do task with its description into the task list.  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "The to do task is by default set to undone."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Format:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`todo TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`todo task1`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`Got it. I\u0027ve added this task to your list:`  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`[T][X] task1`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 2.2. `deadline` - Adding Deadline Task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Add a deadline task with its description and due time into the task list.  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "The deadline task is by default set to undone."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Format:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`deadline TASK_DESCRIPTION /by TASK_TIME(yyyy-MM-dd HH:mm)`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`deadline task2 /by 2020-10-01 12:00`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`Got it. I\u0027ve added this task to your list:`  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`[D][X] task2 (by: Oct 01 2020 12:00)`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 2.3. `event` - Adding Event Task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Add an event task with its description and occurring time into the task list.  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "The event task is by default set to undone."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Format:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`event TASK_DESCRIPTION /at TASK_TIME(yyyy-MM-dd HH:mm)`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`event task3 /at 2020-10-01 12:00`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`Got it. I\u0027ve added this task to your list:`  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`[E][X] task3 (at: Oct 01 2020 12:00)`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 2.4. `list` - Printing Task List"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Print the task list in sequence."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Format:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`Here are the task(s) in your list:`  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`1.[T][X] task1`  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`2.[D][X] task2 (by: Oct 01 2020 12:00)`  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`3.[E][X] task3 (at: Oct 01 2020 12:00)`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 2.5. `done` - Marking Task as Done"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Mark a task as done, referenced by the index.  "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Command will be ignored if the index given is out of bound."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Format:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`done TASK_INDEX`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`OK! I\u0027ve marked this task as done:`  "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`[T][V] task1`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 2.6. `delete` - Deleting Task"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Delete a task, referenced by the index.  "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Command will be ignored if the index given is out of bound."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Format:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`delete TASK_INDEX`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`OK! I\u0027ve deleted the task.`  "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`You have 2 tasks in the list now.`  "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 2.7. `date` - Searching by Date"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Search for tasks occurring on a specific date."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Command will be ignored if the input date does not follow the defined pattern."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Format:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`date EXPECTED_DATE`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`date 2020-10-01`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`Here are the task(s) occurring on this date:`  "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`2.[D][X] task2 (by: Oct 01 12:00)`  "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 2.8. `find` - Searching by Keyword"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Search for tasks with descriptions containing the keyword."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Format:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`find KEYWORD`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`find task1`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`Here are the matching task(s) in your list:`  "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`1.[T][V] task1`  "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "### 2.9. `bye` - Exiting the Program"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "Say goodbye to duke!"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Format:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`Bye. Hope to see you again soon!`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "## 3. Command Summary"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Add:  "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`todo TASK_DESCRIPTION`  "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`deadline TASK_DESCRIPTION /by TASK_TIME(yyyy-MM-dd HH:mm)`  "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`event TASK_DESCRIPTION /at TASK_TIME(yyyy-MM-dd HH:mm)`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* List:  "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Mark as done:  "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`done TASK_INDEX`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Delete:  "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`delete TASK_INDEX`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Search:  "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`date EXPECTED_DATE(yyyy-MM-dd)`  "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`find KEYWORD`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "* Exit:  "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "`bye`"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 191,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /** Runs the program until termination. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        runCommandLoopUntilExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Initializes the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Prints welcome messages."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskList \u003d storage.loadFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (InvalidFileException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            ui.showInvalidFileMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Receives user\u0027s input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Executes commands."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Terminates the program when receives exit command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void runCommandLoopUntilExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                Command command \u003d new Parser().parseCommand(userInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                ui.showCommandResult(command.execute(taskList, storage, ui));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                ui.showInvalidCommandMessage(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                ui.showInvalidFileMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                ui.showInvalidIndexMessage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            ui.drawHorizontalLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /** Prints exit messages */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        new Duke(\"data/save.txt\").run();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 71,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Parses a string to an index of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param taskInfo a string containing the information of a task index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return index parsed from the string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @throws InvalidTaskIndexException if the string can not be parsed to an index."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public int getTaskIndex(String taskInfo) throws InvalidTaskIndexException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskInfo \u003d taskInfo.trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        boolean isNum \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (int i \u003d 0; i \u003c taskInfo.length(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (!Character.isDigit(taskInfo.charAt(i))) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                isNum \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (isNum \u0026\u0026 (!taskInfo.equals(\"\"))) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskIndex \u003d Integer.parseInt(taskInfo) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return taskIndex;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Parses a string to a to-do task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param taskInfo a string containing the information of a to-do task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return to-do task parsed from the string."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @throws InvalidCommandException if the string can not be parsed to a to-do task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private ToDo getToDo(String taskInfo) throws InvalidCommandException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskInfo \u003d taskInfo.trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (taskInfo.equals(\"\")) throw new InvalidCommandException(1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new ToDo(taskInfo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Parses a string to a deadline task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param taskInfo a string containing the information of a deadline task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return deadline task parsed from the string."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @throws InvalidCommandException if the string can not be parsed to a deadline task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Deadline getDeadline(String taskInfo) throws InvalidCommandException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int dividePoint \u003d taskInfo.indexOf(\"/by\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            String description \u003d taskInfo.substring(0, dividePoint).trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            String byText \u003d taskInfo.substring(dividePoint + \"/by\".length()).trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (description.equals(\"\") || byText.equals(\"\")) throw new InvalidCommandException(2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            LocalDateTime byTime \u003d LocalDateTime.parse(byText, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new Deadline(description, byTime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch(IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException(2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Parses a string to a event task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param taskInfo a string containing the information of event task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return event task parsed from the string."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @throws InvalidCommandException if the string can not be parsed to a event task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Event getEvent(String taskInfo) throws InvalidCommandException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int dividePoint \u003d taskInfo.indexOf(\"/at\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            String description \u003d taskInfo.substring(0, dividePoint).trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            String atText \u003d taskInfo.substring(dividePoint + \"/at\".length()).trim();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (description.equals(\"\") || atText.equals(\"\")) throw new InvalidCommandException(3);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            LocalDateTime atTime \u003d LocalDateTime.parse(atText, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new Event(description, atTime);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch(IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException(3);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public LocalDate getDate(String dateInfo) throws InvalidCommandException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        LocalDate expectedDate;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            expectedDate \u003d LocalDate.parse(dateInfo.trim(), DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException(6);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return expectedDate;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Parses the user input from raw text to a command."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Returns the command to be executed."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param userInput user\u0027s input in raw text."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return command to be executed."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @throws InvalidCommandException if the command doesn\u0027t follow the format and can not be executed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Command parseCommand(String userInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String command \u003d (!userInput.contains(\" \")) ? userInput : userInput.substring(0, userInput.indexOf(\" \"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new AddCommand(getToDo(userInput.substring(\"todo\".length())));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new AddCommand(getDeadline(userInput.substring(\"deadline\".length())));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new AddCommand(getEvent(userInput.substring(\"event\".length())));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                return new MarkCommand(getTaskIndex(userInput.substring(\"done\".length())));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (InvalidTaskIndexException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                throw new InvalidCommandException(4);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                return new DeleteCommand(getTaskIndex(userInput.substring(\"delete\".length())));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (InvalidTaskIndexException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                throw new InvalidCommandException(5);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new FilterByDateCommand(getDate(userInput.substring(\"date\".length())));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new FindCommand(userInput.substring(\"find\".length()).trim());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException(0);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 144
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidFileException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private final int TASK_TYPE_POS \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private final int TASK_STATUS_POS \u003d 2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private final int TASK_INFO_START_POS \u003d 4;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private String dirPath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.dirPath \u003d filePath.substring(0, filePath.lastIndexOf(\"/\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Saves the current data from the task list to a local file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Creates a new file if the file doesn\u0027t exist."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param taskList task list to be saved."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @throws IOException if a I/O failure occurs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void saveFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        new File(dirPath).mkdir();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        new File(filePath).createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (Task task: taskList.tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                text +\u003d ((task.isDone) ? \"T|1|\" : \"T|0|\") + task.description + System.lineSeparator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                text +\u003d ((task.isDone) ? \"D|1|\" : \"D|0|\") + task.description + \"|\" + ((Deadline) task).by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\")) + System.lineSeparator();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                text +\u003d ((task.isDone) ? \"E|1|\" : \"E|0|\") + task.description + \"|\" + ((Event) task).at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\")) + System.lineSeparator();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        fileWriter.write(text);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Loads the local file from a certain path."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Returns the decrypted data."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return task list with data read from the local file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @throws InvalidFileException if the local file doesn\u0027t fulfil the format of data and can not be read."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public TaskList loadFile() throws InvalidFileException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        TaskList savedTaskList \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                String taskInfo \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                char taskType \u003d taskInfo.charAt(TASK_TYPE_POS);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                boolean taskIsDone \u003d taskInfo.charAt(TASK_STATUS_POS) \u003d\u003d \u00271\u0027;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                taskInfo \u003d taskInfo.substring(TASK_INFO_START_POS);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    task \u003d new ToDo(taskInfo);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    task \u003d new Deadline(taskInfo.substring(0, taskInfo.indexOf(\u0027|\u0027)), LocalDateTime.parse(taskInfo.substring(taskInfo.indexOf(\u0027|\u0027) + 1), DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\")));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    task \u003d new Event(taskInfo.substring(0, taskInfo.indexOf(\u0027|\u0027)), LocalDateTime.parse(taskInfo.substring(taskInfo.indexOf(\u0027|\u0027) + 1), DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\")));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    throw new InvalidFileException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                task.isDone \u003d taskIsDone;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                savedTaskList.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return savedTaskList;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidFileException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 97
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Deletes a task in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param index index of task to be deleted"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return size of the task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Returns a task corresponding to a certain index."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param index index of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return task with the index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Task getTaskByIndex(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 54
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"Modified by Wu Haitao\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static final String JOKE \u003d \"There are only 10 kinds of people in this world:\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"those who know binary and those who don\u0027t.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /** Number of \u0027-\u0027 consisted in the horizontal line */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static final int LINE_CHAR_NUM \u003d 40;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this(new Scanner(System.in), System.out);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Ui(Scanner in, PrintStream out) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.in \u003d in;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /** Prints welcome messages at the beginning of the program. */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Hello from\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(logo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Hello! I\u0027m Duke.\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /** Draws a separate line. */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void drawHorizontalLine() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"-\".repeat(LINE_CHAR_NUM));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /** Prints an error message if the program failed to load data from the file. */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showInvalidFileMessage() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Accessing local data failed\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /** Prints an error message if the user gives a invalid command. */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showInvalidCommandMessage(InvalidCommandException exception) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(exception.getExceptionMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /** Prints an error message when user tries to modify a nonexistent task. */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showInvalidIndexMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Invalid index!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /** Says goodbye when user exits the program */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Reads the text entered by the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return command (full line) entered by the user"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Prints the messages accordingly when a command is successfully executed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Ignores empty result."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param result result of the command."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showCommandResult(CommandResult result) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (result !\u003d null) out.println(result.getResult());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Prints the whole list of tasks with each has an index."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Prompts if the list is empty."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param taskList task list to be printed."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (taskList.getTaskListSize() \u003e 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(\"Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                out.println(String.format(\"%d.%s\", i + 1, taskList.getTaskByIndex(i)));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(\"You don\u0027t have any tasks in your list now.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * Counts the number of tasks in the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * returns messages with number of tasks."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @param taskList task list to be checked."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     * @return prompt messages with number of tasks in the list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String checkNumberOfTask(TaskList taskList) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        switch (taskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return \"You don\u0027t have any task in the list now.\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return \"You have 1 task in the list now.\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return String.format(\"You have %d tasks in the list now.\", taskList.getTaskListSize());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printTasksFilteredByKeyword(ArrayList\u003cTask\u003e tasks, String keyword) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                .filter((t) -\u003e (t.description.contains(keyword)))"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (filteredList.isEmpty()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(\"No tasks found!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(\"Here are the matching task(s) in your list:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            filteredList.stream()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    .forEach((t) -\u003e out.println(String.format(\"%d.%s\", tasks.indexOf(t) + 1, t)));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void printTasksFilterByDate(ArrayList\u003cTask\u003e tasks, LocalDate expectedDate) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTaskList \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                .filter((t) -\u003e (((t instanceof Deadline) \u0026\u0026 (((Deadline) t).by.toLocalDate().compareTo(expectedDate) \u003d\u003d 0)) ||"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                        ((t instanceof Event) \u0026\u0026 (((Event)t).at.toLocalDate().compareTo(expectedDate) \u003d\u003d 0))))"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (filteredTaskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(\"No tasks occurring on this date.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(\"Here are the task(s) occurring on this date:\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            filteredTaskList.stream()"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    .forEach((t) -\u003e out.println(String.format(\"%d.%s\", tasks.indexOf(t) + 1, t)));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 153
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Task taskToAdd;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public AddCommand(Task taskToAdd) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        storage.saveFile(taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new CommandResult(String.format(\"Got it. I\u0027ve added this task to your list:\\n%s\\n%s\", taskToAdd, ui.checkNumberOfTask(taskList)));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 24
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String getResult() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    int indexForDeletion;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public DeleteCommand(int indexForDeletion) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.indexForDeletion \u003d indexForDeletion;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui) throws IOException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskList.delete(indexForDeletion);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        storage.saveFile(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new CommandResult(String.format(\"OK! I\u0027ve deleted the task.\\n%s\", ui.checkNumberOfTask(taskList)));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 22
    }
  },
  {
    "path": "src/main/java/duke/command/FilterByDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class FilterByDateCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    LocalDate expectedDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public FilterByDateCommand(LocalDate expectedDate) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.expectedDate \u003d expectedDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui)  {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui.printTasksFilterByDate(taskList.tasks, expectedDate);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 20
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui.printTasksFilteredByKeyword(taskList.tasks, keyword);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 21
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui.showTaskList(taskList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "src/main/java/duke/command/MarkCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class MarkCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private int indexForMarking;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public MarkCommand(int indexForMarking) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.indexForMarking \u003d indexForMarking;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui) throws IOException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskList.getTaskByIndex(indexForMarking).isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        storage.saveFile(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new CommandResult(String.format(\"OK! I\u0027ve marked this task as done:\\n%s\", taskList.getTaskByIndex(indexForMarking)));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 21
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public int exceptionCode;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public final String[] EXCEPTION_MESSAGE \u003d {\"No such command!\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\ntodo TASK_DESCRIPTION\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\ndeadline TASK_DESCRIPTION /by TASK_TIME(yyyy-MM-dd HH:mm)\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\nevent TASK_DESCRIPTION /at TASK_TIME(yyyy-MM-dd HH:mm)\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\ndone TASK_INDEX\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\ndelete TASK_INDEX\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\ndate EXPECTED_DATE(yyyy-MM-dd)\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public InvalidCommandException(int exceptionCode) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.exceptionCode \u003d exceptionCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String getExceptionMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return EXCEPTION_MESSAGE[exceptionCode];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class InvalidFileException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class InvalidTaskIndexException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public LocalDateTime by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.US)));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public LocalDateTime at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.US)));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        char status \u003d (this.isDone)? \u0027V\u0027:\u0027X\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[%c] %s\", status, this.description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 17
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "deadline task2 /by 2020-09-20 18:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "event task3 /at 2020-10-02 12:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "date 2020-09-20"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "find task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "find task4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\command\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 4,
      "-": 19
    }
  }
]
