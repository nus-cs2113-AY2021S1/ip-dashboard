[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "-": 25
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static int taskNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static int MAX_TASK_SIZE \u003d 100;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static int LINE_CHAR_NUM \u003d 40;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static Task[] tasks \u003d new Task[MAX_TASK_SIZE];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine(LINE_CHAR_NUM);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        showLogo();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine(LINE_CHAR_NUM);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine(LINE_CHAR_NUM);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            text \u003d scan.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            echo(text);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } while (!text.equals(\"bye\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void addToDo(String description) throws InvalidCommandException{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        description \u003d description.trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (description.equals(\"\")) throw new InvalidCommandException(1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            tasks[taskNum] \u003d new ToDo(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(String.format(\"Got it. I\u0027ve added this task to your list:\\n%s\", tasks[taskNum]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskNum++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(\"Couldn\u0027t add this task because the list is full.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            countTaskNumber();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void addDeadline(String text) throws InvalidCommandException{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int dividePoint \u003d text.indexOf(\"/by\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (dividePoint \u003d\u003d -1) throw new InvalidCommandException(2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String description \u003d text.substring(0, dividePoint).trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String by \u003d text.substring(dividePoint + 3, text.length()).trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (description.equals(\"\") || by.equals(\"\")) throw new InvalidCommandException(2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            tasks[taskNum] \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(String.format(\"Got it. I\u0027ve added this task to your list:\\n%s\", tasks[taskNum]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskNum++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch(ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(\"Couldn\u0027t add this task because the list is full.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            countTaskNumber();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void addEvent(String text) throws InvalidCommandException{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int dividePoint \u003d text.indexOf(\"/at\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (dividePoint \u003d\u003d -1) throw new InvalidCommandException(3);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String description \u003d text.substring(0, dividePoint).trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String at \u003d text.substring(dividePoint + 3, text.length()).trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (description.equals(\"\") || at.equals(\"\")) throw new InvalidCommandException(3);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            tasks[taskNum] \u003d new Event(description, at);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(String.format(\"Got it. I\u0027ve added this task to your list:\\n%s\", tasks[taskNum]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskNum++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch(ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(\"Couldn\u0027t add this task because the list is full.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            countTaskNumber();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void countTaskNumber() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        switch (taskNum) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(\"You don\u0027t have any task in the list now.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(\"You have 1 task in the list now.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(String.format(\"You have %d tasks in the list now.\", taskNum));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void markAsDone(String taskInfo) throws InvalidCommandException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskInfo \u003d taskInfo.trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        boolean isNum \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int taskIndex \u003d -1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (int i \u003d 0; i \u003c taskInfo.length(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (!Character.isDigit(taskInfo.charAt(i))) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                isNum \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (isNum \u0026\u0026 (!taskInfo.equals(\"\"))) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskIndex \u003d Integer.parseInt(taskInfo) - 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException(4);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            tasks[taskIndex].isDone \u003d true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(\"OK! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(tasks[taskIndex]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch(Exception exception) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(\"This task doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void echo(String text) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String command \u003d (!text.contains(\" \"))? text:text.substring(0,text.indexOf(\" \"));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                list();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case \"joke\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                joke();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                markAsDone(text.substring(4, text.length()));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                addToDo(text.substring(4, text.length()));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                addDeadline(text.substring(8, text.length()));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                addEvent(text.substring(5, text.length()));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                throw new InvalidCommandException(0);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (InvalidCommandException exception) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            switch (exception.exceptionCode) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                System.out.println(\"No such command!\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                System.out.println(\"Incorrect command line argument(s).\\ntodo -taskName\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                System.out.println(\"Incorrect command line argument(s).\\ndeadline -taskName /by taskTime\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                System.out.println(\"Incorrect command line argument(s).\\nevent -taskName /at taskTime\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                System.out.println(\"Incorrect command line argument(s).\\ndone -taskIndex\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine(40);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void list() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (int i \u003d 0; i \u003c taskNum; i++) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            System.out.println(String.format(\"%d.%s\", i + 1, tasks[i]));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void joke() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        System.out.println(\"There are only 10 kinds of people in this world:\\nthose who know binary and those who don\u0027t.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void showLogo() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                + \"Modified by Wu Haitao\\n\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void drawHorizontalLine(int length) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        System.out.println(\"-\".repeat(Math.max(0, length)));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 196,
      "-": 8
    }
  },
  {
    "path": "src/main/java/duke/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    protected int exceptionCode;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public InvalidCommandException(int exceptionCode) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.exceptionCode \u003d exceptionCode;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), by);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        char status \u003d (this.isDone)? \u0027V\u0027:\u0027X\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[%c] %s\", status, this.description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 17
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "todo task2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "deadline task3 /by this Friday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "event task4 /at next Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "joke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 4,
      "-": 19
    }
  }
]
