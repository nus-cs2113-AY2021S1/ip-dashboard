[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 1,
      "-": 25
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        runCommandLoopUntilExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskList \u003d storage.loadFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (InvalidFileException exception) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            ui.showInvalidFileMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void runCommandLoopUntilExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                Command command \u003d new Parser().parseCommand(userInput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                ui.showCommandResult(command.execute(taskList, storage, ui));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                ui.showInvalidCommandMessage(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                ui.showInvalidFileMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                ui.showInvalidIndexMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            ui.drawHorizontalLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        new Duke(\"data/save.txt\").run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 60,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public int getTaskIndex(String taskInfo) throws InvalidTaskIndexException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskInfo \u003d taskInfo.trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        boolean isNum \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (int i \u003d 0; i \u003c taskInfo.length(); i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (!Character.isDigit(taskInfo.charAt(i))) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                isNum \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (isNum \u0026\u0026 (!taskInfo.equals(\"\"))) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            taskIndex \u003d Integer.parseInt(taskInfo) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return taskIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private ToDo getToDo(String taskInfo) throws InvalidCommandException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskInfo \u003d taskInfo.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (taskInfo.equals(\"\")) throw new InvalidCommandException(1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new ToDo(taskInfo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Deadline getDeadline(String taskInfo) throws InvalidCommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int dividePoint \u003d taskInfo.indexOf(\"/by\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            String description \u003d taskInfo.substring(0, dividePoint).trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            String by \u003d taskInfo.substring(dividePoint + \"/by\".length()).trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (description.equals(\"\") || by.equals(\"\")) throw new InvalidCommandException(2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new Deadline(description, by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException(2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Event getEvent(String taskInfo) throws InvalidCommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        int dividePoint \u003d taskInfo.indexOf(\"/at\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            String description \u003d taskInfo.substring(0, dividePoint).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            String at \u003d taskInfo.substring(dividePoint + \"/at\".length()).trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (description.equals(\"\") || at.equals(\"\")) throw new InvalidCommandException(3);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new Event(description, at);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException(3);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Command parseCommand(String userInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String command \u003d (!userInput.contains(\" \")) ? userInput : userInput.substring(0, userInput.indexOf(\" \"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new AddCommand(getToDo(userInput.substring(\"todo\".length())));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new AddCommand(getDeadline(userInput.substring(\"deadline\".length())));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new AddCommand(getEvent(userInput.substring(\"event\".length())));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                return new MarkCommand(getTaskIndex(userInput.substring(\"done\".length())));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (InvalidTaskIndexException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                throw new InvalidCommandException(4);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                return new DeleteCommand(getTaskIndex(userInput.substring(\"delete\".length())));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } catch (InvalidTaskIndexException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                throw new InvalidCommandException(5);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidCommandException(0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 84
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidFileException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private final int TASK_TYPE_POS \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private final int TASK_STATUS_POS \u003d 2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private final int TASK_INFO_START_POS \u003d 4;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private String dirPath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.dirPath \u003d filePath.substring(0, filePath.lastIndexOf(\"/\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void saveFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        new File(dirPath).mkdir();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        new File(filePath).createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        for (Task task: taskList.tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                text +\u003d ((task.isDone) ? \"T|1|\" : \"T|0|\") + task.description + System.lineSeparator();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                text +\u003d ((task.isDone) ? \"D|1|\" : \"D|0|\") + task.description + \"|\" + ((Deadline) task).by + System.lineSeparator();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                text +\u003d ((task.isDone) ? \"E|1|\" : \"E|0|\") + task.description + \"|\" + ((Event) task).at + System.lineSeparator();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        fileWriter.write(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public TaskList loadFile() throws InvalidFileException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        TaskList savedTaskList \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                String taskInfo \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                char taskType \u003d taskInfo.charAt(TASK_TYPE_POS);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                boolean taskIsDone \u003d taskInfo.charAt(TASK_STATUS_POS) \u003d\u003d \u00271\u0027;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                taskInfo \u003d taskInfo.substring(TASK_INFO_START_POS);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    task \u003d new ToDo(taskInfo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    task \u003d new Deadline(taskInfo.substring(0, taskInfo.indexOf(\u0027|\u0027)), taskInfo.substring(taskInfo.indexOf(\u0027|\u0027) + 1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    task \u003d new Event(taskInfo.substring(0, taskInfo.indexOf(\u0027|\u0027)), taskInfo.substring(taskInfo.indexOf(\u0027|\u0027) + 1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                    throw new InvalidFileException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                task.isDone \u003d taskIsDone;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                savedTaskList.add(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return savedTaskList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            throw new InvalidFileException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 79
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Task getTaskByIndex(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 33
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            + \"Modified by Wu Haitao\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static final String JOKE \u003d \"There are only 10 kinds of people in this world:\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"those who know binary and those who don\u0027t.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    //Number of \u0027-\u0027 consisted in the horizontal line"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private static final int LINE_CHAR_NUM \u003d 40;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this(new Scanner(System.in), System.out);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Ui(Scanner in, PrintStream out) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.in \u003d in;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Hello from\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(logo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Hello! I\u0027m Duke.\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        drawHorizontalLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void drawHorizontalLine() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"-\".repeat(LINE_CHAR_NUM));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showInvalidFileMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Accessing local data failed\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showInvalidCommandMessage(InvalidCommandException exception) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(exception.getExceptionMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showInvalidIndexMessage() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Invalid index!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showCommandResult(CommandResult result) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (result !\u003d null) out.println(result.getResult());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public void showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        if (taskList.getTaskListSize() \u003e 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "                out.println(String.format(\"%d.%s\", i + 1, taskList.getTaskByIndex(i)));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            out.println(\"You don\u0027t have any tasks in your list now.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String checkNumberOfTask(TaskList taskList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        switch (taskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return \"You don\u0027t have any task in the list now.\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return \"You have 1 task in the list now.\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            return String.format(\"You have %d tasks in the list now.\", taskList.getTaskListSize());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 90
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private Task taskToAdd;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public AddCommand(Task taskToAdd) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        storage.saveFile(taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new CommandResult(String.format(\"Got it. I\u0027ve added this task to your list:\\n%s\\n%s\", taskToAdd, ui.checkNumberOfTask(taskList)));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 24
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String getResult() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    int indexForDeletion;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public DeleteCommand(int indexForDeletion) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.indexForDeletion \u003d indexForDeletion;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui) throws IOException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskList.delete(indexForDeletion);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        storage.saveFile(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new CommandResult(String.format(\"OK! I\u0027ve deleted the task.\\n%s\", ui.checkNumberOfTask(taskList)));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "src/main/java/duke/command/MarkCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class MarkCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    private int indexForMarking;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public MarkCommand(int indexForMarking) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.indexForMarking \u003d indexForMarking;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public CommandResult execute(TaskList taskList, Storage storage, Ui ui) throws IOException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        taskList.getTaskByIndex(indexForMarking).isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        storage.saveFile(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return new CommandResult(String.format(\"OK! I\u0027ve marked this task as done:\\n%s\", taskList.getTaskByIndex(indexForMarking)));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 21
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public int exceptionCode;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public final String[] EXCEPTION_MESSAGE \u003d {\"No such command!\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\ntodo -taskName\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\ndeadline -taskName /by -taskTime\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\nevent -taskName /at -taskTime\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\ndone -taskIndex\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "            \"Incorrect command line argument(s).\\ndelete -taskIndex\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public InvalidCommandException(int exceptionCode) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.exceptionCode \u003d exceptionCode;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String getExceptionMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return EXCEPTION_MESSAGE[exceptionCode];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class InvalidFileException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class InvalidTaskIndexException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), by);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        char status \u003d (this.isDone)? \u0027V\u0027:\u0027X\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[%c] %s\", status, this.description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 17
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "text-ui-test/data/save.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "T|0|task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "D|0|task2|tomorrow"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "E|0|task3|next Sunday"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "todo task4"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "deadline task5 /by today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "event task6 /at next Monday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\command\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wu-Haitao"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "Wu-Haitao": 4,
      "-": 19
    }
  }
]
