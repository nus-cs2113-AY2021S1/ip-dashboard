[
  {
    "path": "data/dump.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "|T|false|hair|"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "|E|false|CS2113 lecture on Friday 18 September 2020|4 pm to 6pm|"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 2
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " * Deadline task which inherits from Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " * Adds the ability to have a deadline (by)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public Deadline(String job, String deadline) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        super(job);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public Deadline(String job, boolean status, String deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        super(job, status);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String toPlainText() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return \"|D\" + super.toPlainText() + String.format(\"%s|\", deadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 33
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " * Main class that runs the chat bot. Tasks are managed by the TaskManager"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " * Duke provides the extraction of action words, descriptions and due dates"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " * Duke also provides methods to print useful messages"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // CONSTANTS"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // Logo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // Command list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String EXIT_COMMAND \u003d \"BYE\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"LIST\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String SAVE_COMMAND \u003d \"SAVE\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String COMPLETE_COMMAND \u003d \"DONE\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"TODO\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"DELETE\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"DEADLINE\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String DEADLINE_PREFIX \u003d \"/by\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"EVENT\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String EVENT_PREFIX \u003d \"/at\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // Consolidated Command List by Type"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String[] SINGLE_WORD_COMMANDS \u003d new String[]{EXIT_COMMAND, LIST_COMMAND, SAVE_COMMAND};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String[] DOUBLE_WORD_COMMANDS \u003d new String[]{COMPLETE_COMMAND, TODO_COMMAND, DELETE_COMMAND};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String[] TRIPLE_WORD_COMMANDS \u003d new String[]{DEADLINE_COMMAND, EVENT_COMMAND};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // Duke\u0027s Situational Messages"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String EMPTY_TASK_LIST_MESSAGE \u003d \"Seems like it\u0027s really empty here :(\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // Duke Error Messages"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String NO_DESCRIPTION_ERROR \u003d \"Sorry! There seems to be a lack of description for the task you want to add!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String NO_TIMING_ERROR \u003d \"Sorry! There seems to be a lack of timing for the task you want to add!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String INDEX_VALUE_ERROR \u003d \"Index is not valid or is not an integer!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String WRONG_PREFIX_ERROR \u003d \"You used the wrong prefix!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String PREFIX_ERROR \u003d \"Please use %s to indicate the timing\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // Duke Suggested Solutions"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static final String NO_DESCRIPTION_SOLUTION \u003d \"Please add a descriptor after the action word with. Ensure there is a space in the middle.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        // Startup and Initializations"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String currentUserInput \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String actionWord;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String timing;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String[] processedUserInput;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        // TODO: In CLI, up and down arrow inputs are parsed by the parser."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        // Introduce the bot after startup"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printIntroduction(LOGO);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        while (!currentUserInput.equalsIgnoreCase(EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            ArrayList\u003cString\u003e outputMessages;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            currentUserInput \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             * Cases"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             * 1. User inputs the correct input (COMMAND DESCRIPTOR TIMING)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             *      - Switch case should handle the event as per normal"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             * 2. User inputs only the command (COMMAND)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             *      - If the command does not require descriptor or timing, carry on."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             *      - In the event of tasks, throw descriptor missing"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             *      - Worry about timing in case 5."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             * 3. User has multiple spaces between the three keywords"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             *      - Remove the null strings in the array"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             * 4. User has no spaces between the three keywords"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             *      - Treat it as wrong command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             * 5. User is missing timing when required"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             *      - In the event of event and deadline, throw timing missing"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             * 6. User input wrong command"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             *      - Throw unknown command"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "             */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            // Try to process user input. If exception is thrown, deal with the error and carry on with next loop."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                processedUserInput \u003d processInput(currentUserInput);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            } catch (NoSuchFieldException | NoInputTimingException | WrongPrefixException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            // actionWord has not been confirmed if it is correct yet."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            actionWord \u003d processedUserInput[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            switch (actionWord) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case EXIT_COMMAND:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case LIST_COMMAND:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                printTasks(taskManager);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case SAVE_COMMAND:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                taskManager.outputTasks();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case COMPLETE_COMMAND:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    index \u003d Integer.parseInt(processedUserInput[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    if (index \u003c 1 || index \u003e taskManager.getNumberOfTasks()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        throw new NumberFormatException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    printError(INDEX_VALUE_ERROR);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                outputMessages \u003d taskManager.completeTask(index);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                printMessage(outputMessages);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case DELETE_COMMAND:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    index \u003d Integer.parseInt(processedUserInput[1]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    if (index \u003c 1 || index \u003e taskManager.getNumberOfTasks()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        throw new NumberFormatException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    printError(INDEX_VALUE_ERROR);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                outputMessages \u003d taskManager.deleteTask(index);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                printMessage(outputMessages);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case TODO_COMMAND:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                description \u003d processedUserInput[1];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                outputMessages \u003d taskManager.addTodo(description);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                printMessage(outputMessages);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                taskManager.outputTasks();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                description \u003d processedUserInput[1];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                timing \u003d processedUserInput[2];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                outputMessages \u003d taskManager.addDeadline(description, timing);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                printMessage(outputMessages);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                taskManager.outputTasks();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case EVENT_COMMAND:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                description \u003d processedUserInput[1];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                timing \u003d processedUserInput[2];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                outputMessages \u003d taskManager.addEvent(description, timing);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                printMessage(outputMessages);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                taskManager.outputTasks();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                printError();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printExitMessage();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * Prints a line to isolate Duke\u0027s replies."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printDivider() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String line \u003d \"------------------------------------------------\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * Prints the introduction given a text-based logo."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * @param logo String that represents the logo of the chat-bot."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printIntroduction(String logo) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        System.out.println(\"Hello I\u0027m \\n\" + logo);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * Prints an exit message."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * General purpose method to print a string between two dividers."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * @param message Message to be printed."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printMessage(String message) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * Specialized printMessage function to throw an error message"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printError() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printMessage(new String[]{\"Error!\", \"\", \"Unknown Command! Try again!\"});"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printError(String message) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printMessage(new String[]{\"Error!\", \"\", message});"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printErrors(String[] messages) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String[] errorMessages \u003d new String[2 + messages.length];"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        errorMessages[0] \u003d \"Error!\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        errorMessages[1] \u003d \"\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        System.arraycopy(messages, 0, errorMessages, 2, messages.length);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printMessage(errorMessages);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * General purpose method to print multiple strings between two dividers."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * @param messages An array of messages to be printed"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printMessage(String[] messages) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printMessage(ArrayList\u003cString\u003e messages) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * Method to print all tasks stored inside the Task Manager"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * @param taskManager TaskManager Object used to retrieve a list of all tasks as well as number of tasks."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static void printTasks(TaskManager taskManager) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        int numOfTasks \u003d taskManager.getNumberOfTasks();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String[] messages \u003d new String[numOfTasks];"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            messages \u003d new String[]{EMPTY_TASK_LIST_MESSAGE};"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfTasks; i++) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            String outputMessage \u003d String.format(\"%d.\\t%s\", i + 1, tasks.get(i).toString());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            messages[i] \u003d outputMessage;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        printMessage(messages);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static String[] processInput(String input) throws NoSuchFieldException,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            NoInputTimingException, IllegalStateException, WrongPrefixException {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String actionWord \u003d extractActionWord(input)[0];"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String timing;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (contains(SINGLE_WORD_COMMANDS, actionWord)) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            return new String[]{actionWord};"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        } else if (contains(DOUBLE_WORD_COMMANDS, actionWord)) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                description \u003d extractDescription(input, actionWord);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                return new String[]{"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        actionWord,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        description"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                };"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            } catch (NoSuchFieldException e) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                String[] errorMessages \u003d new String[]{"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        NO_DESCRIPTION_ERROR,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        NO_DESCRIPTION_SOLUTION"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                };"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                printErrors(errorMessages);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        } else if (contains(TRIPLE_WORD_COMMANDS, actionWord)) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                description \u003d extractDescription(input, actionWord);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                timing \u003d extractTiming(input, actionWord);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                return new String[]{"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        actionWord,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        description,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        timing"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                };"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            } catch (NoSuchFieldException e) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                String[] errorMessages \u003d new String[]{"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        NO_DESCRIPTION_ERROR,"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                        NO_DESCRIPTION_SOLUTION"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                };"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                printErrors(errorMessages);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            } catch (NoInputTimingException e) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                String[] errorMessages;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                String prefix \u003d getPrefix(actionWord);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                if (!prefix.isBlank()) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    errorMessages \u003d new String[]{"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                            NO_TIMING_ERROR,"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                            String.format(PREFIX_ERROR, prefix)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    };"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    printErrors(errorMessages);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    printError(NO_TIMING_ERROR);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            } catch (WrongPrefixException e) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                String[] errorMessages;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                String prefix \u003d getPrefix(actionWord);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                if (!prefix.isBlank()) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    errorMessages \u003d new String[]{"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                            WRONG_PREFIX_ERROR,"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                            String.format(\"Please use %s to indicate the timing\", prefix)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    };"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    printErrors(errorMessages);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                    printError(WRONG_PREFIX_ERROR);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            // Unknown command. Throw to switch case to handle."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            return new String[]{actionWord};"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private static String[] extractActionWord(String input) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return new String[]{input.split(\" \")[0].toUpperCase()};"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private static String extractDescription(String input, String actionWord) throws NoSuchFieldException {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        // First letter of description is at actionWord length + 1 to account for space bar"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        int descriptionIndex \u003d actionWord.length() + 1;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        // If the index is out of range, description must be missing."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (descriptionIndex \u003e\u003d input.length()) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            throw new NoSuchFieldException();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String description \u003d input.substring(descriptionIndex).strip();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            throw new NoSuchFieldException();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            // Find if there is a timing command by finding indexOf \"/\""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            int timingIndex \u003d description.indexOf(\"/\");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            if (timingIndex \u003e -1) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                description \u003d description.substring(0, timingIndex).strip();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                throw new NoSuchFieldException();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                return description;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private static String extractTiming(String input, String actionWord)"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            throws NoInputTimingException, WrongPrefixException {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String prefix;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        int timingIndex;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        prefix \u003d getPrefix(actionWord);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (prefix.isBlank()) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            throw new NoInputTimingException();"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        timingIndex \u003d input.indexOf(prefix);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        // Prefix not found"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (timingIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                throw new NoInputTimingException();"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            throw new WrongPrefixException();"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        timingIndex +\u003d prefix.length();"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        // Prefix found but nothing after that"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (timingIndex \u003e\u003d input.length()) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            throw new NoInputTimingException();"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String timing \u003d input.substring(timingIndex).strip();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        // Prefix found but after strip, nothing found after it"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (timing.isBlank()) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            throw new NoInputTimingException();"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            return timing;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static boolean contains(String[] array, String actionWord) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        for (String keyword : array) {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            if (keyword.equals(actionWord)) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public static String getPrefix(String actionWord) {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        switch (actionWord) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            return DEADLINE_PREFIX;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            return EVENT_PREFIX;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 421,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " * Event task which inherits from Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " * Adds the ability to have a timing (at)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public Event(String job, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        super(job);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public Event(String job, boolean status, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        super(job, status);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String toPlainText() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return \"|E\" + super.toPlainText() + String.format(\"%s|\", at);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", at);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 31
    }
  },
  {
    "path": "src/main/java/NoInputTimingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "public class NoInputTimingException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 2
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " * Task Class used to hold the job description as well as the status of the job."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandonywl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private final String job;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private boolean status;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // TODO: Set a string representation of Status that can be viewed on Unix."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private String statusString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public Task(String job) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.job \u003d job;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        incomplete();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public Task(String job, boolean status) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this(job);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (status) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            complete();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // Unicode representation of a tick"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.statusString \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    // Unicode representation of a cross"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public void incomplete() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.statusString \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String toPlainText() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return String.format(\"|%b|%s|\", this.status, this.job);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return String.format(\"[%s] %s\", statusString, job);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 41
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    TaskManager() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            importTask();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        } catch (WrongPrefixException e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public Task getLatestTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    protected void addTask(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public ArrayList\u003cString\u003e addTodo(String task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        Todo newTask \u003d new Todo(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        addTask(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return generateAddTaskMessages();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public void addTodo(String task, boolean status) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        Todo newTask \u003d new Todo(task, status);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        addTask(newTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        generateAddTaskMessages();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public ArrayList\u003cString\u003e addDeadline(String task, String deadline) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(task, deadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        addTask(newDeadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return generateAddTaskMessages();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public void addDeadline(String task, boolean status, String deadline) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(task, status, deadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        addTask(newDeadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        generateAddTaskMessages();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public ArrayList\u003cString\u003e addEvent(String task, String startTime) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        Event newEvent \u003d new Event(task, startTime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        addTask(newEvent);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return generateAddTaskMessages();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public void addEvent(String task, boolean status, String startTime) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        Event newEvent \u003d new Event(task, status, startTime);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        addTask(newEvent);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        generateAddTaskMessages();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public ArrayList\u003cString\u003e completeTask(int userStipulatedIndex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        int index \u003d userStipulatedIndex - 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        tasks.get(index).complete();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        ArrayList\u003cString\u003e outputMessage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        outputMessage.add(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        outputMessage.add(\"\\t\" + tasks.get(index));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return outputMessage;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public ArrayList\u003cString\u003e deleteTask(int userStipulatedIndex) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        int index \u003d userStipulatedIndex - 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        Task remTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        ArrayList\u003cString\u003e outputMessage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        outputMessage.add(\"Noted. I have removed this task:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        outputMessage.add(remTask.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        outputMessage.add(String.format(\"Now you have %d tasks in the list.\", getNumberOfTasks()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return outputMessage;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * Generates a standard message to print when a new task is added. Retrieves the last task and prints it\u0027s"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * information."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     * @return Returns a standard String Array to be printed."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public ArrayList\u003cString\u003e generateAddTaskMessages() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        Task latestTask \u003d getLatestTask();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        ArrayList\u003cString\u003e outputMessage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        outputMessage.add(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        outputMessage.add(\"\\t\" + latestTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        outputMessage.add(String.format(\"Now you have %d tasks in the list.\", getNumberOfTasks()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return outputMessage;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String[] getTasksAsStrings() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String[] outputMessages \u003d new String[getNumberOfTasks()];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        for (Task currTask : this.tasks) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            if (currTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            String task \u003d currTask.toPlainText();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            outputMessages[i] \u003d task;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return outputMessages;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public void outputTasks() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String dumpFile \u003d checkDumpMade();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String[] outputMessages \u003d getTasksAsStrings();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        WriteFile writer \u003d new WriteFile(dumpFile);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            writer.writeToFile(outputMessages);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            System.out.println(\"Dump successful\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            System.out.println(\"Failed to dump file\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public void importTask() throws WrongPrefixException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String dumpFile \u003d checkDumpMade();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        File file;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        FileReader fr;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        BufferedReader br;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        StringBuffer sb;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            file \u003d new File(dumpFile);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            sb \u003d new StringBuffer();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            String nextLine;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            while ((nextLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                sb.append(nextLine);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String[] tasks \u003d sb.toString().split(\"\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        for (String line : tasks) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            String[] attributes \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            String taskType \u003d attributes[1];"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            boolean taskStatus \u003d Boolean.parseBoolean(attributes[2]);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            String description \u003d attributes[3];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            String timing \u003d \"\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            if (attributes.length \u003e 4) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                timing \u003d attributes[4];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            switch (taskType){"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                addTodo(description, taskStatus);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                addEvent(description, taskStatus, timing);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                addDeadline(description, taskStatus, timing);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "                throw new WrongPrefixException();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String checkDumpMade() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String home \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        java.nio.file.Path saveFolderPath \u003d java.nio.file.Paths.get(home, \"data\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String saveFolder \u003d saveFolderPath.toString();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        java.nio.file.Path dumpFilePath \u003d java.nio.file.Paths.get(saveFolder, \"dump.txt\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        String dumpFile \u003d dumpFilePath.toString();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        if (!java.nio.file.Files.exists(dumpFilePath)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            File file \u003d new File(saveFolder);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            boolean success \u003d file.mkdirs();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            String message \u003d success ? \"Made directories\" : \"Failed to make directories\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return dumpFile;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 195
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public Todo (String task) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public Todo (String task, boolean status) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        super(task, status);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String toPlainText() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return \"|T\" + super.toPlainText();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 19
    }
  },
  {
    "path": "src/main/java/WriteFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "public class WriteFile {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    private boolean appendToFile \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public WriteFile(String path) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public WriteFile(String path, boolean append) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        this.appendToFile \u003d append;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public void writeToFile(String textLine) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        FileWriter write \u003d new FileWriter(path, appendToFile);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        PrintWriter print_line \u003d new PrintWriter(write);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        print_line.printf(textLine + \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        print_line.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    public void writeToFile(String[] textLines) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        FileWriter write \u003d new FileWriter(path, appendToFile);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        PrintWriter print_line \u003d new PrintWriter(write);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandonywl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        for(String textLine : textLines) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "            print_line.printf(textLine + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "        print_line.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 34
    }
  },
  {
    "path": "src/main/java/WrongPrefixException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "public class WrongPrefixException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java ../src/main/java/TaskManager.java ../src/main/java/Task.java ../src/main/java/Deadline.java ../src/main/java/Event.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 1,
      "-": 37
    }
  }
]
