[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Duke is a desktop application for task management, "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "optimized for use via a Command Line Interface (CLI). "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "If you like typing, Duke is the perfect task management application"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "for you. Duke can manage your todo tasks, deadlines and events quickly."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Add a task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "You can add a todo task, a deadline or an event to your task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Mark a task as done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "All tasks are marked as undone by default. When you have completed "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "your task, you can mark it as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Delete a task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "When a task is outdated or unnecessary, you can delete it permanently "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "from the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### List your tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "To see all your tasks, you can list all your tasks for viewing. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "If you only want to check on your deadlines or events on a specific"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "date, this is also possible."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Find tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "In case your list of tasks is too long, you can find tasks using"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "keywords to find your tasks more easily. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### Save your list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Whenever you make changes to your task list, these changes will"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "automatically be saved to a txt file named `duke.txt`."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### `todo DESCRIPTION` - Add a Todo"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Substituting `DESCRIPTION` with any todo action, you can add a todo"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "to your task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`todo do laundry`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`Okay! I added:`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`[T][N] do laundry`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`Now you have 2 tasks in the list!`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### `deadline DESCRIPTION /by YYYY-MM-DD` - Add a Deadline"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Substituting `DESCRIPTION` with any action and `YYYY-MM-DD` with "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "a date, you can add a deadline to your list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`deadline CS2113T project /by 2020-10-10`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`Okay! I added:`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`[D][N] project (by: Oct 10 2020)`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`Now you have 2 tasks in the list!`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### `event DESCRIPTION /at YYYY-MM-DD` - Add an Event"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Substituting `DESCRIPTION` with any action and `YYYY-MM-DD` with "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "a date, you can add an event to your list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`event CS2113T project meeting /at 2020-09-10`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`Okay! I added:`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`[E][N] project meeting (at: Sep 10 2020)`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`Now you have 3 tasks in the list!`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### `done TASK_NUMBER` - Mark a task as done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "When you have completed the task, you can mark a task as done by "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "just referring to the task number. "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`done 3`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`Good job! You\u0027ve completed:`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`[T][Y] do laundry`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### `delete TASK_NUMBER` - Delete a task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Similarly, when you delete a task, you can do it by referring to a "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "task by its task number."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`Alright lazy bum... I\u0027ll delete this:`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`[T][N] do laundry`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`Now you have 2 tasks in your list!`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "A simple command to list all of your tasks."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`These are the tasks you have now!`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`1. [T][N] do laundry`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`2. [D][N] project (by: Oct 10 2020)`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`3. [E][N] project meeting (at: Sep 10 2020)`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### `list DATE` - List tasks according to date"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`DATE` must be in the format `YYYY-MM-DD`. This lists all the"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "deadlines / events associated with the date."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`list 2020-10-10`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`These are the tasks you have now!`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`1. [D][N] project (by: Oct 10 2020)`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "### `find KEYWORD` - Find a task"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Replacing `KEYWORD` with any keyword, Duke will list all tasks"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "with the corresponding keyword."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`find project`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`These are the tasks you have now!`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`1. [D][N] project (by: Oct 10 2020)`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "`2. [E][N] project meeting (at: Sep 10 2020)`"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 129,
      "-": 21
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "[D] | 0 | hello | 2020-01-01"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "[E] | 0 | hello | 2020-01-01"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "[T] | 0 | bye"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Instantiates a Duke instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param filePath File path of the file which the data is to be saved into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            storage.loadFile(tasks, ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printIOExceptionError(e);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Runs Duke instance."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Runs the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Boolean isExit \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ui.printDateTimeParseError();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ui.printEmptyDescriptionError();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 59,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a parser to parse command inputs by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static Command parse(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new ListCommand(command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 30
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import static duke.command.AddCommand.addDeadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import static duke.command.AddCommand.addEvent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import static duke.command.AddCommand.addTodo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents the file for data to be loaded from and saved into."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Loads data from the file \"duke.txt\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Creates a new file if the file does not exist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @throws IOException If the file is corrupted."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void loadFile(TaskList tasks, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Scanner read \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        while (read.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            loadFileTask(read.nextLine(), tasks, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        read.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Adds individual tasks from the file into the TaskList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param line Line from the file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void loadFileTask(String line, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String[] taskDetails \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case \"[T]\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addTodo(taskDetails[2], tasks, this, true, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case \"[D]\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addDeadline(taskDetails[2] + \" /by \" + taskDetails[3], tasks, this, true, ui);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        case \"[E]\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addEvent(taskDetails[2] + \" /at \" + taskDetails[3], tasks, this, true, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // Happens if there is nothing in the list (or any garbage text)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        // Mark as done if the task is already done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            tasks.getTask(tasks.getSize() - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Adds a line to the file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param filePath File path of the file to be saved: \"duke.txt\"."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param line Line to be written into the file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void writeToFile(String filePath, String line, Ui ui) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            writer.write(System.lineSeparator() + line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printIOExceptionError(e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Updates a certain line in the file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param oldTaskString Old string to be updated."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param newTaskString New string to be updated to."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @throws IOException If the file is corrupted."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void updateFile(String oldTaskString, String newTaskString) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        File file \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        StringBuffer buffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        // Puts everything from file into buffer"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            buffer.append(scanner.nextLine() + System.lineSeparator());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        // Puts everything from buffer into String"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String fileContents \u003d buffer.toString();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        // Update the file"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        fileContents \u003d fileContents.replace(oldTaskString, newTaskString);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        writer.append(fileContents);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 119
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns the task based on the index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param index Index of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return Task with the corresponding index."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Task getTask(Integer index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return Size of task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Removes a task from the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param task Task to be removed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void remove(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints the entire task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            System.out.print(tasks.indexOf(task) + 1 + \".\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            task.printTask();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns a list of tasks which has deadlines on a specific date or"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * events which occur on that specific date."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Filters the task list by the date."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param date Date to be filtered by."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return List of tasks which are filtered by the date."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public TaskList filterByDate(LocalDate date) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter((t) -\u003e !(t instanceof Todo))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter((t) -\u003e t.getDate().equals(date))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new TaskList(filteredList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns a list of tasks with the keyword."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Filters the task list by the keyword."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param keyword Keyword to be filtered by."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return List of tasks containing the keyword."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ArrayList\u003cTask\u003e keywordList \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .filter((t) -\u003e t.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return new TaskList(keywordList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 102
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns command input from the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return Command input string."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        command \u003d in.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints the welcome message at the start of the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Welcome! :D This is TaskThomas.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"What are you doing today? \\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints the exit message before the program exits."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Bye bye :( Hope to see you again soon!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints the list of tasks and indicates whether they are done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            System.out.println(\"Oops! You have no tasks in your list. \\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"These are the tasks you have now!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        tasks.print();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints success message when the task is successfully marked as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param task Current TaskList."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printMarkedDoneMessage(Task task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Good job! You\u0027ve completed:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        task.printTask();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints success message when the task is deleted successfully."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param task Task to be deleted."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printDeletedTaskMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Alright lazy bum... I\u0027ll delete this:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        task.printTask();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list! \\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints success message when the task is added successfully."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printAddedTaskMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Okay! I added:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        tasks.getTask(tasks.getSize()-1).printTask();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list! \\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints error message when the description is not specified."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printEmptyDescriptionError() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Ohno! The description cannot be empty :( \\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints error message when the deadline is not specified."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printMissingByError() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Ohno! Your deadline needs a /by :( \\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints error message when the date an event is occurring on is not specified."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printMissingAtError() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Ohno! Your event needs an /at :( \\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints error message when the task is not starting with todo, deadline or event."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printMissingLabelError() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Ohno! You should label your task with \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027... \\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * The following methods prints error messages which can be thrown up."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printNumberFormatExceptionError() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Ohno! Please list a task number :( \\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printStringIndexOutOfBoundsError() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Ohno! You didn\u0027t list the task number :( \\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printIndexOutOfBoundsError() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Ohno! This is an invalid task number :( \\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printIOExceptionError(IOException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Something went wrong: \" + e.getMessage() + \"\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printDateTimeParseError() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\"Ohno! Your date should be in the format yyyy-mm-dd :( \\n\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 138
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a command which adds a task to the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private final int TODO_DESCRIPTION_INDEX \u003d 5;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private final int DEADLINE_DESCRIPTION_INDEX \u003d 9;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private final int EVENT_DESCRIPTION_INDEX \u003d 6;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public AddCommand(String line) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Adds a task to the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param storage Used to save and load files."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (line.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            addTodo(line.substring(TODO_DESCRIPTION_INDEX), tasks, storage, false, ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else if (line.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                addDeadline(line.substring(DEADLINE_DESCRIPTION_INDEX), tasks, storage, false, ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ui.printMissingByError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else if (line.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                addEvent(line.substring(EVENT_DESCRIPTION_INDEX), tasks, storage, false, ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ui.printMissingAtError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                ui.printDateTimeParseError();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // Happens if the task is not labeled"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printMissingLabelError();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printAddedTaskMessage(tasks.getTask(tasks.getSize() -1), tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Adds a todo task to the TaskList."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param command User command input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param storage Saves and loads files."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param isFromFile If adding the todo is from loading the file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static void addTodo(String command, TaskList tasks, Storage storage, Boolean isFromFile, Ui ui) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (command.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        tasks.add(new Todo(command));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (!isFromFile) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            storage.writeToFile(\"duke.txt\", tasks.getTask(tasks.getSize()-1).toString(), ui);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Adds a deadline task to the TaskList."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param command User command input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param storage Saves and loads files."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param isFromFile If adding the deadline is from loading the file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static void addDeadline(String command, TaskList tasks, Storage storage, Boolean isFromFile, Ui ui) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String[] descriptionAndBy \u003d command.split(\" /by \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (descriptionAndBy[0].length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        tasks.add(new Deadline(descriptionAndBy[0], descriptionAndBy[1]));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (!isFromFile) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            storage.writeToFile(\"duke.txt\", tasks.getTask(tasks.getSize()-1).toString(), ui);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Adds an event task to the TaskList."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param command User command input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param storage Saves and loads files."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param isFromFile If adding the event is from loading the file."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public static void addEvent(String command, TaskList tasks, Storage storage, Boolean isFromFile, Ui ui) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        String[] descriptionAndAt \u003d command.split(\" /at \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (descriptionAndAt[0].length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        tasks.add(new Event(descriptionAndAt[0], descriptionAndAt[1]));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (!isFromFile) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            storage.writeToFile(\"duke.txt\", tasks.getTask(tasks.getSize()-1).toString(), ui);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 125
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a command to be executed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a command which deletes a task from the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private final int DESCRIPTION_INDEX \u003d 7;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public DeleteCommand(String line) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.command \u003d line;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Deletes a task from the TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param storage Saves and loads files."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        int taskNum \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            taskNum \u003d Integer.parseInt(command.substring(DESCRIPTION_INDEX));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printNumberFormatExceptionError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printStringIndexOutOfBoundsError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Task task \u003d tasks.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String oldTaskString \u003d task.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // Updates task arraylist and file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            tasks.remove(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            storage.updateFile(oldTaskString, \"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printDeletedTaskMessage(task, tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printIndexOutOfBoundsError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printIOExceptionError(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 57
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a command which marks a task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private final int TASKNUM_INDEX \u003d 5;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public DoneCommand(String line) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param storage Saves and loads files."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        int taskNum \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            taskNum \u003d Integer.parseInt(line.substring(TASKNUM_INDEX));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printNumberFormatExceptionError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printStringIndexOutOfBoundsError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            Task task \u003d tasks.getTask(taskNum-1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            String oldTaskString \u003d task.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            // Update task arraylist and the file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            task.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            storage.updateFile(oldTaskString, task.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printMarkedDoneMessage(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printIndexOutOfBoundsError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printIOExceptionError(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 57
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a command which exits the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Sets the isExit boolean of a command to true. Program will exit in main loop."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param storage Saves and loads files."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 21
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a command which finds tasks based on the keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public FindCommand(String command) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.keyword \u003d command.substring(5);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Finds tasks with the corresponding keyword."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param storage Saves and loads files."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (keyword.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        TaskList keywordList \u003d tasks.find(keyword);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        ui.printList(keywordList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a command which lists the current TaskList to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    private final int DATE_INDEX \u003d 5;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints the entire list of tasks to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param ui Interactions with the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param storage Saves and loads files."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printList(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(command.substring(DATE_INDEX));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            TaskList filteredList \u003d tasks.filterByDate(date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "            ui.printList(filteredList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * a task with a date as the deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Deadline(String description, String by) throws DateTimeParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        descriptor \u003d \"[D]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.setDate(LocalDate.parse(by));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns the descriptor of the deadline: [D]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return Descriptor of deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String getDescriptor() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return descriptor;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns a string format of the deadline. Used to save into files."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return String format of deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return descriptor + \" | \" + (isDone ? \"1 | \" : \"0 | \") + description + \" | \" + date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints the deadline in the format:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * \u003ccode\u003e[D][status] description (by: deadline)\u003c/code\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(\"  \" + descriptor);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(getStatusIcon() + \" \" + description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents an event. An \u003ccode\u003eEvent\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * a task occurring on a specific date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Event(String description, String at) throws DateTimeParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        descriptor \u003d \"[E]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.setDate(LocalDate.parse(at));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns the descriptor of the event: [E]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return Descriptor of event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String getDescriptor() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return descriptor;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns the string format of the event. Used to save into files."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return String format of event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return descriptor + \" | \" + (isDone ? \"1 | \" : \"0 | \") + description + \" | \" + date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints the event in the format:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * \u003ccode\u003e[E][status] description (at: date)\u003c/code\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(\"  \" + descriptor);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(getStatusIcon() + \" \" + description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(\" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a task. A task can be either a Todo, Event or Deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    protected String descriptor;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns a tick or cross depending on whether a task is marked done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return Tick or Cross"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        // Return tick or cross symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public abstract String getDescriptor();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns the date associated with the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Can only be used with deadlines and events."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * For deadlines, returns the date of the deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * For events, returns the date the event is occurring."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return Either the deadline of the date of occurrence of task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Sets the date of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * For deadlines, sets the date of the deadline."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * For events, sets the date of occurrence of event."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.println(getStatusIcon() + \" \" + description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 68
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * Represents a todo. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " * a task with an action."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloesyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        descriptor \u003d \"[T]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns the todo\u0027s descriptor: [T]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return Descriptor of Todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String getDescriptor() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return descriptor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Returns the string format of the Todo. Used to save into files."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * @return String format of Todo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        return descriptor + \" | \" + (isDone ? \"1 | \" : \"0 | \") + description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloesyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * Prints the Todo in the format:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     * \u003ccode\u003e[T][status] description\u003c/code\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        System.out.print(\"  \" + descriptor);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "        super.printTask();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloesyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloesyy": 42
    }
  }
]
