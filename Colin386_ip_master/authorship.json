[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Prints a welcome message on the screen"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public static void welcomeMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Prints a goodbye message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public static void goodbyeMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function processes user commands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Terminates if bye is entered by the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * prints out the list of task if \"list\" is entered"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Marks item X as complete when \"done X\" is entered"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public static void echo() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        Scanner in  \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        MyList items \u003d new MyList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        FileSaver f \u003d new FileSaver();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        f.loadData(items);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"Files Loaded\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                items.printList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String[] info \u003d command.split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                int index;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    index \u003d Integer.parseInt(info[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    items.completeTask(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    System.out.println(\"Invalid index number entered\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    System.out.println(\"Number missing or invalid\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            //add the thing into the list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    String[] commandArgs \u003d command.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    String number \u003d commandArgs[1];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    number.trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    int index \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    items.deleteItem(index-1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    System.out.println(\"Invalid index number entered\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    System.out.println(\"Number missing or invalid\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                items.addItem(command);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        f.saveData(items);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"File saved successfully!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Main Functions, welcomes users, process user commands"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Prints goodbye message and terminates."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        echo();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        goodbyeMessage();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 100,
      "-": 10
    }
  },
  {
    "path": "src/main/java/FileSaver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class FileSaver {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /** root directory of wherever the java file is run*/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private final String HOME \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private Path dukeInfoLocation;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private Path dukeInfoFolder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private List\u003cString\u003e prevInfo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public FileSaver() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        dukeInfoLocation \u003d Paths.get(HOME, \"data\",\"duke.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        dukeInfoFolder \u003d Paths.get(HOME, \"data\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Saves the information stored for the session into a txt file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param destination Mylist data type containing the records of events done earlier"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void saveData(MyList destination) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (!Files.exists(dukeInfoFolder)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                Files.createDirectory(dukeInfoFolder);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            Files.deleteIfExists(dukeInfoLocation);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            dukeInfoLocation \u003d Files.createFile(dukeInfoLocation);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"File IO Error! file cannot be saved\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            int entryNumber \u003d destination.getSize();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            ArrayList\u003cString\u003e toWrite \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            for (int i \u003d 0; i \u003c destination.getSize(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                Task activity \u003d destination.retrieveTask(i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String activityString \u003d this.formatTask(activity);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                toWrite.add(activityString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            Files.write(dukeInfoLocation, toWrite, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"Error! unable to record information to file\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"Session saved!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Loads the data into the current list for the user to continue modifying the list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param destination MyList data type to contain all recorded events in the computer\u0027s txt file"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void loadData(MyList destination) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (Files.notExists(dukeInfoLocation)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                System.out.println(\"Nothing to load data from\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            List\u003cString\u003e fileInfo \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            fileInfo \u003d Files.readAllLines(dukeInfoLocation, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            for (int i \u003d 0; i \u003c fileInfo.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                Task activity \u003d formatCommand(fileInfo.get(i));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                destination.addItem(activity);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"Error loading file to program\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * returns the activity into a formatted string to be written to text file"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param activity Task to be formatted into a writeable form"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the activity information separated by pipes"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String formatTask(Task activity) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityName;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityStatus;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityDate;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (activity.getClass() \u003d\u003d ToDo.class) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            type \u003d \"T\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityName \u003d activity.getName();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityStatus \u003d Boolean.toString(activity.getStatus());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return type + \" | \" + activityStatus + \" | \" + activityName;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else if (activity.getClass() \u003d\u003d Deadline.class) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            type \u003d \"D\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityName \u003d activity.getName();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityStatus \u003d Boolean.toString(activity.getStatus());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityDate \u003d ((Deadline) activity).getByDate();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            type \u003d \"E\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityName \u003d activity.getName();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityStatus \u003d Boolean.toString(activity.getStatus());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityDate \u003d ((Event) activity).getAtDate();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return type + \" | \" + activityStatus + \" | \" + activityName + \" | \" + activityDate;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private Task formatCommand(String info) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityName;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        boolean activityStatus;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityDate;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] infoBreakdown \u003d info.split(\" \\\\| \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        for (int i \u003d 0; i \u003c infoBreakdown.length; i++)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            infoBreakdown[i] \u003d infoBreakdown[i].trim();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        type \u003d infoBreakdown[0];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        activityStatus \u003d Boolean.parseBoolean(infoBreakdown[1]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        activityName \u003d infoBreakdown[2];"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        activityDate \u003d \"\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (!type.equals(\"T\")) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityDate \u003d infoBreakdown[3];"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String creationCommand;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        Task activity;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case (\"T\"):"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activity \u003d new ToDo(activityName);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activity.setStatus(activityStatus);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case (\"D\"):"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activity \u003d new Deadline(activityName, \"/by\" + activityDate);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activity.setStatus(activityStatus);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activity \u003d new Event(activityName, \"/at\" + activityDate);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activity.setStatus(activityStatus);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Colin386"
        },
        "content": "         return activity;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 190
    }
  },
  {
    "path": "src/main/java/MyList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.dukeExceptions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class MyList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /** Array containing all tasks recorded*/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    //private Task[] things;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /** Number of elements recorded in the array*/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    //private int size;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**new array list implementation*/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private ArrayList\u003cTask\u003e things;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param itemInfo String containing command word, user event and dates"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return Task object according to parameters in itemInfo"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private Task produceTask(String itemInfo) throws UnrecognisedCommandException, NotEnoughInfoException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] wordsEntered \u003d itemInfo.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String itemType \u003d wordsEntered[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] commandInformationWords \u003d Arrays.copyOfRange(wordsEntered,1, wordsEntered.length);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String commandInformation \u003d String.join( \" \", commandInformationWords);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        switch (itemType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            //throw exception if there are too little words"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (commandInformationWords.length \u003c 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                throw new NotEnoughInfoException(\"todo\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return new ToDo(commandInformation);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String deadlineInfo \u003d this.extractDate(commandInformation, \"/by\", \"deadline\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String deadlineActivityInfo \u003d this.extractActivity(commandInformation, \"/by\", \"deadline\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                return new Deadline(deadlineActivityInfo, deadlineInfo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } catch (NotEnoughInfoException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            String dateInfo \u003d this.extractDate(commandInformation, \"/at\", \"event\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            String eventInfo \u003d this.extractActivity(commandInformation, \"/at\", \"event\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return new Event(eventInfo, dateInfo);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new UnrecognisedCommandException(itemType);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor method for generating a new list of items"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public MyList(){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.things \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Generates a Task item to be added to the item area in MyList"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param itemInfo String containing information to produce the required task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void addItem(String itemInfo)  {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            Task item \u003d this.produceTask(itemInfo);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            things.add(item);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\nGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\n  %s\", item.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\nNow you have %d tasks in the list.\\n\", things.size());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (UnrecognisedCommandException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\nI\u0027m sorry, %s is not a recognised command\\n\", e.getWrongCommand());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (NotEnoughInfoException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function deletes the item at a particular index and shift everything one space to the left"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param index integer containing index number of item to be deleted"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void deleteItem(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int currentSize \u003d this.things.size();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d currentSize) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        Task deletedTask \u003d this.things.get(index);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.things.remove(index);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"\\nNoted, I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"  %s\\n\", deletedTask.toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list\\n\", this.things.size());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Gets the number of items recorded in the list"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return number of items in the list"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.things.size();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Prints out the list of items recorded in a neat format"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void printList(){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"\\nHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        for (int i \u003d 0; i \u003c this.getSize(); i++){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            Task item \u003d this.things.get(i);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\n%d.\", i+1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"%s\", item.toString());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Retrieves the task at a particular index of the list"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Task retrieveTask(int index) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return things.get(index);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Mark the task number as completed"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param index The task number shown on the list to be marked as done"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void completeTask(int index) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (index-1 \u003c 0 || index-1 \u003e\u003d this.getSize()){"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (this.things.get(index-1).getStatus()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\nThe task %s has already been marked as complete\\n\", this.things.get(index-1).getName());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            this.things.get(index-1).setStatus(true);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\nNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\n[✓] %s\\n\", this.things.get(index-1).getName());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Extracts out the date information that is located after a certain keyword"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param commandInfo String that contains the user input"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param keyword String containing the keyword that comes immediately before the date. E.g. /by"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param caller String of the name of the activity type that called it"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing information on the Date found after the keyword"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String extractDate(String commandInfo, String keyword, String caller) throws MissingKeywordException, MissingDateException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int slashIndex \u003d commandInfo.indexOf(keyword);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String dateInfo;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (slashIndex \u003c 0) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new MissingKeywordException(caller, keyword); //missing keyword exception"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        dateInfo \u003d commandInfo.substring(slashIndex+1);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (dateInfo.length() \u003c\u003d keyword.length() - 1) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new MissingDateException(caller); //missing date exception"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return dateInfo;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Extracts out the Activity information that is located before a certain keyword"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param commandInfo String that contains the user input"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param keyword String containing a keyword that comes immediately before the date e.g. /by"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param caller String of the name of the activity type that called it"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the activity information"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String extractActivity(String commandInfo, String keyword, String caller) throws MissingKeywordException, MissingActivityException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int slashIndex \u003d commandInfo.indexOf(keyword);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityName;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (slashIndex \u003c 0) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new MissingKeywordException(caller, keyword);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        activityName \u003d commandInfo.substring(0, slashIndex);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (activityName.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new MissingActivityException(caller);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return activityName.trim();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function used if we need to directly write the item into the list"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param item contains the task to be added to our list"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void addItem(Task item) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.things.add(item);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 246
    }
  },
  {
    "path": "src/main/java/activity/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     /**Deadline of the task*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String byDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Construct a deadline object with name info and deadline info"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param thing String containing the name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param date String containing the date information"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Deadline(String thing, String date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(thing);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        final int BY_LENGTH \u003d 3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.byDate \u003d date.substring(BY_LENGTH);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the date in a formatted string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the date with the word \"by\" attached to it"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * no further formatting done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String formatDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \" (by: \" + this.byDate + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the task information in a formatted string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the Deadline tag, the task name and the due date"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \"[D]\" + super.toString() + this.formatDate();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the date information of the event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the date"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getByDate () {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.byDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 48
    }
  },
  {
    "path": "src/main/java/activity/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /** String containing date that the event is held*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String atDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor that makes the event object with the name and date information"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param thing String of name of event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param date String containing the date event is held"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Event(String thing, String date){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(thing);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        final int AT_LENGTH \u003d 3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        atDate \u003d date.substring(AT_LENGTH);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Functions return a formatted string of the date information"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the original date written with \"at\" added"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String formatDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \" (at: \" + this.atDate + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Overrides the toString method to display the event tag, name of event and its date"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing event tag, name of event and the date of event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \"[E]\" + super.toString() + this.formatDate();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the date information of the event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the at date"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getAtDate () {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.atDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 48
    }
  },
  {
    "path": "src/main/java/activity/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /** Name of the task*/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**Boolean indicating if the job is done or not*/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Task constructor, set the task to not done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param thing Name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Task(String thing){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.name \u003d thing;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Getter for the task name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return a String containing the name of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getName(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Getter for the status"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return boolean value, True if the item was done, false if not"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public boolean getStatus(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function change the done status of the item"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param state boolean that changes the state of the Done status of the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void setStatus(boolean state){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.isDone \u003d state;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Overriding the toString method to format how the program display task information"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String that contains the proper display format for the item status and name"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String bracketSymbol;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            bracketSymbol \u003d \"[✓] \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            bracketSymbol \u003d \"[✗] \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return bracketSymbol + this.getName();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 65
    }
  },
  {
    "path": "src/main/java/activity/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Creates a Todo item from a name given"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param thing contains the name of the item"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public ToDo(String thing){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(thing);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Overrides the toString message for the todo item"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the formatted name information, done status and the T tag"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 26
    }
  },
  {
    "path": "src/main/java/dukeExceptions/MissingActivityException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class MissingActivityException extends NotEnoughInfoException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public MissingActivityException(String command) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return super.getMessage() + \"Requires activity\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 14
    }
  },
  {
    "path": "src/main/java/dukeExceptions/MissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class MissingDateException extends NotEnoughInfoException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public MissingDateException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return super.getMessage() + \"Requires date\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 14
    }
  },
  {
    "path": "src/main/java/dukeExceptions/MissingKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class MissingKeywordException extends NotEnoughInfoException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    protected String missingKeyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public MissingKeywordException(String command, String keyword) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.missingKeyword \u003d keyword;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String keywordMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        keywordMessage \u003d \"\\nMissing keyword: \" + this.missingKeyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        message \u003d super.getMessage() + keywordMessage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 22
    }
  },
  {
    "path": "src/main/java/dukeExceptions/NotEnoughInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class NotEnoughInfoException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    protected String commandName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Generates a Not Enough Information exception"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param commandName a string containing the command that needed more information"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public NotEnoughInfoException(String commandName) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Getter for the command name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return a string containing the command that triggered the exception"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.commandName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Retrieve the error message"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return Error message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        message \u003d \"Command \" + this.commandName + \" requires more information\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 35
    }
  },
  {
    "path": "src/main/java/dukeExceptions/UnrecognisedCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class UnrecognisedCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String wrongCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor for the unrecognised command exception"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param wrongCommand indicates the word that is not recognised by the program"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public UnrecognisedCommandException(String wrongCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.wrongCommand \u003d wrongCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Wrong command getter"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the name of the wrong command detected"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getWrongCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return wrongCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Colin386": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Colin386": 1,
      "-": 20
    }
  }
]
