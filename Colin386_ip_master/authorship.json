[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "## What can you do with Duke?"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "The following list some of the functions that you can do with Duke"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "1. Keep track of deadlines, events and items to do."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "1. Find out what is happening on a particular date"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "1. List down all events that you have to do"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": "1. Find specific events using a certain keyword"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "## Conventions Used"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "The following table shows the list of conventions used when describing each function operation"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`function name` - shows input that you need to type exactly in the terminal. In this case, type `function name`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`\u003cCompulsory User Input\u003e` - shows input that you will need to provide your own values or words. Program will fail if information is not provided"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`[Optional User Input]` - shows input that you can choose to provide your own values. Input for these values are optional."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "## Function List"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Below is a table containing the possible commands and a brief description of how to use them"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Function Name | Function Description"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "bye | terminates the program and saves all recorded information into `~/data/duke.txt`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": "deadline | creates a deadline task with the date of deadline stored"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "delete | deletes away a Task from your Task list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "done | mark a Task on your task list as done"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": "event | creates an event with the date of the event occurring stored"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "find | prints out all events that contains a particular sequence of words"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": "list | prints out the list of Tasks stored on your personal list currently"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": "todo | creates a todo Task "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "### Bye"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "terminates the program and saves all recorded information into `~/data/duke.txt`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Syntax"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": "creates a deadline task with the date of deadline stored"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Syntax"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`deadline \u003cTask name\u003e /by \u003cDate\u003e [time]`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`\u003cTask name\u003e` - Name of the task that has a deadline. E.g. Homework"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`\u003cDate\u003e` - A date in the form yyyy:mm:dd where the deadline will be set. E.g. 2020-03-09"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`[Time]` - Optional Time information containing the time when the deadline must be met. If no time provided, assume that time of deadline is set to 12 midnight."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Example"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`deadline Homework /by 2020-04-03 13:00` - creates a deadline task called \"Homework\" that has a deadline set on 03 April 2020 at 1pm"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`deadline Homework /by 1998-02-03` - creates a deadline task called \"Homework\" that has a deadline set on 03 February 1998 at 12 midnight."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": "deletes away a Task from your Task list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Syntax"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`\u003cindex\u003e` - a number matching the index number of the item to be deleted from the list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Example"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`delete 3` - deletes the Task with index number 3 from your list of Tasks"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": "### Done"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Mark a Task on your task list as done"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Syntax"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`\u003cindex\u003e` - a number matching the index number of the item to be marked as done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Example"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`done 2` - marks the Task with index number 2 from your list as completed "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Colin386"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Creates an event with the date of the event occurring stored"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Syntax"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`event \u003cTask name\u003e /at \u003cDate\u003e [time]`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`\u003cTask name\u003e` - Name of the Event. E.g. Christmas 2020"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`\u003cDate\u003e` - A date in the form yyyy:mm:dd when the event will occur. E.g. 2020-03-09"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`[Time]` - Optional Time information containing the time when the event will occur. If no time provided, assume that time of event occurring is set to 12 midnight."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Example"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`event Christmas /by 2020-12-25 13:00` - creates an event task called \"Christmas\" that occurs on 25 December 2020 at 1pm"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`event Birthday /by 1998-02-03` - creates an event task called \"Birthday\" that occurs on 03 February 1998 at 12 midnight."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Colin386"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Colin386"
        },
        "content": "prints out all events that contains a particular sequence of words"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Syntax"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`find \u003cWord Sequence\u003e`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`\u003cWord Sequence\u003e` - Sequence of words user enters. Program will present all Task entries containing those sequence of words."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Example"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Assuming you have the following items in your list, shown below in this table:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Index No. | Event Type | Status | Name of Task | date"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Colin386"
        },
        "content": "---------- | ---------- | ----------- | ----------- | ----------"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Colin386"
        },
        "content": "1 | Todo | Not Done | Homework | N.A."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Colin386"
        },
        "content": "2 | Deadline | Done | Cook Dinner | 2010-03-01 12:30"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Colin386"
        },
        "content": "3 | Event | Not Done | Hari Raya Puasa | 2021-05-12 00:00"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Colin386"
        },
        "content": "4 | Event | Not Done | Party | 2010-03-01 14:15"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`find Cook` - will list out all events with the word \"Cook\" as shown below"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Colin386"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Here are the list of activities that contain the word \"Cook\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Colin386"
        },
        "content": "2.[D][✓] Cook Dinner (by: 2010-03-01 12:30)Session saved!"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Colin386"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Colin386"
        },
        "content": "### List"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Colin386"
        },
        "content": "prints out the list of Tasks stored on your personal list currently"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Syntax"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`list [Date]`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`[Date]`- Optional Date information in the form yyyy-mm-dd. If provided, cause the program to list down all events and deadlines that occur on that date."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Example"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Assuming you have the following items in your list, shown below in this table:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Index No. | Event Type | Status | Name of Task | date"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Colin386"
        },
        "content": "---------- | ---------- | ----------- | ----------- | ----------"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Colin386"
        },
        "content": "1 | Todo | Not Done | Homework | N.A."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Colin386"
        },
        "content": "2 | Deadline | Done | Cook Dinner | 2010-03-01 12:30"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Colin386"
        },
        "content": "3 | Event | Not Done | Hari Raya Puasa | 2021-05-12 00:00"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Colin386"
        },
        "content": "4 | Event | Not Done | Party | 2010-03-01 14:15"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`list` - will list out all the events on the screen in the following format"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Colin386"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Colin386"
        },
        "content": "1.[T][✗] Homework"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Colin386"
        },
        "content": "2.[D][✗] Cook Dinner (by: 01 Mar 2010 12:30:00 p.m)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Colin386"
        },
        "content": "3.[E][✗] Hari Raya Puasa (at: 12 May 2021 12:00:00 a.m)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Colin386"
        },
        "content": "4.[E][✗] Party (at: 01 Mar 2010 02:15:00 p.m)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Colin386"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`list 2010-03-01` - will list out all the events on the screen that falls on the 01 March 2010 in the following format"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Colin386"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Colin386"
        },
        "content": "Here are all the activities that are conducted on this date: 2010-03-01"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Colin386"
        },
        "content": "2.[D][✗] Cook Dinner (by: 01 Mar 2010 12:30:00 p.m)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Colin386"
        },
        "content": "4.[E][✗] Party (at: 01 Mar 2010 02:15:00 p.m)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Colin386"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Colin386"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Colin386"
        },
        "content": "creates a todo Task "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Syntax"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`todo \u003cTask Name\u003e`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`\u003cTask Name\u003e` - name of the todo task. E.g. Eat dinner."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Colin386"
        },
        "content": "#### Example"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Colin386"
        },
        "content": "`todo Eat dinner` - creates a todo task with the name \"Eat dinner\" and adds it to the list"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Colin386": 167,
      "-": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private UserInterface ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private MyList items;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private FileSaver fileManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor for the Duke item"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        items \u003d new MyList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        fileManager \u003d new FileSaver();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        parser \u003d new Parser(items);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Main run function, prints welcome message, loops until user enters \"bye\", then prints bye message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        Scanner in  \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        boolean isComplete \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        fileManager.loadData(items);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        while (isComplete \u003d\u003d false) { //program will return complete when bye condition is met"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            isComplete \u003d parser.processUserInput(command, items);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            fileManager.saveData(items);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        fileManager.saveData(items);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"File saved successfully!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        ui.goodbyeMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Main function, creates a Duke class item and starts to run"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 54,
      "-": 4
    }
  },
  {
    "path": "src/main/java/FileSaver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class FileSaver {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /** root directory of wherever the java file is run*/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private final String HOME \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private Path dukeInfoLocation;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private Path dukeInfoFolder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private List\u003cString\u003e prevInfo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * FileSaver constructor, creates a reference to the home directory/data/duke.txt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public FileSaver() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        dukeInfoLocation \u003d Paths.get(HOME, \"data\",\"duke.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        dukeInfoFolder \u003d Paths.get(HOME, \"data\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Saves the information stored for the session into a txt file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function will attempt to create a file /data/duke.txt on the computer if file not present in the computer"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Command will not execute a save if it was unsuccessful in creating the file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Existing data located in /data/duke.txt is overwritten with new information each time this command is called"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param destination Mylist data type containing the records of events done earlier to be saved to computer"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void saveData(MyList destination) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (!Files.exists(dukeInfoFolder)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    Files.createDirectory(dukeInfoFolder);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"File IO Error! file cannot be saved\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            int entryNumber \u003d destination.getSize();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            ArrayList\u003cString\u003e toWrite \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            for (int i \u003d 0; i \u003c destination.getSize(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                Task activity \u003d destination.retrieveTask(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String activityString \u003d this.formatTask(activity);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                toWrite.add(activityString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            Files.write(dukeInfoLocation, toWrite, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"Error! unable to record information to file\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"Session saved!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Loads the data into the current list for the user to continue modifying the list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Program will look for the existence of a file called /data/duke.txt"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * If the file does not exist, the program will not load any data to the program."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param destination MyList data type to contain all recorded events in the computer\u0027s txt file"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void loadData(MyList destination) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (Files.notExists(dukeInfoLocation)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                System.out.println(\"Nothing to load data from\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            List\u003cString\u003e fileInfo \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            fileInfo \u003d Files.readAllLines(dukeInfoLocation, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            for (int i \u003d 0; i \u003c fileInfo.size(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                Task activity \u003d formatCommand(fileInfo.get(i));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                if (activity \u003d\u003d null) { //occurs when date information not stored correctly on txt file"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                destination.addItem(activity);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"Files Loaded\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"Error loading file to program\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Converts the Task activity into a formatted string to be written to text file"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param activity Task to be formatted into a writeable form"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the activity information separated by pipes"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String formatTask(Task activity) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityName;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityStatus;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityDate;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (activity.getClass() \u003d\u003d ToDo.class) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            type \u003d \"T\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityName \u003d activity.getName();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityStatus \u003d Boolean.toString(activity.getStatus());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return type + \" | \" + activityStatus + \" | \" + activityName;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else if (activity.getClass() \u003d\u003d Deadline.class) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            type \u003d \"D\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityName \u003d activity.getName();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityStatus \u003d Boolean.toString(activity.getStatus());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityDate \u003d ((Deadline) activity).getFullDateString();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            type \u003d \"E\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityName \u003d activity.getName();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityStatus \u003d Boolean.toString(activity.getStatus());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityDate \u003d ((Event) activity).getFullDateString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return type + \" | \" + activityStatus + \" | \" + activityName + \" | \" + activityDate;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function takes in a string and creates an object to be added to the activity list"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param info String from txt file that stores all previous session activity information to be processed into a Task"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return Task that match the information stored in info String"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private Task formatCommand(String info) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityName;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        boolean activityStatus;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityDate;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] infoBreakdown \u003d info.split(\" \\\\| \");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        for (int i \u003d 0; i \u003c infoBreakdown.length; i++)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            infoBreakdown[i] \u003d infoBreakdown[i].trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        type \u003d infoBreakdown[0];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        activityStatus \u003d Boolean.parseBoolean(infoBreakdown[1]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        activityName \u003d infoBreakdown[2];"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        activityDate \u003d \"\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (!type.equals(\"T\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            activityDate \u003d infoBreakdown[3];"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String creationCommand;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        Task activity;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            case (\"T\"):"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                activity \u003d new ToDo(activityName);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                activity.setStatus(activityStatus);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            case (\"D\"):"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                activity \u003d new Deadline(activityName, \"/by\" + activityDate);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                activity.setStatus(activityStatus);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                activity \u003d new Event(activityName, \"/at\" + activityDate);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                activity.setStatus(activityStatus);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return activity;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"Error, some entries in you txt files have invalid dates or times, these entries are not recorded\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 218
    }
  },
  {
    "path": "src/main/java/MyList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.dukeExceptions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class MyList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**new array list implementation*/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private ArrayList\u003cTask\u003e things;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor method for generating a new list of items"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public MyList(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.things \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function deletes the item at a particular index"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param index integer containing index number of the item to be deleted"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws IndexOutOfBoundsException thrown if index number provided is not an index in the current array list. Too small or too large."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void deleteItem(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int currentSize \u003d this.things.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d currentSize) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        Task deletedTask \u003d this.things.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.things.remove(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"\\nNoted, I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"  %s\\n\", deletedTask.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list\\n\", this.things.size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Gets the number of items recorded in the list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return number of items in the list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.things.size();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Prints out the list of items recorded in a neat format"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void printList(){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"\\nHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        for (int i \u003d 0; i \u003c this.getSize(); i++){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            Task item \u003d this.things.get(i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\n%d.\", i+1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"%s\", item.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Prints out the activity list with all Task which lies on the user given date"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param eventDate Date object which contains the date to be compared with all Tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws DateTimeParseException thrown if user did not key in date in the form yyyy-mm-dd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     public void printList(LocalDate eventDate) throws DateTimeParseException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String dateString \u003d eventDate.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"\\nHere are all the activities that are conducted on this date: %s\\n\", dateString);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        for (int i \u003d 0; i \u003c this.getSize(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            Task item \u003d this.things.get(i);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            LocalDateTime itemDateTime;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (item instanceof ToDo) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                continue; //ignores ToDo as they do not have any deadlines"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } else if ((item instanceof Deadline)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                itemDateTime \u003d ((Deadline) item).retrieveDate();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                itemDateTime \u003d ((Event) item).retrieveDate();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (eventDate.equals(itemDateTime.toLocalDate())){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                System.out.printf(\"\\n%d.\", i+1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                System.out.printf(\"%s\", item.toString());//print only when date matches"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Retrieves the task at a particular index of the list"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param index integer of the index number of the item to be provided from the array list"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return Task item which contains the task that was stored at the index number provided."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Task retrieveTask(int index) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return things.get(index);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Mark the task as completed"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param index The task number shown on the list to be marked as done"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws IndexOutOfBoundsException thrown when the index number is out of range, either too small or too large"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void completeTask(int index) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (index-1 \u003c 0 || index-1 \u003e\u003d this.getSize()){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (this.things.get(index-1).getStatus()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\nThe task %s has already been marked as complete\\n\", this.things.get(index-1).getName());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            this.things.get(index-1).setStatus(true);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\nNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\n[✓] %s\\n\", this.things.get(index-1).getName());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function used if we need to directly write the item into the list"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param item contains the task to be added to our list"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void addItem(Task item) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.things.add(item);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 169
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.activity.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import main.java.dukeExceptions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private MyList items;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor for the Parser object that interpret all user commands"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param itemStorage MyList object to be used for containing all user recorded Activities"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Parser(MyList itemStorage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.items \u003d itemStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function accepts in the user input and determine which function to call and operate"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param command string containing user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param items   MyList item where activity entry storage, deletion or listing is performed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return boolean, true if bye is entered to indicate program is complete, false otherwise"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public boolean processUserInput(String command, MyList items) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else if (command.contains(\"list\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            this.processList(command, items);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            String[] info \u003d command.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                index \u003d Integer.parseInt(info[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                items.completeTask(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                System.out.println(\"Invalid index number entered\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                System.out.println(\"Number missing or invalid\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            ProcessDelete(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else if (command.contains(\"find\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            processFind(command, items);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            processAdd(command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Internal command used to process any find commands entered by the user"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param command String containing the user input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param items MyList data type to be searched through to find the required task of the user"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private void processFind(String command, MyList items) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] commandArgs \u003d command.split(\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (commandArgs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"\\nNothing to find! Please enter \\\" Find \u003cwords\u003e\\\"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] findQueryWords \u003d Arrays.copyOfRange(commandArgs, 1, commandArgs.length);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String findQuery \u003d String.join(\" \", findQueryWords);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int listSize \u003d items.getSize();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.printf(\"\\nHere are the list of activities that contain the word \\\"%s\\\":l\\n\", findQuery);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        for (int i \u003d 0; i \u003c listSize; i++) { //goes through each item on the list and print out the ones that match search"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            Task currentActivity \u003d items.retrieveTask(i);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (currentActivity.getName().contains(findQuery)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                System.out.printf(\"\\n%d.\", i + 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                System.out.printf(\"%s\", currentActivity.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Internal command used for processing any user listing commands"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param command String containing the user input"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param items MyList data type to be looked through for printing in the user specified format"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private void processList(String command, MyList items) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] commandArgs \u003d command.split(\" \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (commandArgs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                items.printList(); //no deadline given, assume standard print list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String dateString \u003d commandArgs[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                LocalDate dateRequest \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                items.printList(dateRequest);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"I\u0027m sorry, an invalid date has been entered, please enter a valid date yyyy-mm-dd\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Internal function for processing the add Task command by the user, used to call the appropriate function"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param command contains the user command"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private void processAdd(String command) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            Task newTask \u003d produceTask(command);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            items.addItem(newTask);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (UnrecognisedCommandException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\nI\u0027m sorry, %s is not a recognised command\\n\", e.getWrongCommand());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (NotEnoughInfoException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.printf(\"\\nNothing was entered, please enter a command\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"\\nIncorrect Date entered, enter in yyyy-mm-dd hh:mm format\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Internal command used to process delete commands entered by the user"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param command String containing user input indicating which object to be deleted from the MyList"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private void ProcessDelete(String command) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            String[] commandArgs \u003d command.split(\" \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            String number \u003d commandArgs[1];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            number \u003d number.trim(); //removes trailing spaces to convert into proper integer later"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            int index \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            items.deleteItem(index-1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { //error is thrown if the user gave a number outside the array size."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"Invalid index number entered\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } catch (NumberFormatException e) { //error is thrown if the user did not provide a number"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            System.out.println(\"Number missing or invalid\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Command used to produce the required Task object with the information provided by the user"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param itemInfo String with the user entered information about the event"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws UnrecognisedCommandException thrown when user has given a Task type that does not exist in the program"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws NotEnoughInfoException thrown if user did not provide the program with enough information to produce the Task required"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws IndexOutOfBoundsException thrown if user did not give any information for the program to work produce the required Task"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws DateTimeParseException thrown if invalid date information not in yyyy-mm--dd form is entered by user"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Task produceTask(String itemInfo) throws UnrecognisedCommandException, NotEnoughInfoException, IndexOutOfBoundsException, DateTimeParseException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] wordsEntered \u003d itemInfo.split(\" \");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String itemType \u003d wordsEntered[0];"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] commandInformationWords \u003d Arrays.copyOfRange(wordsEntered,1, wordsEntered.length);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String commandInformation \u003d String.join( \" \", commandInformationWords);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        switch (itemType) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            //throw exception if there are too little words"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            if (commandInformationWords.length \u003c 1) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                throw new NotEnoughInfoException(\"todo\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            return new ToDo(commandInformation);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String deadlineInfo \u003d this.extractDate(commandInformation, \"/by\", \"deadline\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String deadlineActivityInfo \u003d this.extractActivity(commandInformation, \"/by\", \"deadline\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                return new Deadline(deadlineActivityInfo, deadlineInfo);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } catch (NotEnoughInfoException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String dateInfo \u003d this.extractDate(commandInformation, \"/at\", \"event\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                String eventInfo \u003d this.extractActivity(commandInformation, \"/at\", \"event\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                return new Event(eventInfo, dateInfo);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            } catch (NotEnoughInfoException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new UnrecognisedCommandException(itemType);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Extracts out the date information that is located after a certain keyword"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param commandInfo String that contains the user input"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param keyword String containing the keyword that comes immediately before the date. E.g. /by"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param caller String of the name of the activity type that called it"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing information on the Date found after the keyword"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws MissingKeywordException thrown if the / keywords is not present in the user input"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws MissingDateException thrown if there is no date information provided after the / keyword"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String extractDate(String commandInfo, String keyword, String caller) throws MissingKeywordException, MissingDateException {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int slashIndex \u003d commandInfo.indexOf(keyword);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String dateInfo;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (slashIndex \u003c 0) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new MissingKeywordException(caller, keyword); //missing keyword exception"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        dateInfo \u003d commandInfo.substring(slashIndex+1);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (dateInfo.length() \u003c\u003d keyword.length() - 1) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new MissingDateException(caller); //missing date exception"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return dateInfo;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Extracts out the Activity information that is located before a certain keyword"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param commandInfo String that contains the user input"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param keyword String containing a keyword that comes immediately before the date e.g. /by"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param caller String of the name of the activity type that called it e.g. deadline"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the activity information removed from the user input"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws MissingKeywordException thrown if there is no / keyword given by the user"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws MissingActivityException thrown if there is nothing located before the keyword"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String extractActivity(String commandInfo, String keyword, String caller) throws MissingKeywordException, MissingActivityException {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int slashIndex \u003d commandInfo.indexOf(keyword);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String activityName;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (slashIndex \u003c 0) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new MissingKeywordException(caller, keyword);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        activityName \u003d commandInfo.substring(0, slashIndex);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (activityName.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            throw new MissingActivityException(caller);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return activityName.trim();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 278
    }
  },
  {
    "path": "src/main/java/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Prints a welcome message on the screen"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public static void welcomeMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Prints a goodbye message"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public static void goodbyeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 32
    }
  },
  {
    "path": "src/main/java/activity/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Functions converts a standard LocalDateTime object into DD Month YYYY, 12 hour time format"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param when LocalDateTime object containing the date and time of the particular event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the date and time in DD Month YYYY, 12 hour format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String convertToLongDateTime(LocalDateTime when) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int dateNumber \u003d when.getDayOfMonth();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int monthNumber \u003d when.getMonthValue();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int yearNumber \u003d when.getYear();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int hourNumber \u003d when.getHour();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int minNumber \u003d when.getMinute();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        int secNumber \u003d when.getSecond();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return convertToLongDate(yearNumber, monthNumber, dateNumber) + \" \" + convert24To12(hourNumber, minNumber, secNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String convertToLongDate(int year, int month, int date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String yearString;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String monthString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String dateString;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        yearString \u003d Integer.toString(year);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        dateString \u003d Integer.toString(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (date \u003c 10) { //adds the zero at the back to make the date have two digits"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            dateString \u003d \"0\" + dateString;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Jan\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Feb\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Mar\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Apr\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"May\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Jun\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Jul\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Aug\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Sep\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Oct\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Nov\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            monthString \u003d \"Dec\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return dateString + \" \" + monthString + \" \" + yearString;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String convert24To12(int hour, int min, int sec) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String timePostFix;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String hourString;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String minuteString;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String secondString;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (hour \u003d\u003d 0) { //midnight"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            hourString \u003d Integer.toString(12);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            timePostFix \u003d \"a.m\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else if (hour \u003d\u003d 12) { //noon"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            hourString \u003d Integer.toString(12);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            timePostFix \u003d \"p.m\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else if (hour \u003c\u003d 11) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                timePostFix \u003d \"a.m\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                hourString \u003d Integer.toString(hour);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                timePostFix \u003d \"p.m\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Colin386"
        },
        "content": "                hourString \u003d Integer.toString(hour-12);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        minuteString \u003d Integer.toString(min);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        secondString \u003d Integer.toString(sec);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if ((hour \u003c 22 \u0026\u0026 hour \u003e 12) || (hour \u003c 10 \u0026\u0026 hour \u003e 0)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            hourString \u003d \"0\" + hourString;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (min \u003c 10) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            minuteString \u003d \"0\" + minuteString;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (sec \u003c 10) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            secondString \u003d \"0\" + secondString;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return hourString + \":\" + minuteString + \":\" + secondString + \" \" + timePostFix;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 122
    }
  },
  {
    "path": "src/main/java/activity/DateStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public interface DateStorage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getFullDateString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String formatDate();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public LocalDateTime retrieveDate();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 17
    }
  },
  {
    "path": "src/main/java/activity/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class Deadline extends Task implements DateStorage{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     /**Deadline of the task*/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String byDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private LocalDateTime dueDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private DateParser d;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Construct a deadline object with name info and deadline info"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param thing String containing the name of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param date String containing the date information"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Deadline(String thing, String date) throws DateTimeParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(thing);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        d \u003d new DateParser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        final int BY_LENGTH \u003d 3;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.byDate \u003d date.substring(BY_LENGTH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.dueDateTime \u003d processDate(this.byDate);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the date in a formatted string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the date with the word \"by\" attached to it"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * no further formatting done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String formatDate() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \" (by: \" + d.convertToLongDateTime(this.dueDateTime) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the date and time in a Datetime object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return LocalDateTime object containing the date and time of the activity"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public LocalDateTime retrieveDate() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.dueDateTime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function reads the date and time entered by the user and tries to form a date time object to be stored with the activity"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param userDate String containing the user input date and time"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return LocalDateTime object according to the user\u0027s date and time written"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws DateTimeParseException when user does not input the date time in the form yyyy-mm-dd hh:mm"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private LocalDateTime processDate  (String userDate) throws DateTimeParseException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] dateTimeInfo \u003d userDate.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String dateInfo \u003d dateTimeInfo[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String timeInfo;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        LocalDateTime newDate;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (dateTimeInfo.length \u003c\u003d 1) { //no time given by user, assume time to be midnight"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            timeInfo \u003d \"00:00:00\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            this.byDate \u003d this.byDate + \" \" + timeInfo;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            timeInfo \u003d dateTimeInfo[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        newDate \u003d LocalDateTime.parse(dateInfo + \"T\" + timeInfo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return newDate;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the task information in a formatted string"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the Deadline tag, the task name and the due date"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \"[D]\" + super.toString() + this.formatDate();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the date information of the deadline in a formatted string"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the date"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getFullDateString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.byDate;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 107
    }
  },
  {
    "path": "src/main/java/activity/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class Event extends Task implements DateStorage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /** String containing date that the event is held*/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String atDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private LocalDateTime dueDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private DateParser d;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor that makes the event object with the name and date information"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param thing String of name of event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param date String containing the date event is held"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor that makes the event object with the name and date information"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param thing String of name of event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param date String containing the date of the event entered by user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws DateTimeParseException occurs if user did not key in a date in the form of yyyy-mm-dd"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Event(String thing, String date) throws DateTimeParseException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(thing);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        d \u003d new DateParser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        final int AT_LENGTH \u003d 3;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        atDate \u003d date.substring(AT_LENGTH);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        dueDateTime \u003d this.processDate(atDate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the date information of the event in a formatted string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the date"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getFullDateString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.atDate;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Functions return a formatted string of the date information"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the original date written with \"at\" added"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String formatDate() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \" (at: \" + this.d.convertToLongDateTime(this.dueDateTime) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function returns the date and time in a Datetime object"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return LocalDateTime object containing the date and time of the activity"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public LocalDateTime retrieveDate() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.dueDateTime;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Overrides the toString method to display the event tag, name of event and its date"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing event tag, name of event and the date of event."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \"[E]\" + super.toString() + this.formatDate();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function reads the date and time entered by the user and tries to form a date time object to be stored with the activity"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param userDate String containing the user input date and time"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return LocalDateTime object according to the user\u0027s date and time written"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @throws DateTimeParseException when user does not input the date time in the form yyyy-mm-dd hh:mm"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private LocalDateTime processDate  (String userDate) throws DateTimeParseException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String[] dateTimeInfo \u003d userDate.split(\" \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String dateInfo \u003d dateTimeInfo[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String timeInfo;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        LocalDateTime newDate;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (dateTimeInfo.length \u003c\u003d 1) { //no time given by user, assume time to be midnight"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            timeInfo \u003d \"00:00:00\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            this.atDate \u003d this.atDate + \" \" + timeInfo;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            timeInfo \u003d dateTimeInfo[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        newDate \u003d LocalDateTime.parse(dateInfo + \"T\" + timeInfo);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return newDate;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 109
    }
  },
  {
    "path": "src/main/java/activity/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /** Name of the task*/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**Boolean indicating if the job is done or not*/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Task constructor, set the task to not done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param thing Name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public Task(String thing){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.name \u003d thing;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Getter for the task name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return a String containing the name of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getName(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Getter for the status"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return boolean value, True if the item was done, false if not"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public boolean getStatus(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Function change the done status of the item"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param state boolean that changes the state of the Done status of the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public void setStatus(boolean state){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.isDone \u003d state;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Overriding the toString method to format how the program display task information"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String that contains the proper display format for the item status and name"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String bracketSymbol;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            bracketSymbol \u003d \"[✓] \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Colin386"
        },
        "content": "            bracketSymbol \u003d \"[✗] \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return bracketSymbol + this.getName();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 65
    }
  },
  {
    "path": "src/main/java/activity/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.activity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Creates a Todo item from a name given"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param thing contains the name of the item"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public ToDo(String thing){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(thing);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Overrides the toString message for the todo item"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the formatted name information, done status and the T tag"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 26
    }
  },
  {
    "path": "src/main/java/dukeExceptions/MissingActivityException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class MissingActivityException extends NotEnoughInfoException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor for the MissingActivityException"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * exception is used when the user did not enter the name of an activity when trying to construct it"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param command contains the command that first threw this exception"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public MissingActivityException(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Provides a string informing the user what information is missing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the user function that thew the exception"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return super.getMessage() + \"Requires activity\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 24
    }
  },
  {
    "path": "src/main/java/dukeExceptions/MissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class MissingDateException extends NotEnoughInfoException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor for the Missing Date Exception, created when date information for a function is missing"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param command String containing the name of the function that is missing the date information"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public MissingDateException(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Provides a String telling the user which function requires more date information to operate"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing name of command tht requires more date information"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return super.getMessage() + \"Requires date\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 24
    }
  },
  {
    "path": "src/main/java/dukeExceptions/MissingKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class MissingKeywordException extends NotEnoughInfoException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    protected String missingKeyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor for MissingKeywordException, created if a command is missing a keyword option, e.g. deadline called without the /by keyword"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param command String containing the command that created the exception due to missing keyword"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param keyword String, usually indicating a missing option labelled with a / symbol"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public MissingKeywordException(String command, String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.missingKeyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Retrieves a message to be printed to inform the user about the error"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String with more details on the error such as which function called the error and what keyword is missing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String keywordMessage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        keywordMessage \u003d \"\\nMissing keyword: \" + this.missingKeyword;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        message \u003d super.getMessage() + keywordMessage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 33
    }
  },
  {
    "path": "src/main/java/dukeExceptions/NotEnoughInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class NotEnoughInfoException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    protected String commandName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Generates a Not Enough Information exception"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param commandName a string containing the command that needed more information"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public NotEnoughInfoException(String commandName) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Getter for the command name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return a string containing the command that triggered the exception"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return this.commandName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Retrieve the error message"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return Error message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        message \u003d \"Command \" + this.commandName + \" requires more information\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 35
    }
  },
  {
    "path": "src/main/java/dukeExceptions/UnrecognisedCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "package main.java.dukeExceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "public class UnrecognisedCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    private String wrongCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Constructor for the unrecognised command exception"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @param wrongCommand indicates the word that is not recognised by the program"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public UnrecognisedCommandException(String wrongCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        this.wrongCommand \u003d wrongCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Colin386"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * Wrong command getter"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     * @return String containing the name of the wrong command detected"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Colin386"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    public String getWrongCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Colin386"
        },
        "content": "        return wrongCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Colin386"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Colin386"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Colin386": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Colin386"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Colin386"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Colin386"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Colin386"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Colin386"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Colin386"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Colin386"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Colin386"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Colin386"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Colin386": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Colin386"
        },
        "content": "java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Colin386": 1,
      "-": 20
    }
  }
]
