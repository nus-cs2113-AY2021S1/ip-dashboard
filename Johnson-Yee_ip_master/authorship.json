[
  {
    "path": "data/fileStorage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "T | 0 | CS2113T do homework"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "D | 0 | CS2113T iP Submissions |Oct 03 2020 23:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "D | 0 | this task is due today |Sep 26 2020"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "             ____          ____       "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "   __(\")__  |  _ \\ _   _  |  _ \\  ____ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": " (__   __) | | | | | | | | | | || ___\\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /   \\   | |_| | |_| | | |_| |\\  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "   (_/ \\_)  |____/ \\__,_| \\____/  \\____|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "  Sup! I\u0027m Dude!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "  What can a brother do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Dude is your friendly task scheduler that is able to maintain a todo list and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "schedule deadlines or events."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Dude is here to help a brother out!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "* [Features](#Features)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [1. Adding a Todo task: `todo`](#1-adding-a-todo-task-todo)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [2. Adding a Deadline task: `deadline`](#2-adding-a-deadline-task-deadline)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [3. Adding an Event task: `event`](#3-adding-an-event-task-event)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [4. Listing all tasks at hand: `list`](#4-listing-all-tasks-at-hand-list)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [5. Marking a task as complete: `done`](#5-marking-a-task-as-complete-done)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [6. Deleting a task: `delete`](#6-deleting-a-task-delete)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [7. Finding a task: `find`](#7-finding-a-task-find)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [8. Exiting the program: `bye`](#8-exiting-the-program-bye)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [9. Listing available help: `help`](#9-listing-available-help-help)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    + [10. Listing tasks due: `due`](#10-listing-tasks-due-due)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "1. Ensure that you have Java `11` or above installed in your computer."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "2. Download the latest `dude.jar` from [here](https://github.com/Johnson-Yee/ip/releases)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "3. Copy the file to the folder you want to use as the _home folder_ for dude.jar task scheduler."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "4. In command prompt, `cd` to the directory of the _home folder_."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "5. Run the .jar file in the command prompt as follows: `java -jar dude.jar`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "6. Type `help` to view commands available."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "7. Refer to [Features](#features) below for details of each command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003eNotes about command format:  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003e1. Words in **bold** are parameters to be provided by the user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003e2. Words in [] are optional parameters. "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 1. Adding a Todo task: ```todo```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Adds a new Todo task to Dude. \u003cbr\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Format: \u003ccode\u003etodo \u003cstrong\u003etask\u003c/strong\u003e \u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003etodo \u003cstrong\u003eCS2113T Week 7 pre-lecture quiz \u003c/strong\u003e\u003c/code\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "  [T][✘] CS2113T Week 7 pre-lecture quiz"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Now you have n tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 2. Adding a Deadline task: ```deadline```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Adds a new Todo task to Dude. \u003cbr\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003eTo indicate date, \u0027.\u0027 and \u0027-\u0027 could be used in place of \u0027/\u0027 eg. 28.05.2020 or 21/05/2020. \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "To indicate time, \u0027:\u0027 could be omitted eg. 1800. \u003cbr\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Note: The delimiter here is \"**/by**\", and it is compulsory to include it."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Format: \u003ccode\u003edeadline \u003cstrong\u003etask description /by DD/MM/YYYY [HH:mm]\u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003edeadline \u003cstrong\u003eCS2113T iP Submission /by 03/10/2020 23:59\u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "  [D][✘] CS2113T iP Submission  (by: Oct 03 2020 23:59)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Now you have n tasks in the list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 3. Adding an Event task: ```event```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Adds a new Event task to Dude. \u003cbr\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003eTo indicate date, \u0027.\u0027 and \u0027-\u0027 could be used in place of \u0027/\u0027 eg. 28.05.2020 or 21/05/2020. \u003cbr\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "To indicate time, \u0027:\u0027 could be omitted eg. 1800. \u003cbr\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Note: The delimiter here is \"**/on**\", and it is compulsory to include it."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Format: \u003ccode\u003eevent \u003cstrong\u003etask description /on DD/MM/YYYY [HH:mm]\u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003eevent \u003cstrong\u003e Google Hackathon /on 27/10/2020 10:00\u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "  [E][✘] Google Hackathon  (on: Oct 27 2020 10:00)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Now you have n tasks in the list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 4. Listing all tasks at hand: ```list```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Lists all the current tasks at hand. \u003cbr\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003elist\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "1.[T][✘] CS2113T Week 7 pre-lecture quiz"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "2.[D][✘] CS2113T iP Submission (by: Oct 03 2020 23:59)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "3.[E][✘] Google Hackathon (on: Oct 27 2020 10:00)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 5. Marking a task as complete: ```done```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Marks a user-specified task as done. \u003cbr\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003eNote: Index keyed in must be within the range of 1 - n, where n is number of existing tasks. \u003cbr\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Format: \u003ccode\u003edone \u003cstrong\u003eindex\u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003edone \u003cstrong\u003e1\u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "[✓] CS2113T Week 7 pre-lecture quiz"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 6. Deleting a task: ```delete```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Deletes a user-specified task. \u003cbr\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003eNote: Index keyed in must be within the range of 1 - n, where n is number of existing tasks. \u003cbr\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Format: \u003ccode\u003edelete \u003cstrong\u003eindex\u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003edone \u003cstrong\u003e1\u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Got it brother! I\u0027ve removed this task: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "[T][✓] CS2113T Week 7 pre-lecture quiz"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": " Now you have n tasks in the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 7. Finding a task: ```find```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Locates all instances of tasks that contains the user-specified keyword \u003cbr\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003eNote: The search is case-insensitive eg. `cs2113t` will match `CS2113T` \u003cbr\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Format: \u003ccode\u003e find \u003cstrong\u003eCS2113T\u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003e find \u003cstrong\u003e CS2113T \u003c/strong\u003e\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Here are the matches found!"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": " 1. CS2113T iP Submission (by: Oct 03 2020 23:59)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 8. Exiting the program: ```bye```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Exits the program, triggering automatic saving of data \u003cbr\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003ebye\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Goodbye. Sad to see you leave!"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": " Hope to see you again soon!"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 9. Listing available help: ```help```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Lists a set of commands available to users \u003cbr\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003ehelp\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Here are the range of commands:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "1.todo"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": " Command used to record impending tasks"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": " For \"todo\", kindly input in this format: *todo* *description*"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "9.help"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": " Command used to list all available commands"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": " No additional info needed!"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "### 10. Listing tasks due: ```due```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Lists all tasks due on a user-specified date \u003cbr\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003eNote: use \"today\" to check tasks due today"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Example of usage: \u003ccode\u003edue \u003cstrong\u003e 28/10/2020 \u003c/strong\u003e\u003c/code\u003e or \u003ccode\u003edue \u003cstrong\u003e today \u003c/strong\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Here are the tasks due on the specified date!"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": " 1. CS2113T iP Submissions (by: Oct 03 2020)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "**Q:** The storage file is not created in the same folder as dude.jar. What shall I do?"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003eDo remember to ```cd  *directory of home folder*``` as stated in [Quick Start](#quick-start) point 4.  "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "**Q:** How do I rectify the problem of my ticks and crosses being displayed as `?`? \u003cbr\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Follow this 3-step rectification: \u003cbr\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003e1.In command line, run ```Chcp 65001```. \u003cbr\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003e2.To run .jar file, input ```java -Dfile.encoding\u003dUTF-8 -jar filename.jar```. \u003cbr\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003e3.In system settings of command prompt, change font to NSimSun"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "![](fixCrosses.gif)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "\u003eNote: No additional parameter is needed if it is not mentioned. eg help \u003cbr\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "Action | Format | example"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "--- | --- | ---"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "todo | `todo` **task description** | `todo` **CS2113T Pre-lecture Quiz**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "deadline | `deadline` **task description /by dd/mm/yyyy [HH:mm]** | `deadline` **Complete CS quiz /by 20-10-2020**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "event | `event` **task description /on dd/mm/yyyy [HH:mm]** | `event` **Google Hackathon /on 26/10/2020 18:00**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "list | `list` | `list`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "done | `done` **task index** | `done` **1**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "delete | `delete` **task index** | `delete` **2**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "find | `find` **keyword** | `find` **cs2113t**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "bye | `bye` | `bye`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "help | `help` | `help`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "due | `due` | `due` **dd/mm/yyyy** OR `due` **today**"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 185,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import FileStorage.FileManager;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String FILE_NAME \u003d \"fileStorage.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String FILE_DIR \u003d \"data\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static TaskList currentTasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static UI userInterface;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static FileManager fileManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        userInterface \u003d new UI();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        fileManager \u003d new FileManager(FILE_NAME, FILE_DIR);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            currentTasks \u003d new TaskList(fileManager.loadFile());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        new Duke();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static void run() throws DukeException, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        boolean isOngoing \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        int numOfTasks \u003d currentTasks.getSizeOfTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        userInterface.printWelcomeMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        Parser.executeCommands(numOfTasks, isOngoing);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 35,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String MISSING_DESCRIPTION \u003d \"Hey! The description cannot be empty\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String UNINTELLIGIBLE_COMMAND \u003d \"Sorry! You have entered an invalid command!\\n For more help, type \\\"help\\\"\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String MISSING_QUALIFIER \u003d \"Hey!You are missing /by or /on in your input\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String MISSING_INFO \u003d \"You forgot the event date/deadline\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String MISSING_NUMBER \u003d \"You did not key in the task number that you want to mark\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String OUT_OF_RANGE \u003d \"The number you have keyed is out of the range!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String CREATE_FILE_FAIL \u003d \"Failed to create file! Can\u0027t help you on this brother!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String WRITE_FILE_FAIL \u003d \"Sorry to inform you! Failed to write file!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String FETCH_FILE_FAIL \u003d \"Sorry to inform you! Failed to fetch file!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String SET_DATE_FAIL \u003d \"You have tried to set a date that is before today. Dude.java is not\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            \" advanced enough to help you time-travel\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static final String INVALID_DATE \u003d \"Sorry, the date you have provided is not accepted.\\n Kindly follow \" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            \"this format: DD/MM/YYYY or DD/MM/YYYY HH:mm eg 28/10/2020 18:00\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public String errorMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        switch (error) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"MISSING_DESCRIPTION\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d MISSING_DESCRIPTION;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"UNINTELLIGIBLE_COMMAND\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d UNINTELLIGIBLE_COMMAND;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"MISSING_QUALIFIER\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d MISSING_QUALIFIER;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"MISSING_INFO\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d MISSING_INFO;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"MISSING_NUMBER\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d MISSING_NUMBER;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"OUT_OF_RANGE\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d OUT_OF_RANGE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"CREATE_FILE_FAIL\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d CREATE_FILE_FAIL;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"WRITE_FILE_FAIL\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d WRITE_FILE_FAIL;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"FETCH_FILE_FAIL\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d FETCH_FILE_FAIL;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"SET_DATE_FAIL\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d SET_DATE_FAIL;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \"INVALID_DATE\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            this.errorMessage \u003d INVALID_DATE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 61
    }
  },
  {
    "path": "src/main/java/FileStorage/FileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "package FileStorage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static String relativePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private String fileDir;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public FileManager(String fileName, String fileDir) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.fileDir \u003d fileDir;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        relativePath \u003d fileDir + \u0027/\u0027 + fileName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Saves all tasks into a text file in a specified format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param tasksList array list of current task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException If file can\u0027t be created"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public void saveFile(ArrayList\u003cTask\u003e tasksList) throws DukeException, IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        File savedFile \u003d new File(relativePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (!savedFile.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                savedFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                savedFile.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            throw new DukeException(\"CREATE_FILE_FAIL\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        saveToFile(tasksList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Saves all tasks in a specified format"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param taskList array list of current task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws IOException   If file can\u0027t be created"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException If file can\u0027t be created"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private void saveToFile(ArrayList\u003cTask\u003e taskList) throws DukeException, IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        File savedFile \u003d new File(relativePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        FileWriter writer \u003d new FileWriter(savedFile);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        convertToSaveFormat(taskList, writer);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Converts all tasks to a  specified format"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param taskList array list of current task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException file can\u0027t be created"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private void convertToSaveFormat(ArrayList\u003cTask\u003e taskList, FileWriter writer) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                Task currTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                String textFormat \u003d currTask.getType() + \" | \" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                        (currTask.getIsDone() ? \"1\" : \"0\") + \" | \" + currTask.getRawDescription();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                if (currTask instanceof Event) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    textFormat \u003d textFormat + \" |\" + ((Event) currTask).getOn();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                } else if (currTask instanceof Deadline) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    textFormat \u003d textFormat + \" |\" + ((Deadline) currTask).getBy();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                writer.write(textFormat + System.lineSeparator());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            throw new DukeException(\"WRITE_FILE_FAIL\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Load stored TXT file by calling on private loadFromExistingFile function"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return taskList Array list of tasks containing all stored tasks"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            File savedFile \u003d new File(relativePath);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (savedFile.exists()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                tasksList \u003d loadFromExistingFile();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                savedFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                savedFile.createNewFile();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            throw new DukeException(\"FETCH_FILE_FAIL\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Private function to load file from txt storage file"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return taskList Array list of tasks containing all stored tasks"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws IOException If file can\u0027t be loaded"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private ArrayList\u003cTask\u003e loadFromExistingFile() throws IOException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        File savedFile \u003d new File(relativePath);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(savedFile);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String currLine \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String[] splitString \u003d currLine.trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String taskType \u003d splitString[0].trim();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                String deadlineDescription \u003d splitString[2].trim();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                String by \u003d splitString[3].trim();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                boolean hasCompletedDeadline \u003d (splitString[1].trim().equals(\"1\"));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(deadlineDescription, by);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                if (hasCompletedDeadline) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    newDeadline.setAsDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                tasksList.add(newDeadline);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                String toDoDescription \u003d splitString[2].trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                ToDo newToDo \u003d new ToDo(toDoDescription);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                boolean hasCompletedToDo \u003d (splitString[1].trim().equals(\"1\"));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                if (hasCompletedToDo) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    newToDo.setAsDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                tasksList.add(newToDo);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                String eventDescription \u003d splitString[2].trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                String on \u003d splitString[3].trim();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                boolean hasCompletedEvent \u003d (splitString[1].trim().equals(\"1\"));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                Event newEvent \u003d new Event(eventDescription, on);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                if (hasCompletedEvent) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    newEvent.setAsDone();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                tasksList.add(newEvent);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 153
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import FileStorage.FileManager;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /*Command Prefixes*/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String COMMAND_DUE \u003d \"due\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /*External classes used*/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Execute commands as intended by user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param numOfTasks Number of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param isOngoing  Whether the program has yet to be exited"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException to catch error specified under DukeException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void executeCommands(int numOfTasks, boolean isOngoing) throws DukeException, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        while (isOngoing) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            FileManager fileManager \u003d new FileManager(Duke.FILE_NAME, Duke.FILE_DIR);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            userInput \u003d getTrimmedUserInput();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String[] splitUserInput \u003d splitCommands(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String userCommand \u003d splitUserInput[0].toLowerCase();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String userParams \u003d splitUserInput[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            switch (userCommand) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_BYE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                fileManager.saveFile(TaskList.currentTasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                UI.printExitMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                isOngoing \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_LIST:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                TaskList.commandList(numOfTasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_DONE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                TaskList.commandDone(numOfTasks, userParams);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                numOfTasks \u003d TaskList.commandDeadline(numOfTasks, userParams);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_TODO:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                numOfTasks \u003d TaskList.commandToDo(numOfTasks, userParams);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_EVENT:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                numOfTasks \u003d TaskList.commandEvent(numOfTasks, userParams);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_DELETE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                numOfTasks \u003d TaskList.commandDelete(numOfTasks, userParams);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_FIND:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                ArrayList\u003cTask\u003e matchesFound \u003d TaskList.commandFind(userParams.toLowerCase());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                UI.printMatchesFound(matchesFound, COMMAND_FIND);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_HELP:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                TaskList.commandHelp();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            case COMMAND_DUE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                ArrayList\u003cTask\u003e datesFound \u003d TaskList.commandDue(userParams);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                UI.printMatchesFound(datesFound, COMMAND_DUE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    throw new DukeException(\"UNINTELLIGIBLE_COMMAND\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    UI.printSeparator();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    UI.printSeparator();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /*Function to get command from sentence and split sentence into 2*/"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static String[] splitCommands(String userInput) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        final String[] split \u003d userInput.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \" \"};"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static String getTrimmedUserInput() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String inputLine \u003d input.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return inputLine.trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 96
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /*Delimiter Prefixes*/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String EVENT_QUALIFIER \u003d \"/on\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static final String DEADLINE_QUALIFIER \u003d \"/by\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadUserList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.currentTasks \u003d loadUserList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Adds a Deadline task to the currentTasks Task array"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param numOfTasks Number of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param userInput  User input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return numOfTasks Updated number of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException to catch error specified under DukeException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static int commandDeadline(int numOfTasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            /*If user input contains only one word*/"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (userInput.length() \u003c 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_DESCRIPTION\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            /*Missing qualifier*/"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (!userInput.contains(DEADLINE_QUALIFIER)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_QUALIFIER\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String[] splitInfoAndDeadline \u003d userInput.trim().split(DEADLINE_QUALIFIER, 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String deadlineDescription \u003d splitInfoAndDeadline[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String deadlineDate \u003d  formatDate(splitInfoAndDeadline[1].trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            /*If user input has no description*/"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (deadlineDescription.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_DESCRIPTION\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            /*If user input has no deadline*/"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (deadlineDate.isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_INFO\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(deadlineDescription, deadlineDate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            currentTasks.add(newDeadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printTaskConfirmation(numOfTasks, splitInfoAndDeadline, deadlineDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            numOfTasks++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return numOfTasks;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Prints all tasks in task list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param numOfTasks Total number of tasks"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void commandList(int numOfTasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                System.out.println(\"You have zero task at hand!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            for (int i \u003d 0; i \u003c numOfTasks; i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                System.out.println((i + 1) + \".\" + styleOutput(i));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(\"Array index out of bounds detected!\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Adds a ToDo task to the currentTasks Task array"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param numOfTasks     Number of tasks"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param splitUserInput User input"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return numOfTasks Updated number of tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException to catch error specified under DukeException"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static int commandToDo(int numOfTasks, String splitUserInput) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (splitUserInput.isBlank()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_DESCRIPTION\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            ToDo newTodo \u003d new ToDo(splitUserInput);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            currentTasks.add(newTodo);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printTaskConfirmation(numOfTasks, splitUserInput);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            numOfTasks++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return numOfTasks;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Adds a Event task to the currentTasks Task array"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param numOfTasks Number of tasks"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param userInput  User input"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return numOfTasks Updated number of tasks"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException to catch error specified under DukeException"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static int commandEvent(int numOfTasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            /*If user input contains only one word*/"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (userInput.length() \u003c 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_DESCRIPTION\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            /*Missing qualifier*/"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (!userInput.contains(EVENT_QUALIFIER)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_QUALIFIER\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            /*Split into 2 sections with index 0 being the Description and index 1 being event date*/"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String[] splitInfoAndDate \u003d userInput.trim().split(EVENT_QUALIFIER, 2);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String eventDescription \u003d splitInfoAndDate[0];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String eventDate \u003d formatDate(splitInfoAndDate[1].trim());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            /*If user input has no description*/"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (eventDescription.isEmpty()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_DESCRIPTION\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            /*If user input has no event date*/"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (eventDate.isEmpty()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_INFO\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            Event newEvent \u003d new Event(eventDescription, eventDate);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            currentTasks.add(newEvent);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printTaskConfirmation(numOfTasks, splitInfoAndDate, eventDate);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            numOfTasks++;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return numOfTasks;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Mark task as done"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param numOfTasks total number of tasks"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param number     task number"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws NumberFormatException specified task number is not recognised eg not a number/ is empty"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void commandDone(int numOfTasks, String number) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            int taskNum \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (taskNum \u003c\u003d 0 || taskNum \u003e numOfTasks) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"OUT_OF_RANGE\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (number.isBlank()) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_NUMBER\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            updateAsDone(taskNum);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (NumberFormatException numberError) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(\"Gosh you did not key in a valid number\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Find all occurences of tasks that fits a keyword"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param stringToSearch user-specified keyword"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return numberOfTasks Returns updated number of task"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static ArrayList\u003cTask\u003e commandFind(String stringToSearch) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        ArrayList\u003cTask\u003e resultArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        for (int i \u003d 0; i \u003c currentTasks.size(); i++) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            boolean isFound \u003d currentTasks.get(i).getDescription().toLowerCase().contains(stringToSearch);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (isFound) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                resultArray.add(currentTasks.get(i));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return resultArray;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Find all tasks before"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param dateToSearch user-specified date"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return numberOfTasks Returns updated number of task"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static ArrayList\u003cTask\u003e commandDue(String dateToSearch) throws DukeException {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        ArrayList\u003cTask\u003e resultsArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String reformattedDate;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        LocalDate todayDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if(dateToSearch.trim().equals(\"today\")){"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                reformattedDate \u003d formatDate(todayDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                reformattedDate \u003d formatDate(dateToSearch.trim());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            resultsArray \u003d commandFind(reformattedDate.toLowerCase());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return resultsArray;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Removes a task"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param numOfTasks total number of tasks"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param number     task number"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return numberOfTasks Returns updated number of task"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException         to catch error specified under DukeException"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws NumberFormatException specified task number is not recognised eg not a number/ is empty"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static int commandDelete(int numOfTasks, String number) throws DukeException {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            int taskNum \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (taskNum \u003c\u003d 0 || taskNum \u003e numOfTasks) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"OUT_OF_RANGE\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (number.isBlank()) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                throw new DukeException(\"MISSING_NUMBER\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            numOfTasks \u003d removeFromArray(numOfTasks, taskNum);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (NumberFormatException numberError) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(\"Gosh you did not key in a valid number\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            UI.printSeparator();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return numOfTasks;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    static void commandHelp() {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        UI.printSeparator();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        UI.printHelpMessage();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        UI.printSeparator();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Update task as Done and print edited task message"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param taskNum specific task number"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return numOfTasks Updated number of tasks after remove that specific entry"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static int removeFromArray(int numOfTasks, int taskNum) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        UI.printDeleteTaskMessage(numOfTasks, taskNum);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        currentTasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        numOfTasks--;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        UI.printSeparator();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return numOfTasks;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Update task as Done and print edited task message"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param taskNum specific task number"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static void updateAsDone(int taskNum) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        currentTasks.get(taskNum - 1).setAsDone();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        UI.printSeparator();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + \"[\" +"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                currentTasks.get(taskNum - 1).getStatusIcon() + \"] \" + currentTasks.get(taskNum - 1).getDescription());"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        UI.printSeparator();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Reformats date accordingly"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param rawDate user input for date of deadline/event"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return finalEditedDate Returns reformatted date"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException to catch error specified under DukeException"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static String formatDate(String rawDate) throws DukeException {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String finalEditedDate;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            //Contains both date and time"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            if (rawDate.trim().length() \u003e 12) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                finalEditedDate \u003d reformatDateAndTime(rawDate);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                finalEditedDate \u003d reformatDate(rawDate);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } catch (DateTimeException | ArrayIndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            throw new DukeException(\"INVALID_DATE\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "       }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return finalEditedDate;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Reformats date from DD-MM-YYYY to MMM DD YYYY"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param rawDate user input for date of deadline/event"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return finalEditedDate Returns reformatted date eg OCT 12 2020"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException to catch error specified under DukeException"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static String reformatDate(String rawDate) throws DukeException {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String intermediateDate;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String finalEditedDate;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        LocalDate todayDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        intermediateDate \u003d processDate(rawDate.trim());"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String[] dateComponents \u003d intermediateDate.split(\"-\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        int year \u003d Integer.parseInt(dateComponents[2]);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        int month \u003d Integer.parseInt(dateComponents[1]);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        int day \u003d Integer.parseInt(dateComponents[0]);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        date \u003d LocalDate.of(year, month, day);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        if (date.isBefore(todayDate)) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            throw new DukeException(\"SET_DATE_FAIL\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        finalEditedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return finalEditedDate;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Reformats date and time from DD-MM-YYYY HH:mm to MMM DD YYYY HH:mm"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param rawDateAndTime user input for date of deadline/event"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return finalEditedDate Returns reformatted date eg OCT 12 2020 18:00"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @throws DukeException to catch error specified under DukeException"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static String reformatDateAndTime(String rawDateAndTime) throws DukeException {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String intermediateDate;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String intermediateTime;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String finalEditedDate ;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        LocalDateTime todayDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String[] splitDateAndTime \u003d rawDateAndTime.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        intermediateDate \u003d processDate(splitDateAndTime[0].trim());"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String[] dateComponents \u003d intermediateDate.split(\"-\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        int year \u003d Integer.parseInt(dateComponents[2]);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        int month \u003d Integer.parseInt(dateComponents[1]);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        int day \u003d Integer.parseInt(dateComponents[0]);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        intermediateTime \u003d processTime(splitDateAndTime[1].trim());"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String[] timeComponents \u003d intermediateTime.split(\":\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        int hour \u003d Integer.parseInt(timeComponents[0]);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        int min \u003d Integer.parseInt(timeComponents[1]);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        dateTime \u003d LocalDateTime.of(year, month, day, hour, min);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        if (dateTime.isBefore(todayDateTime)) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            throw new DukeException(\"SET_DATE_FAIL\");"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        finalEditedDate \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return finalEditedDate;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /*Replace all occurrences of / or . in date given by user.*/"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static String processDate(String originalDate) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return originalDate.replace(\u0027/\u0027, \u0027-\u0027).replace(\u0027.\u0027, \u0027-\u0027);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static String addCharAtIndex(String str, char ch, int position) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return str.substring(0, position) + ch + str.substring(position);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /*Return styled output - task type and done indicators in brackets and description after*/"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static String styleOutput(int index) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return  UI.addBrackets(currentTasks.get(index).getType()) +"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                UI.addBrackets(currentTasks.get(index).getStatusIcon()) + \" \""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                + currentTasks.get(index).getDescription();"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /*Replace all occurrences of . in time given by user. Additionally, add a \u0027:\u0027 when users do not include it*/"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    static String processTime(String originalTime) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String processedTime;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        if (!originalTime.contains(\":\")) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            processedTime \u003d addCharAtIndex(originalTime, \u0027:\u0027, 2);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            processedTime \u003d originalTime.replace(\u0027.\u0027, \u0027:\u0027);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return processedTime;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public int getSizeOfTaskList() {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return currentTasks.size();"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 406
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.type \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return (super.getDescription() + \" (by: \" + by + \")\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 26
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    protected String on;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public Event(String description, String on) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.on \u003d on;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return (super.getDescription() + \" (on: \" + on + \")\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public String getOn() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return on;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 25
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    protected boolean isDone; //Status of completion"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    protected char type; //Type of task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return (description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public String getRawDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return (description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 37
    }
  },
  {
    "path": "src/main/java/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "public class ToDo extends  Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        this.type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 9
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void printMatchesFound(ArrayList\u003cTask\u003e matchesFound, String type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        if (matchesFound.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            printSeparator();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(\"No matches found! Better luck next time!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            printSeparator();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            String matchesFoundIntro \u003d (type.equals(\"due\")? \"Here are the tasks due on the specified date!\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    \"Here are the match(es) found!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(matchesFoundIntro);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            for (int i \u003d 0; i \u003c matchesFound.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                System.out.println(\" \" + (i + 1) + \". \" + matchesFound.get(i).getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void printDeleteTaskMessage(int numOfTasks, int taskNum) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        System.out.println(\"Got it brother! I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                TaskList.styleOutput(taskNum-1) + \"\\n Now you have \" + (numOfTasks - 1) +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                ((numOfTasks - 1) \u003c 2 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Prints task confirmation message for todo (Overloaded function with different parameters)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param numOfTasks  Current total number of tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param description Task Description"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void printTaskConfirmation(int numOfTasks, String description) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"  \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                + styleTypeAndStatus(numOfTasks) + \" \" + description + \"\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                + \"Now you have \" + (numOfTasks + 1) + (numOfTasks \u003d\u003d 0 ? \" task\" : \" tasks\") + \" in the list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /*Add brackets to task type and status icon*/"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    private static String styleTypeAndStatus(int numOfTasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return addBrackets(TaskList.currentTasks.get(numOfTasks).getType())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                + addBrackets(TaskList.currentTasks.get(numOfTasks).getStatusIcon());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Prints task confirmation message for deadline and event"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param numOfTasks       Current total number of tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param splitInfoAndDate String array containing description and date (Either deadline or event date)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void printTaskConfirmation(int numOfTasks, String[] splitInfoAndDate, String reformattedDate) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        char type \u003d TaskList.currentTasks.get(numOfTasks).getType();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        /*Print confirmation for DEADLINE*/"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"  \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    + styleTypeAndStatus(numOfTasks) + \" \" + splitInfoAndDate[0]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    + \" (by: \" + reformattedDate + \")\\n\" + \"Now you have \" + (numOfTasks + 1) +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    (numOfTasks \u003d\u003d 0 ? \" task\" : \" tasks\") + \" in the list\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        /*Print confirmation for EVENT*/"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"  \" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    styleTypeAndStatus(numOfTasks) + \" \" + splitInfoAndDate[0] +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    \" (on: \" + reformattedDate + \")\\n\" + \"Now you have \" + (numOfTasks + 1) +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                    (numOfTasks \u003d\u003d 0 ? \" task\" : \" tasks\") + \" in the list\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void printHelpMessage() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        System.out.println(\"Here are the range of commands:\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"1.todo\\n Command used to record impending tasks\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \" For \\\"todo\\\", kindly input in this format: *todo* *description*\\n\\n\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"2.deadline\\n Command used to record tasks with deadlines\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \" For \\\"deadline\\\", kindly input in this format: *deadline* \" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"*description* */by* *date of deadline*\\n\" + \" eg. deadline read book /by 18/10/2020 1800 \\n\\n\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"3.event\\n Command used to record tasks with events with dates\\n\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \" For \\\"event\\\", kindly input in this format: *event* \" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"*description* */on* *date of event*\\n\" + \" eg. event Google Hackathon /on 28/10/2020 1000 \\n\\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"4.list\\n Command used to list out all tasks at hand \\n No additional info needed!\\n\\n\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"5.done\\n Command used to mark task as done\\n\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \" For \\\"done\\\", kindly input task number behind\\n\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \" eg. done 2\\n\\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"6.delete\\n Command used to delete specified task\\n\" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \" eg. delete 2\\n\\n\" +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"7.find\\n Command used to search for tasks that contains certain keywords\\n\" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \" eg. find book\\n\\n\" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"8.bye\\n Command used to exit program\\n No additional info needed!\\n\\n\"+"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                \"9.help\\n Command used to list all available commands\\n No additional info needed!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        LocalDate todayDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String formattedDate \u003d todayDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String logo \u003d \"           ____          ____       \\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                + \" __(\\\")__  |  _ \\\\ _   _  |  _ \\\\  ____ \\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                + \"(__   __) | | | | | | | | | | || ___\\\\\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                + \"  /   \\\\   | |_| | |_| | | |_| |\\\\  __/\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "                + \" (_/ \\\\_)  |____/ \\\\__,_| \\\\____/  \\\\____|\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        System.out.println(\"Sup! I\u0027m Dude!\\nWhat can a brother do for you?\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        System.out.println(\"Today is \" + formattedDate);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Surround text with brackets"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param description String to be placed in between brackets"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return enclosedString String in between brackets"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static String addBrackets(String description) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String enclosedString;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        enclosedString \u003d \"[\" + description + \"]\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return enclosedString;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * Surround character with brackets"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @param description Character to be placed in between brackets"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     * @return enclosedString String in between brackets"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static String addBrackets(char description) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String enclosedString;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        enclosedString \u003d \"[\" + description + \"]\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        return enclosedString;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        System.out.println(\"Goodbye. Sad to see you leave!\\n Hope to see you again soon!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    public static void printSeparator() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        String line \u003d \"_____________________________________________________________________________________________\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 148
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "help"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\Exceptions\\*.java ..\\src\\main\\java\\Tasks\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "    echo ** BUILD FAILURE **"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 3,
      "-": 18
    }
  }
]
