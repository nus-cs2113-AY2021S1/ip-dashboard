[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "Reinbowl": 2
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                String userInput \u003d ui.readInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                Command c \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "Reinbowl": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        Command.exit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    protected String information;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public Command(String information) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.information \u003d information;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public DeadlineCommand(String information) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        String[] taskDetails \u003d information.split(\" /by \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        Deadline newTask \u003d new Deadline(taskDetails[0], taskDetails[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ui.printDeadline(tasks, newTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public DeleteCommand(String information) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        int taskNum \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        Task removedTask \u003d tasks.getTask(taskNum);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (!removedTask.isDone()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            Task.reduceTotalTaskNotDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ui.printDelete(tasks, removedTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public DoneCommand(String information) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        int taskNum \u003d Integer.parseInt(information);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        Task completedTask \u003d tasks.getTask(taskNum);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (!completedTask.isDone()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"That task is already dwone!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ui.printDone(completedTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 26
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public EventCommand(String information) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        String[] taskDetails \u003d information.split(\" /at \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        Event newTask \u003d new Event(taskDetails[0], taskDetails[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ui.printEvent(tasks, newTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 22
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public FindCommand(String information) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        TaskList tasksFound \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        for (Task t : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            if (t.getDescription().contains(information)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                tasksFound.addTask(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ui.printFind(tasksFound, information);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 24
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        date \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public ListCommand(LocalDate date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            ui.printList(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            TaskList tasksOnDate \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            for (Task t : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                if (t instanceof Deadline \u0026\u0026 ((Deadline) t).getDate().equals(date)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                    tasksOnDate.addTask(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                } else if (t instanceof Event \u0026\u0026 ((Event) t).getDate().equals(date)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                    tasksOnDate.addTask(t);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            ui.printListOnDate(tasksOnDate, date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 42
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public TodoCommand(String information) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ToDo newTask \u003d new ToDo(information);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ui.printToDo(tasks, newTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 21
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Creates a new exception with the message for cause of exception."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param message for cause of exception."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 12
    }
  },
  {
    "path": "src/main/java/duke/parser/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String[] dateformatStrings \u003d {\"yyyy/M/d\", \"yyyy-M-d\", \"d/M/yy\", \"d/M/yyyy\", \"d-M-yy\", \"d-M-yyyy\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String[] timeformatStrings \u003d {\"h:m a\", \"hhmm a\", \"H:m\", \"HHmm\"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public static LocalDate dateParser(String date) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        for (String formatString : dateformatStrings) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                return LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            } catch (DateTimeException ignored) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        throw new DukeException(\"Swomething is wrong with the date!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public static LocalTime timeParser(String time) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        time \u003d time.toUpperCase();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        for (String formatString : timeformatStrings) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                return LocalTime.parse(time, formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            } catch (DateTimeException ignored) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        throw new DukeException(\"Swomething is wrong with the time!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 36
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        String[] userWords \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        switch (userWords[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return getTypeOfListCommand(userWords);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            verifyTaskNum(userWords);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return new DoneCommand(userWords[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            verifyTaskNum(userWords);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return new DeleteCommand(userWords[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case COMMAND_TODO:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            verifyTodo(userWords);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return new TodoCommand(userWords[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            verifyDeadline(userWords);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return new DeadlineCommand(userWords[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            verifyEvent(userWords);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return new EventCommand(userWords[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            verifyFind(userWords);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return new FindCommand(userWords[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"I don\u0027t undwerstand that command :\u003c\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static Command getTypeOfListCommand(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return new ListCommand(DateTimeParser.dateParser(input[1]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static void verifyTaskNum(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Plwease give me one number :(\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"I need a twask number\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static void verifyTodo(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"The todo twask needs a descrwiption!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static void verifyDeadline(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Itz a deadline twask, theres no descrwiption and dwue date/time!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else if (!input[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Deadline task needs the fwormat /by dwue date\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        int byPos \u003d input[1].indexOf(\"/by\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (input[1].substring(0, byPos).isBlank()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Theres no task descrwiption!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else if (input[1].substring(byPos + 3).isBlank()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Ewvery deadline task needs a dwue date/time!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static void verifyEvent(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"An event task is not one without a descrwiption and a stwart date/time!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else if (!input[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Event task needs the fwormat /at stwart date\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        int atPos \u003d input[1].indexOf(\"/at\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (input[1].substring(0, atPos).isBlank()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"I can\u0027t fwind the task descrwiption!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else if (input[1].substring(atPos + 3).isBlank()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"To add event task, I need a stwart date/time!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static void verifyFind(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"I nweed somethwing to find!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 110
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private final String FILE_PATH;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public Storage(String FILE_PATH) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.FILE_PATH \u003d FILE_PATH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        initialise();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private void initialise() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        File storageFile \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        File storageFolder \u003d new File(storageFile.getParent());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (storageFolder.exists() \u0026\u0026 storageFolder.isDirectory()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            System.out.println(\"Save fwolder found! Finding save file...\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            System.out.println(\"No folder to store the save file! Hwold on, I can make wone...\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            if (!storageFolder.mkdir()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                throw new DukeException(\"I fwailed to create a folder for the save file!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            if (storageFile.createNewFile()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                System.out.println(\"Lwooks like its your fwirst time using me! I will make a swave file!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                System.out.println(\"UwU fwound your save file!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Somethwing bad happen while making storage file!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        Scanner reader \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            reader \u003d new Scanner(new File(FILE_PATH));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Somethwing bad happen while trying to read the storage file!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            loadTask(reader, tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private void loadTask(Scanner reader, ArrayList\u003cTask\u003e storageTasks) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        String[] storageLine \u003d reader.nextLine().split(\",\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        for (int i \u003d 0; i \u003c storageLine.length; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            storageLine[i] \u003d storageLine[i].trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        switch (storageLine[0]) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            task \u003d new ToDo(storageLine[2]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            task \u003d new Deadline(storageLine[2], storageLine[3]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            task \u003d new Event(storageLine[2], storageLine[3]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Erwor reading twask!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (storageLine[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        storageTasks.add(task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void write(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            FileWriter writer \u003d new FileWriter(new File(FILE_PATH));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            writeTask(writer, tasks);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Somethwing bad happen while writing to storage file!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private void writeTask(FileWriter writer, ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            writer.append(String.format(\"%s , %b , %s \", t.getTaskType(), t.isDone(), t.getDescription()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            switch (t.getTaskType()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                writer.append(String.format(\", %s\", ((Deadline) t).getDateTime()));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                writer.append(String.format(\" , %s\", ((Event) t).getDateTime()));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            writer.append(\"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 111
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Creates a new Deadline Task with the given description and set it\u0027s taskType to Deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public Deadline(String description, String dueBy) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        setTaskType(\"D\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        setDateTime(dueBy);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        increaseTotalTask();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private void setDateTime(String dueBy) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        String[] datetime \u003d dueBy.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        setDate(datetime[0]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            setTime(datetime[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Did ywou forget the date or the time?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void setDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.date \u003d DateTimeParser.dateParser(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void setTime(String time) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.time \u003d DateTimeParser.timeParser(time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return date + \" \" + time;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns a string representation of duke.task.Deadline type task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return string representation of task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" \" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                time.format(DateTimeFormatter.ofPattern(\"K:mm a\")) + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.parser.DateTimeParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Creates a new Event Task with the given description and set it\u0027s taskType to Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public Event(String description, String startAt) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        setTaskType(\"E\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        setDateTime(startAt);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        increaseTotalTask();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private void setDateTime(String startAt) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        String[] datetime \u003d startAt.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        setDate(datetime[0]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            setTime(datetime[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"Did ywou forget the date or the time?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void setDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.date \u003d DateTimeParser.dateParser(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void setTime(String time) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.time \u003d DateTimeParser.timeParser(time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return date + \" \" + time;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns a string representation of event type task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return string representation of task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" \" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                time.format(DateTimeFormatter.ofPattern(\"K:mm a\")) + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private static int totalTaskNotDone \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Creates a new task with the given description, default its done status to false and increase both the total"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * number of task and total number of task not done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param description of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        setDescription(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Sets task\u0027s description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param description of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Sets the task\u0027s type."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param taskType of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void setTaskType(String taskType) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns task\u0027s description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return task\u0027s description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns task\u0027s type."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return task\u0027s type."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns task\u0027s done status."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * False if task is not done otherwise true."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return task\u0027s done status."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns a string representation of task\u0027s done status."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return string representation of task\u0027s done status."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return (isDone) ? \"✓\" : \"✕\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Sets the task\u0027s done status to true."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        reduceTotalTaskNotDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Increases total number of task and total task not done by one."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public static void increaseTotalTask() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        totalTaskNotDone++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Decreases total number of task not done by one."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public static void reduceTotalTaskNotDone() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        totalTaskNotDone--;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns total number of tasks not done."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return total number of tasks not done."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public static int getTotalTaskNotDone() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return totalTaskNotDone;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns a string representation of task."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return string representation of task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return \"[\" + this.taskType + \"]\" + \"[\" + getStatus() + \"] \" + this.description;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 116
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Creates a new Task ArrayList to store tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Creates a new Task ArrayList that will include the given Task ArrayList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param tasks Task ArrayList to be included on creation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Adds the given task to the end of the ArrayList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param task to add."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Deletes the task at the given index in the ArrayList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param taskNum index of task to delete."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        tasks.remove(taskNum-1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns the Task ArrayList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return Task ArrayList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns the task at the given index in the ArrayList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param taskNum index of task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return task at index taskNum-1."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @throws DukeException if the given index is out of range."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public Task getTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            return tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            throw new DukeException(\"I can\u0027t find that task nwumber in the list!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Returns the total number of tasks in the ArrayList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @return size of Task ArrayList."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public int getTotalTask() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 76
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * Creates a new Todo Task with the given description and set it\u0027s taskType ToDo."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     * @param description of task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        setTaskType(\"T\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        increaseTotalTask();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 14
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private final String LINE \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"                Hewwo! I\u0027m UwU Bot\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "                + \"              Hwere to hwelp you out\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"What can I dwo fwor ywou?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (taskList.getTotalTask() \u003e 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            System.out.println(\"Hwere is ywour list of \" + taskList.getTotalTask() + \" tasks:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            printTaskList(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            System.out.println(\"Ywou have no tasks to doo! Yay!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printListOnDate(TaskList taskList, LocalDate date) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (taskList.getTotalTask() \u003e 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            System.out.println(\"All thwis task are on \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \":\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            printTaskList(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            System.out.println(\"Ywou have no tasks on \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \"!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    private void printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            System.out.println(counter + \". \" + t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printDone(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"Niasu! I\u0027we mwarked thwis task as done:\\n\" + task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printDelete(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"OwO guess it\u0027s bwye bwye to this task:\\n\" + task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"Ywou now have \" + taskList.getTotalTask() + \" twotal tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printToDo(TaskList taskList, ToDo task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"UwU neww task to do:\\n\" + task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"Ywou now have \" + taskList.getTotalTask() + \" twotal tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printDeadline(TaskList taskList, Deadline task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"OwO new deadline twask added:\\n\" + task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"Ywou now have \" + taskList.getTotalTask() + \" twotal tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printEvent(TaskList taskList, Event task) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"Nyaa upcwoming event added:\\n\" + task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"Ywou now have \" + taskList.getTotalTask() + \" twotal tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printFind(TaskList taskList, String key) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        if (taskList.getTotalTask() \u003e 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            System.out.println(\"Thwis are the tasks that match \\\"\" + key + \"\\\":\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            printTaskList(taskList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "            System.out.println(\"Thwere is no task that matches \\\"\" + key + \"\\\".\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"Bai Bai! See ywo swoon!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    public void printError(String message) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "        System.out.println(\"Oww Nuu! \" + message);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 100
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "deadline do homework /by no idea :3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Reinbowl": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Reinbowl"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "Reinbowl": 2
    }
  }
]
