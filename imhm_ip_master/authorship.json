[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": "Duke is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "## Table Of Contents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "### 1. Quick Start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "### 2. Features"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "### 3. FAQ"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "### 4. Command Summary"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "2. Download the latest duke.jar from here."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your task manager."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "4. Double-click the file to start the app. You should see a welcome message with the \"Duke\" icon."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "1. Add a todo task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "2. Add a deadline task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "3. Add an event task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "4. Mark a task as complete."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "5. Find a task based on a keyword."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "6. Delete a task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "7. List all tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "8. Exit the programme."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "9. Save data."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "### Add a todo task: `add`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "Adds a todo task to your list of tasks. The task is marked as incomplete by default."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Command: `todo` *your_task_description*"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Expected outcome: A todo task is added to your task list. You can view it using the `list` feature."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "### Add a deadline task: `deadline`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "Adds a deadline task to your list of tasks. The task is marked as incomplete by default."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Command: `deadline` *your_deadline_description* `/by` *due date*"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": " "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Expected outcome: A deadline task is added to your task list. You can view it using the `list` feature."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "### Add an event task: `event`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "Adds an event task to your list of tasks. The task is marked as incomplete by default."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Command: `event` *your_event_description* `/at` *event date*"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Expected outcome: An event is added to your task list. You can view it using the `list` feature."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "### Mark a task as complete: `done`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "Marks the task as complete."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Command: `done` *task_number*"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Expected outcome: The task is marked as done. The status icon beside the task description shows a tick."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "### Find a task based on a keyword: `find`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "Displays all the tasks that contains the keyword."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Command: `find` *keyword*"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Expected outcome: The list of tasks containing the keywords are shown, along with their respective task number."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "imhm"
        },
        "content": "### Delete a task: `delete`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "Removes the task from the task list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Command: `delete` *task_number*"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Expected outcome: The task is removed from the task list. You will not be able to view it using the `list` feature."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "imhm"
        },
        "content": "### List all tasks: `list`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "imhm"
        },
        "content": "Displays all tasks in the task list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Command: `list` "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Expected outcome: The list of tasks and the total number of tasks in the task list are shown."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "imhm"
        },
        "content": "### Exit the programme: `bye`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "imhm"
        },
        "content": "Terminates Duke and saves the list of tasks into a text file onto your computer."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Command: `bye` "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Expected outcome: Duke terminates. You can find the saved file under \"home_folder/data/duke.txt\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "imhm"
        },
        "content": "### Save data:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "imhm"
        },
        "content": "Duke saves the list of tasks into a text file onto your computer automatically whenever you terminate it. See also *Exit the programme* feature."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "imhm"
        },
        "content": "When you start the programme, Duke retrieves the stored data from \"home_folder/data/duke.txt\" and populates the task list automatically."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Command: **Not Applicable**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "imhm"
        },
        "content": "#### Expected outcome: You can view it your list of tasks saved previously using the `list` feature. See also *Exit the programme* feature."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "imhm"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "imhm"
        },
        "content": "**Q:** How do I transfer my data to another Computer?"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "imhm"
        },
        "content": "**A:** Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Duke home folder."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "imhm"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "imhm"
        },
        "content": "| **Feature** | **Command format** |"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "imhm"
        },
        "content": "| ----------- | ------------ |"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "imhm"
        },
        "content": "| Add todo task | `todo` *your_task_description* |"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "imhm"
        },
        "content": "| Add deadline task | `deadline` *your_deadline_description* `/by` *due date* |"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "imhm"
        },
        "content": "| Add event task | `event` *your_event_description* `/at` *event date* |"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "imhm"
        },
        "content": "| Mark task as done | `done` *task_number* |"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "imhm"
        },
        "content": "| Find task(s) | `find` *keyword* |"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "imhm"
        },
        "content": "| Delete a task | `delete` *task_number* |"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "imhm"
        },
        "content": "| List tasks | `list` |"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "imhm"
        },
        "content": "| Exit | `bye` |"
      }
    ],
    "authorContributionMap": {
      "imhm": 123,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Duke/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Adds a task to the task list, depending on what kind of task it is (event, deadline, todo)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public AddCommand(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String[] command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        command \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String commandType \u003d command[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String taskDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDescription \u003d command[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskList.addTask(new Todo(taskDescription));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "                throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "                command \u003d command[1].split(\"/by\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDescription \u003d command[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDate \u003d command[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskList.addTask(new Deadline(taskDescription, taskDate));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "                command \u003d command[1].split(\"/at\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDescription \u003d command[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskDate \u003d command[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "                taskList.addTask(new Event(taskDescription, taskDate));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "                throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"invalid command\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printAddTaskMessage(taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 68
    }
  },
  {
    "path": "src/main/java/Duke/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Command(String userInput) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Executes the command and throws Duke exception when the command is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public abstract void execute(TaskList taskList, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns true if the command is exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 29
    }
  },
  {
    "path": "src/main/java/Duke/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Deletes the task specified by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int taskNumberDelete;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskNumberDelete \u003d Integer.parseInt(userInput.replace(\"delete\", \"\").trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"delete\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (taskNumberDelete \u003e taskList.getTotalTask()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"invalid task action\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printDeleteTaskMessage(taskNumberDelete, taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.deleteTask(taskNumberDelete - 1); // - 1 to cater for index starting from 0"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 35
    }
  },
  {
    "path": "src/main/java/Duke/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Set the task specified by the user as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "        int taskNumberCompleted;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskNumberCompleted \u003d Integer.parseInt(userInput.replace(\"done\", \"\").trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"done\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (taskNumberCompleted \u003e taskList.getTotalTask()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"invalid task action\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.markTaskAsDone(taskNumberCompleted);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printCompleteTaskMessage(taskNumberCompleted, taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 34
    }
  },
  {
    "path": "src/main/java/Duke/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Saves the current task list locally before terminating the programme."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public ExitCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 24
    }
  },
  {
    "path": "src/main/java/Duke/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Search the task list for tasks that contains the keyword specified by the user and prints them."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public FindCommand(String userInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "        keyword \u003d userInput.replace(\"find\", \"\").trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printFindTaskMessage(taskList, keyword);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"keyword not found\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 31
    }
  },
  {
    "path": "src/main/java/Duke/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Lists all tasks in the task list to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public ListCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printTaskListView(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 19
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": " *Entry point of the Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " *Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Initializes the application and imports the data stored locally to the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param filePath Filepath of the storage data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "            storage.importData(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printNoImportDataMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Greets the user upon start up and exit."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Command c \u003d Parser.handleUserInput(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printDukeBorder(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "                c.execute(taskList, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printDukeExceptionMessage(e, taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printDukeBorder(false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printExitMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 59,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Signals an error caused by an invalid command input by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private String exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "        exception \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return exception;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 18
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Determine the type of command input by the user and calls for the respective command function."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static Command handleUserInput(String userInput) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new ExitCommand(userInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new ListCommand(userInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new DoneCommand(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else if (userInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new FindCommand(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "            return new AddCommand(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 26
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents the local file used to store the task list data."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private static String storageFilePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "        storageFilePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Writes to a text file the list of tasks. Creates a new storage file if the file does not exists."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList Contains the list of tasks to be saved."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void saveData(TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "        File output \u003d new File(storageFilePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        createFile(output);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "            FileWriter fw \u003d new FileWriter(output);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "            for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "                fw.write(t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printSaveDataErrorMessage(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Reads from a storage file and imports the tasks to a task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList Stores the tasks to this task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @throws FileNotFoundException if storage file does not exist."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void importData(TaskList taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": "        File input \u003d new File(storageFilePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Scanner s \u003d new Scanner(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "            extractCommandFromStorage(s.nextLine(), taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "        Ui.printImportDataSuccessMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Creates a new storage file if the file does not exists."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param output Storage file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private static void createFile(File output) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (output.exists()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "                Ui.printFileOverwriteMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (!output.getParentFile().exists()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "imhm"
        },
        "content": "                output.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "            output.createNewFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printFileCreatedMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": "            Ui.printFileCreateErrorMessage(e);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Determine the tasks\u0027 type and status, and adds them accordingly to the task list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private void extractCommandFromStorage(String command, TaskList taskList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String task \u003d command.substring(1, 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String isDone \u003d command.substring(3, 6);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String taskDetails \u003d command.substring(7); // includes task\u0027s description and date"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String taskDate;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "imhm"
        },
        "content": "        switch (task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDescription \u003d taskDetails;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskList.addTask(new Todo(taskDescription));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "imhm"
        },
        "content": "            int indexEndOfDesc \u003d taskDetails.indexOf(\" (by: \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDetails \u003d taskDetails.replace(\"(by: \", \"\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDescription \u003d taskDetails.substring(0, indexEndOfDesc);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDate \u003d taskDetails.substring(indexEndOfDesc, taskDetails.length() - 1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskList.addTask(new Deadline(taskDescription, taskDate));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "imhm"
        },
        "content": "            indexEndOfDesc \u003d taskDetails.indexOf(\" (at: \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDetails \u003d taskDetails.replace(\"(at: \", \"\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDescription \u003d taskDetails.substring(0, indexEndOfDesc);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskDate \u003d taskDetails.substring(indexEndOfDesc, taskDetails.length() - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskList.addTask(new Event(taskDescription, taskDate));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "imhm"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (isDone.equals(TICK_SYMBOL)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "imhm"
        },
        "content": "            taskList.markTaskAsDone(taskList.getTotalTask());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 120
    }
  },
  {
    "path": "src/main/java/Duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.by \u003d by.trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [D] icon to indicate task as a deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 21
    }
  },
  {
    "path": "src/main/java/Duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.at \u003d at.trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [E] icon to indicate task as a event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 24
    }
  },
  {
    "path": "src/main/java/Duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a Task in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns the status of the task and the description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a tick if the task is done. Returns a cross if the task is not done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return (isDone ? TICK_SYMBOL : CROSS_SYMBOL); //return tick or X symbols"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 40
    }
  },
  {
    "path": "src/main/java/Duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private int totalTask \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalTask++;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        totalTask--;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public void markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "        taskList.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public int getTotalTask() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return totalTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 39
    }
  },
  {
    "path": "src/main/java/Duke/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Returns a [T] icon to indicate task as a todo task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 19
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "imhm"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "imhm"
        },
        "content": "        printDukeBorder(true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "imhm"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "imhm"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "imhm"
        },
        "content": "                \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "imhm"
        },
        "content": "                \" What can I do for you?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "imhm"
        },
        "content": "        printDukeBorder(false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "imhm"
        },
        "content": "        printDukeBorder(true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "imhm"
        },
        "content": "        printDukeBorder(false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDukeBorder(boolean top) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (top) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"............. DUKE CHAT BOX ^^ ............\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "imhm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"...........................................\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the task deleted and the number of tasks left in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskNumberDelete"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDeleteTaskMessage(int taskNumberDelete, TaskList taskList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "imhm"
        },
        "content": "        /* - 1 is catered for array list\u0027s index starting from 0. */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Task deleted:\\n\" + taskList.getTaskList().get(taskNumberDelete - 1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Your total tasks: \" + (taskList.getTotalTask() - 1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the list of tasks in the task list, formatted as an indexed list starting from 1."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList tasks retrieved from this task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printTaskListView(TaskList taskList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"This is your list of task(s):\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "imhm"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTotalTask(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.printf(\"%d.\" + taskList.getTaskList().get(i) + \"\\n\", i + 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the task (that was indicated by the user) that was marked as done ."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskNumberCompleted task number indicated by the user as done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printCompleteTaskMessage(int taskNumberCompleted, TaskList taskList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Good work! I\u0027ve marked this task as done:\\n\" + taskList.getTaskList().get(taskNumberCompleted - 1));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the task that was added and the total number of tasks in the task list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the list of task that the task was added to."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printAddTaskMessage(TaskList taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "imhm"
        },
        "content": "        /* - 1 is catered for array list\u0027s index starting from 0. */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(taskList.getTaskList().get(taskList.getTaskList().size() - 1));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Your total tasks: \" + taskList.getTotalTask());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printFindTaskMessage(TaskList taskList, String keyword) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "imhm"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "imhm"
        },
        "content": "        for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "imhm"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "imhm"
        },
        "content": "                if (!isFound) { // first instance when keyword is found"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "imhm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "imhm"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "imhm"
        },
        "content": "                System.out.println(t);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "imhm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "imhm"
        },
        "content": "        if (!isFound) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "imhm"
        },
        "content": "            throw new DukeException(\"keyword not found\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Prints the error message based on the invalid command input by the user."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param e        type of error."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param taskList the working list of task."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printDukeExceptionMessage(DukeException e, TaskList taskList) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "imhm"
        },
        "content": "        switch (e.getException()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: The description of todo cannot be empty.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the deadline in this format: deadline ... /by ...\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the event in this format: event ... /at ...\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"invalid command\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "imhm"
        },
        "content": "                    \"Available commands: list, done, todo, deadline, event\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"invalid task action\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Total task(s): \" + taskList.getTotalTask());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the command in this format: done \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Error: Please key in the command in this format: delete \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "imhm"
        },
        "content": "        case \"keyword not found\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"There are no tasks matching this keyword. Check that you have spelt it correctly.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "imhm"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "imhm"
        },
        "content": "            System.out.println(\"Unknown Error.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "imhm"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "imhm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the exception that occurred when saving data to storage file."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param e exception message."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printSaveDataErrorMessage(IOException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Unable to save data. Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printNoImportDataMessage() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"No existing data imported.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printImportDataSuccessMessage() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Existing data imported.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "imhm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * Shows the user the exception that occurred when creating a storage file"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "imhm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "imhm"
        },
        "content": "     * @param e exception message."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "imhm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printFileCreateErrorMessage(IOException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"Cannot create file; reason: \" + e.getMessage());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printFileCreatedMessage() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"New output file created.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "imhm"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "imhm"
        },
        "content": "    public static void printFileOverwriteMessage() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "imhm"
        },
        "content": "        System.out.println(\"File exists. Data overwrite.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "imhm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "imhm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "imhm": 187
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "imhm"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "imhm"
        },
        "content": "deadline wrongcommand"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "imhm"
        },
        "content": "find"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "imhm"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "imhm"
        },
        "content": "done"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "imhm"
        },
        "content": "delete"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "imhm"
        },
        "content": "wrongcommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "imhm"
        },
        "content": "done1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "imhm"
        },
        "content": "delete1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "find no such keyword"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "imhm"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "imhm"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "imhm"
        },
        "content": "event project meeting /at July 6th 2-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "imhm"
        },
        "content": "find book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "imhm"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "imhm"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "imhm"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "imhm"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "imhm": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "imhm"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\*.java ..\\src\\main\\java\\Duke\\Task\\*.java ..\\src\\main\\java\\Duke\\Command\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "imhm"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "imhm": 2,
      "-": 19
    }
  }
]
