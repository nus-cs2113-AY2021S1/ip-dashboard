[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return \"[D][\"+getStatusIcon()+\"] \"+description+\"(by:\"+by+\")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 20
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static Task[] list \u003d new Task[100];"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static int numItems;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static int totalTasksDone\u003d0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static final String LINE_BREAK \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static final String YOUR_LIST \u003d \"\\t_______________________~Your List~__________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public enum TaskType{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        TODO , DEADLINE, EVENT, INVALID"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        boolean isNotDone\u003dtrue;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String answer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        //printWelcomeMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\tHello! I\u0027m\\n\"+ LOGO+\"\\n\\tWhat can I do for you?\\uD83D\\uDE0A\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        while(isNotDone){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            answer \u003d in.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                isNotDone \u003d parseCommand(answer);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (DukeException e){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                printMessage(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                printMessage(\"\\t☹ Empty command! Please specify the task number to mark as complete.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (NumberFormatException e){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                printMessage(\"\\t☹ Sorry could not mark as done! Please enter a valid number.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (DukeOutOfBoundsException e){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                printMessage(\"\\t☹ Cannot mark task as done! :(\\n\\tPlease enter a list number within the range.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\tFarewell. Until next time my dude.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static void printList(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(YOUR_LIST);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        for(int i\u003d0; i\u003cnumItems; i++){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            System.out.println(\"\\t\"+(i+1)+\". \"+ list[i]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private static void printMessage(String message){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private static TaskType getTaskType(String answer) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        TaskType taskType;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        answer \u003d answer.trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(answer.matches(\"deadline(.*)\")){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        } else if(answer.matches(\"event(.*)\")){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        } else if(answer.matches(\"todo(.*)\")){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskType \u003d TaskType.INVALID;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private static boolean parseCommand(String answer) throws DukeException, DukeOutOfBoundsException{"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(answer.trim().equalsIgnoreCase(\"bye\")){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(answer.trim().equalsIgnoreCase(\"list\")){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            printList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(answer.contains(\"done\")){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            String[] words \u003d answer.trim().split(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            int valueToMarkDone \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(valueToMarkDone\u003c\u003d0 || valueToMarkDone\u003enumItems) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                throw new DukeOutOfBoundsException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                if (!list[valueToMarkDone - 1].isDone) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                        totalTasksDone++;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                list[valueToMarkDone - 1].markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                printMessage(\"\\tAwesome! I\u0027ve marked this task as done:\"+\"\\n\\t\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                         list[valueToMarkDone - 1]+"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                        \"\\n\\tOnly \" + (numItems - totalTasksDone) + \" to go! ;)\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            TaskType taskType \u003d getTaskType(answer);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(taskType \u003d\u003d TaskType.INVALID){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                addToList(answer, taskType);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch(EmptyTaskException e){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                printMessage(\"☹ OOPS!!! The description of a \"+"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                        (taskType\u003d\u003dTaskType.TODO?\"todo\":(taskType\u003d\u003dTaskType.DEADLINE?\"deadline\":\"event\"))+"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                        \" cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                printMessage(\"\\t☹ Please start with the command with todo/deadline/event!\"+"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                        \"\\n\\t OR please specify a date/time if you want to set a deadline/event!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (InvalidFormatException e){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                printMessage(\"\\t☹ Remember to format your command like this ⬇\" +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                        \"\\n\\t todo \u003cdescription\u003e\"+"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                        \"\\n\\t deadline \u003cdescription\u003e /by \u003cdate/time\u003e\"+"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                        \"\\n\\t event \u003cdescription\u003e /at \u003cdate/time\u003e\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static void addToList(String answer, TaskType taskType) throws EmptyTaskException, InvalidFormatException{"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String[] words \u003d answer.trim().split(\" \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        //Checks if task description is empty"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(words.length\u003c2){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        answer \u003d answer.substring(answer.indexOf(\" \"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String taskDescription, time;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        numItems++;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        switch (taskType){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            list[numItems-1] \u003d new ToDo(answer);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(!answer.contains(\" /by \")){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                throw new InvalidFormatException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskDescription \u003d answer.substring(0, answer.indexOf(\"/by\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            time \u003d answer.substring(answer.indexOf(\"/by \")+3);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            list[numItems-1] \u003d new Deadline(taskDescription,time);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(!answer.contains(\" /at \")){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                throw new InvalidFormatException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskDescription \u003d answer.substring(0, answer.indexOf(\"/at\"));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            time \u003d answer.substring(answer.indexOf(\"/at \")+3);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            list[numItems-1] \u003d new Event(taskDescription, time);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\tAdded:\" + list[numItems-1]+\"\\n\\tNow you have \"+numItems+(numItems\u003e1?\" tasks\":\" task\")+\" in the list :D\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 145,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 4
    }
  },
  {
    "path": "src/main/java/duke/DukeOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class DukeOutOfBoundsException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 4
    }
  },
  {
    "path": "src/main/java/duke/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class EmptyTaskException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 4
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return \"[E][\"+getStatusIcon()+\"] \"+description+\"(at:\"+at+\")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 15
    }
  },
  {
    "path": "src/main/java/duke/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class InvalidFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 4
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.isDone\u003dtrue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 19
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return \"[T][\"+getStatusIcon()+\"] \"+description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 2,
      "-": 19
    }
  }
]
