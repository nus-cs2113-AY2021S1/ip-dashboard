[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "## Requirements"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Ensure you have Java **11** or higher installed on your computer."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "* Download the duke.jar file from the releases."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "* Copy the file to a folder where you would want to store the task list data."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "* Double click jar file to start the application. If this does not open the app"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "then open the terminal and make sure you are in the folder with the jar file. Type"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "the following command: `java -jar duke.jar`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "* Once the app starts, type a command in the command line and press _enter_ to execute it."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "* Some example commands (does not cover all commands):"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "  1. `list`: list all contacts"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "  2. `todo Buy groceries.`: Adds a task with `Buy groceries.` as description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "  3. `done 1`: Marks 1st task in the list as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "  4. `delete 2`: Deletes the 2nd task in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "  5. `bye`: Exits the app"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "* The features section below has details of **all** commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "### Add a to-do task: `todo`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Adds a simple to-do task to the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### `todo \u003cdescription\u003e` "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "A task with the description specified is added to the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "`todo Read book.`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Added:[T][✘]  Read book."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Now you have 1 task in the list :D"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "### Add a deadline: `deadline`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Adds a deadline type task to the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e` "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "The deadline with the description and due date specified as yyyy-mm-dd is added to the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "`deadline Finish exam revision. /by 2020-10-10`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Added:[D][✘]  Finish exam revision. (by:Oct 10 2020)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Now you have 2 tasks in the list :D"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "### Add an event: `event`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Adds an event type task to the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### `event \u003cdescription\u003e /at \u003cyyyy-mm-dd\u003e` "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "The event with the description and date specified as yyyy-mm-dd is added to the task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "`event CS2113T Final Exam. /at 2020-12-01`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Added:[E][✘]  CS2113T Final Exam. (at:Dec 1 2020)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Now you have 3 tasks in the list :D"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "### List all tasks: `list`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Lists all tasks in the task list with completion status."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### `list` "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "The tasks are listed down on the screen in the order in which they were added along with completion status (depicted as a ✘ or ✓ )."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "_______________________~Your List~__________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "1. [T][✘]  Read book."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "2. [D][✘]  Finish exam revision. (by:Oct 10 2020)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "3. [E][✘]  CS2113T Final Exam. (at:Dec 1 2020)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "### Mark a task as done: `done`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Change the completion status of a task to done/complete."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### `done \u003ctask number\u003e` "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Marks the task specified by the task number as done (✘ to ✓)."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Awesome! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "[D][✓] Finish exam revision.(by:Oct 10 2020)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Only 2 to go! ;)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "### Delete a task: `delete`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Delete a task from the task list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### `delete \u003ctask number\u003e` "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Deletes the task specified by the task number from the list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Noted! I\u0027ve removed this task: "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "[T][✘] Read book."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Now you have 2 tasks in the list :D"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "### Locate a task by a keyword: `find`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Obtain a list of tasks with task descriptions matching search keyword."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### `find \u003ckeyword\u003e` "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Finds and lists tasks whose descriptions contain the keyword specified."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "`find exam`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "______________________~Tasks Found~_________________________"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "1. [D][✓] Finish exam revision.(by:Oct 10 2020)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "### Exit the application: `bye`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "#### `bye` "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Finishes execution of program and closes application."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Farewell. Until next time my dude."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "```"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Task data is saved automatically in the hard disk for each change in the data."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "There is no need to save data manually. This data is loaded the next time the "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "application is opened."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "Command | Format | Example"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ":------------: | :-------------: | :-------------:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "todo | `todo \u003cdescription\u003e` | `todo Read book.` "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "deadline | `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e` | `deadline Finish exam revision. /by 2020-10-10`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "event | `event \u003cdescription\u003e /at \u003cyyyy-mm-dd\u003e` | `event CS2113T Final Exam. /at 2020-12-01`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "list | `list` | `list`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "done | `done \u003ctask number\u003e` | `done 2`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "delete | `delete \u003ctask number\u003e` | `delete 1`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "find | `find \u003ckeyword\u003e` | `find exam`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "bye | `bye` | `bye`"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 175,
      "-": 22
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.exception.DukeOutOfBoundsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.exception.FindFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Represents the attributes and behaviours of a chat-bot assistant Duke. Each instance of Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * allows one to run and use the chat-bot features such as adding, deleting and managing different"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * kinds of tasks, as well as storing task list to a file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public enum TaskType{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        TODO , DEADLINE, EVENT, INVALID"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Creates new instances of Ui and Storage classes to enable user interface and access task data from files"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * at fileName and dir specified. Also tries to load data from specified file, in case the file cannot be read-"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * it catches FileNotFoundException and prints error message accordingly. Then proceeds to create a new empty"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * taskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param fileName The name and extension of the file where task data will be stored."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param dir The folder in which the task data file will be located."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public Duke(String fileName, String dir){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        storage \u003d new Storage(fileName, dir);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskList \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            ui.printMessage(\"\\t☹ Could not load the previous data! Because \"+e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Runs the main code for the chat-bot Duke. The code loops until the user types \"bye.\" In the event this"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * occurs the variable isNotDone becomes false thereby exiting the loop. The function also catches errors"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * thrown by the objects in the Parser class and displays appropriate error messages."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    protected void run(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        Parser parse \u003d new Parser(this);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        boolean isNotDone\u003dtrue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String answer;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        while(isNotDone){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            answer \u003d in.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                isNotDone \u003d parse.parseCommand(answer);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (DukeException e){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                ui.printDukeExceptionError();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                ui.printEmptyCommandError();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (NumberFormatException e){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                ui.printInvalidNumberError();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (DukeOutOfBoundsException e){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                ui.printRangeError();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch (FindFormatException e){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                ui.printFindFormatError();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        updateFileTasks();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ui.printFarewell();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Creates a new object of Duke and specifies storage file to be \u0027duke.txt\u0027 under the folder \u0027data.\u0027 Then"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * calls run() to launch the chat-bot assistant Duke."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param args Array of strings taken in when the application is run on the OS with command line."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "       new Duke(\"duke.txt\", \"data\").run();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Updates the file where tasks are stored at by running updateFile() function of an instance of the"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * class Storage with the latest updated taskList. Catches exception if the files cannot be written to"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * and displays appropriate error message from the Ui class."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static void updateFileTasks() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            storage.updateFile(taskList.tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }catch(IOException e){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            ui.printFileError(e);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 95,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Represents the functions and attributes of a user response parser. Has functions to read and identify commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * based on user response and perform actions accordingly."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     *  Parameterised constructor that accepts new instance of the chat-bot Duke to store current taskList when"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     *  creating a new object of Param. Also initialises the object of Ui to use for user interactions."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param duke The new instance of the Duke class to store current updated taskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public Parser(Duke duke){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        taskList \u003d duke.taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Takes in a string \u0027answer\u0027 which the user inputs through the command line. Performs checks to identify the"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * commands given. If the command matches \u0027bye\u0027 then the function returns false and the while loop in the run()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * function in the duke class is terminated, and the program exits. Otherwise, in the case of other commands,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * the function performs a task and/or prints a response then returns true, to continue running the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param answer The user response collected via the command line."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return boolean This is false if \u0027bye\u0027 is read and true for all other commands read."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws DukeException If command type is INVALID."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws DukeOutOfBoundsException If an out of range number is specified to mark as done/ delete from the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws FindFormatException If the format of the find command is incorrect."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    boolean parseCommand(String answer) throws DukeException, DukeOutOfBoundsException, FindFormatException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(answer.trim().equalsIgnoreCase(\"bye\")){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(answer.trim().equalsIgnoreCase(\"list\")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            ui.printList(taskList.tasks, false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(answer.trim().matches(\"done(.*)\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskList.markTaskAsDone(answer);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }else if(answer.trim().matches(\"delete(.*)\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskList.deleteTask(answer);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }else if(answer.trim().matches(\"find(.*)\")){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskList.findTasksWithKeyword(answer);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            Duke.TaskType taskType \u003d getTaskType(answer);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(taskType \u003d\u003d Duke.TaskType.INVALID){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                taskList.addToList(answer, taskType);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch(EmptyTaskException e){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                ui.printEmptyDescriptionError(taskType);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                ui.printOutOfBoundError();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            } catch (InvalidFormatException | DateTimeException e){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                ui.printFormatError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Returns type of task as an enum value specified in the Duke class. Reads response String passed by"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * parseCommand() and identifies type of task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param answer Response String from the parseCommand()."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return Duke.TaskType An enum with types DEADLINE, EVENT, TODO, INVALID based on type of task read."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private static Duke.TaskType getTaskType(String answer) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        Duke.TaskType taskType;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        answer \u003d answer.trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(answer.matches(\"deadline(.*)\")){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskType \u003d Duke.TaskType.DEADLINE;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        } else if(answer.matches(\"event(.*)\")){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskType \u003d Duke.TaskType.EVENT;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        } else if(answer.matches(\"todo(.*)\")){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskType \u003d Duke.TaskType.TODO;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskType \u003d Duke.TaskType.INVALID;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 90
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Each instance of storage represents the ability to create, read and write Task lists"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * to a certain file as specified."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    protected String directory;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Parameterised constructor that takes in the filename and directory to create a new file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param name The name and extension type of the file where the task data will be stored."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param dir The name of the folder in which the file with task data will be stored."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public Storage(String name, String dir){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        fileName \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        directory \u003d dir;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        createFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Creates a file by making a new file object with the directory and file name specified when a new"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * object of the class is made. Checks for existence of the file and folder before making them. Catches"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * IOException in case something goes wrong while making the file and directory."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void createFile(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        file \u003d new File(directory+\"/\"+fileName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(!file.exists()){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                if(!file.getParentFile().exists()){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                    file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }catch(IOException e){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            System.out.println(\"\\tSomething went wrong: \"+ e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Updates the existing file created with the task list specified in the parameter. Writes to the file in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * a specific format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param tasks An ArrayList\u003cTask\u003e which specifies the current tasks to be written to the file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws IOException If the output operation to the file has failed or was interrupted."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void updateFile(ArrayList\u003cTask\u003e tasks) throws IOException{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String textIn\u003d\"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        for(Task task: tasks){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskType \u003d getTaskType(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            done \u003d getDoneStatus(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            switch (taskType){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                textIn \u003d textIn+ (taskType+\" | \"+done+\" | \"+task.getDescription()+System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                textIn \u003d textIn + (taskType+\" | \"+done+\" | \"+task.getDescription()+\" | \"+((Deadline) task).getBy()+System.lineSeparator());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                textIn \u003d textIn + (taskType+\" | \"+done+\" | \"+task.getDescription()+\" | \"+((Event) task).getAt()+System.lineSeparator());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        fw.write(textIn);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Returns a string \"T\", \"D\" or \"E\" based on the type of task passed to the function."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param task A Task class object which could be an object of subclass Deadline, Event or ToDo."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return A String \"T\", \"D\" or \"E\" if the task is and instance of ToDo, Deadline or Event respectively."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String getTaskType(Task task){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(task instanceof ToDo){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }else if(task instanceof Deadline){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Returns a String \"0\" or \"1\" based on whether the task passed is marked as done or not."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param task An instance of the Task class."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return A String \"0\" or \"1\" if the task is marked as not done or done respectively."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String getDoneStatus(Task task){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(task.getDoneStatus()){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Returns an ArrayList\u003cTask\u003e of tasks after reading values from the current file. The data is read on"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * assumption that the format of data is same as the one specified by function updateFile()."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return An ArrayList\u003cTask\u003e with the tasks specified in the file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws FileNotFoundException If the file does not exist or cannot be found."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public ArrayList\u003cTask\u003e readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        int numTask \u003d 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            String[] details \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            switch (details[0].trim()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                tasks.add(new ToDo(details[2].trim()));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                tasks.add(new Deadline(details[2].trim(), details[3].trim()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                tasks.add(new Event(details[2].trim(), details[3].trim()));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(details[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                tasks.get(numTask).markAsDone();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            numTask++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 139
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.exception.DukeOutOfBoundsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.exception.EmptyTaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.exception.FindFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.exception.InvalidFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Represents a single list of tasks stored in an ArrayList\u003cTask\u003e and"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * the different functions used to add, delete, modify the tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static int totalTasksDone\u003d0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Default constructor creates an empty list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Parameterised constructor takes in an ArrayList\u003cTask\u003e of tasks and copies it to the current tasks list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param tasks An ArrayList\u003cTask\u003e containing a list of Task objects."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Takes in a String and based on the user specifications, deletes a Task at a specified position in the"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * ArrayList\u003cTask\u003e."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param answer A String of the user response/command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws DukeOutOfBoundsException If the values specified to be deleted is out of bounds of the Arraylist\u003cTask\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void deleteTask(String answer) throws DukeOutOfBoundsException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String[] words \u003d answer.trim().split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        int valueToDelete \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(valueToDelete\u003c\u003d0 || valueToDelete\u003e tasks.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            throw new DukeOutOfBoundsException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if (tasks.get(valueToDelete-1).getDoneStatus()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            totalTasksDone--;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ui.printRemovedTask(valueToDelete, tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        tasks.remove(valueToDelete-1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        Duke.updateFileTasks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Takes in a String and based on user specifications, marks a task at a certain position in the"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * ArrayList\u003cTask\u003e as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param answer A String of the user response/command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws DukeOutOfBoundsException If value specified to be marked as done is out of range of the ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void markTaskAsDone(String answer) throws DukeOutOfBoundsException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String[] words \u003d answer.trim().split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        int valueToMarkDone \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(valueToMarkDone\u003c\u003d0 || valueToMarkDone\u003e tasks.size()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            throw new DukeOutOfBoundsException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if (!tasks.get(valueToMarkDone-1).getDoneStatus()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                totalTasksDone++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        tasks.get(valueToMarkDone-1).markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ui.printMarkedAsDone(valueToMarkDone, tasks, totalTasksDone);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        Duke.updateFileTasks();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Adds a task to the current ArrayList\u003cTask\u003e tasks based on the taskType passed. Extracts descriptions and"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * time based on the command provided by the user."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param answer A String of the user response/command."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param taskType A Duke.TaskType object specifying the taskType mentioned in tje user\u0027s command."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws EmptyTaskException If nothing is mentioned after the task command. That is total number of words\u003c2."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws InvalidFormatException If /at or /by is not mentioned in the answer if the command is event or deadline."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void addToList(String answer, Duke.TaskType taskType) throws EmptyTaskException, InvalidFormatException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String[] words \u003d answer.trim().split(\" \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(words.length\u003c2){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        answer \u003d answer.trim().substring(answer.trim().indexOf(\" \"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String taskDescription, extractedDate, date;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        switch (taskType){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            tasks.add(new ToDo(answer));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(!answer.trim().contains(\" /by \")){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                throw new InvalidFormatException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskDescription \u003d answer.substring(0, answer.indexOf(\"/by\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            extractedDate \u003d answer.substring(answer.indexOf(\"/by \")+3);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            date \u003d getFormattedTime(extractedDate);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            tasks.add(new Deadline(taskDescription, date));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(!answer.trim().contains(\" /at \")){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                throw new InvalidFormatException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            taskDescription \u003d answer.substring(0, answer.indexOf(\"/at\"));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            extractedDate \u003d answer.substring(answer.indexOf(\"/at \")+3);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            date \u003d getFormattedTime(extractedDate);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            tasks.add(new Event(taskDescription, date));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            throw new InvalidFormatException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        Duke.updateFileTasks();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Formats the date passed in MMM d yyyy format and returns the formatted String."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param extractedDate The date extracted from the user command/response."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return Formatted date String."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    private String getFormattedTime(String extractedDate){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(extractedDate.trim());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Finds tasks in the list with the keyword specified."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param answer The command entered by the user in String format."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @throws FindFormatException If keyword after the word find is missing."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void findTasksWithKeyword(String answer) throws FindFormatException{"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String[] words \u003d answer.trim().split(\" \");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        if(words.length\u003c2){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            throw new FindFormatException();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        String keyword \u003d answer.trim().substring(answer.trim().indexOf(\" \"));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ArrayList\u003cTask\u003e tasksWithKeyword\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        for(Task task: tasks){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            if(task.getDescription().matches(\"(.*)\"+keyword.trim()+\"(.*)\")){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                tasksWithKeyword.add(task);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        ui.printList(tasksWithKeyword, true);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 153
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Represents different messages to print out to the user by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static final String LINE_BREAK \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static final String YOUR_LIST \u003d \"\\t_______________________~Your List~__________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public static final String TASKS_FOUND\u003d\"\\t______________________~Tasks Found~_________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the message passed in the format which Duke responds with."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param message A String of the message to be printed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printMessage(String message){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the welcome message."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printWelcome(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\tHello! I\u0027m\\n\"+ Ui.LOGO+\"\\n\\tWhat can I do for you?\\uD83D\\uDE0A\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the farewell message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    void printFarewell() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\tFarewell. Until next time my dude.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the error that occurs when loading a file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param e An IOException type which is used to get error message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    void printFileError(IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\tSomething went wrong while loading file: \"+ e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the ArrayList\u003cTask\u003e passed to it in a manner specific to Duke."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param tasks An ArrayList\u003cTask\u003e to be printed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param isForFind A boolean value that specifies if the print action is for the find command or not."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e tasks, boolean isForFind){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(isForFind? TASKS_FOUND: YOUR_LIST);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        int index \u003d0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        for(Task task: tasks){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            System.out.println(\"\\t\"+(index+1)+\". \"+ task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the error caused by DukeException."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printDukeExceptionError() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints error caused by an empty command."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printEmptyCommandError() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\t☹ Empty command! Please specify the task number to mark as complete/delete.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the error caused by entering a non numeric character after the delete/done commands."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printInvalidNumberError() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\t☹ Sorry could not mark as done/deleted! Please enter a valid number.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the error caused by entering a number out of range of the taskList in Duke."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printRangeError() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\t☹ Cannot mark task as done/deleted! :(\\n\\tPlease enter a list number within the range.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the error caused by empty description when using task commands todo/deadline/event."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param taskType A Duke.TaskType enum that specifies the type of task passed to be printed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printEmptyDescriptionError(Duke.TaskType taskType) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\t☹ OOPS!!! The description of a \"+"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                    (taskType \u003d\u003d Duke.TaskType.TODO?\"todo\":(taskType \u003d\u003d Duke.TaskType.DEADLINE?\"deadline\":\"event\"))+"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                    \" cannot be empty.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints error caused by not setting a time for a deadline/event."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printOutOfBoundError() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\t☹ Please start with the command with todo/deadline/event!\"+"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                    \"\\n\\t OR please specify a date/time if you want to set a deadline/event!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints error caused by entering an invalid format."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printFormatError() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\t☹ Remember to format your command like this ⬇\" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                    \"\\n\\t todo \u003cdescription\u003e\"+"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                    \"\\n\\t deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e\"+"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                    \"\\n\\t event \u003cdescription\u003e /at \u003cyyyy-mm-dd\u003e\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the task removed using the delete operation."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param valueToDelete An int that specifies the task number to be deleted."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param tasks The original ArrayList\u003cTask\u003e of tasks before the task specified is deleted."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printRemovedTask(int valueToDelete, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\tNoted! I\u0027ve removed this task: \\n\\t\" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                    tasks.get(valueToDelete -1)+"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                    \"\\n\\tNow you have \" +(tasks.size()-1)+(tasks.size()-1!\u003d1?\" tasks\":\" task\")+\" in the list :D\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the task marked done as well as the number of tasks left to mark as done."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param valueToMarkDone An int that specifies the task number to mark as done."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param tasks An ArrayList\u003cTask\u003e of the tasks."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param totalTasksDone An int that contains the total number of tasks done."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printMarkedAsDone(int valueToMarkDone, ArrayList\u003cTask\u003e tasks, int totalTasksDone) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\tAwesome! I\u0027ve marked this task as done:\"+\"\\n\\t\" +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                      tasks.get(valueToMarkDone -1)+"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                      \"\\n\\tOnly \" + (tasks.size() - totalTasksDone) + \" to go! ;)\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints the most recent task added to the list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param tasks An ArrayList\u003cTask\u003e specifying the users current saved tasks."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printAddedTask(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\tAdded:\" + tasks.get(tasks.size()-1) +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "                        \"\\n\\tNow you have \"+ tasks.size()+(tasks.size()!\u003d1?\" tasks\":\" task\")+\" in the list :D\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Prints error if the format of the find command is wrong."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void printFindFormatError() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        printMessage(\"\\t☹ Please remember to specify a keyword to search for!\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 165
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Exception thrown when invalid command is entered."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Exception thrown when value specified to done/delete command is out of the task list range."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class DukeOutOfBoundsException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public DukeOutOfBoundsException(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Exception thrown when no description is given after task command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class EmptyTaskException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public EmptyTaskException(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/FindFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Exception thrown when user does not format find command input correctly."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class FindFormatException extends Exception{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public FindFormatException(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Exception thrown when user does not format deadline/event input correctly."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class InvalidFormatException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public InvalidFormatException(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Represents a kind of task which has a Deadline \u0027by\u0027 which the task must be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Parameterised constructor to create an object with description and by when the tasks must be completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param description String type describing the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param by String type specifying time/date by when the task must be complete."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * A getter function used to get instance variable \u0027by.\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return String type instance variable by."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Specifies how the Deadline object type must be represented by a String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return String type representation of the Deadline object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return \"[D][\"+getStatusIcon()+\"] \"+description+\"(by:\"+by+\")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Represents a kind of task which is an Event \u0027at\u0027 when it occurs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Parameterised constructor to create an object with description and at when the tasks must be completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param description String type describing the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param at String type specifying time/date at when the task occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * A getter function used to get instance variable \u0027at.\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return String type instance variable at."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String getAt(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Specifies how the Event object type must be represented by a String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return String type representation of the Event object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return \"[E][\"+getStatusIcon()+\"] \"+description+\"(at:\"+at+\")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Represents a task which has a description and completion status."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Parameterised constructor to accept and specify task description and set initial completion status."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param description String type describing the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Returns a tick or cross status icon based on completion status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return String type tick or cross icon. If task is complete then tick else a cross."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        this.isDone\u003dtrue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * A getter function that returns completion status of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return A boolean instance variable isDone."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public boolean getDoneStatus(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * A getter function that returns description of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return String type instance variable description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 51
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " * Represents a kind of task which is a task to be done or a \u0027todo\u0027."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Parameterised constructor to create an object with the description specified."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * Specifies how the ToDo object type must be represented by a String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     * @return String type representation of the ToDo object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "        return \"[T][\"+getStatusIcon()+\"] \"+description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 24
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sevenseasofbri"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "sevenseasofbri": 2,
      "-": 19
    }
  }
]
