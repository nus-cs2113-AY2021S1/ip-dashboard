[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Add Todo "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Adds a Todo Type Task into the Task List"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Add Deadline "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Adds a Deadline Type Task into the Task List"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Add Event "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Adds an Event Type Task into the Task List"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Mark as Done "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Marks the desired task as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Delete Task "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Delete the desired task from the Task List."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Find Task "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Finds the desired task in the Task List."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Print Task "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Finds the tasks in the Task List that have the same date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### List Task "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Prints the Task List."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### `list` - prints out the current Task List"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Prints out all the entries of the Task List into the command window."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` 1.[T][X] a`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### `todo` - Adds a Todo Type Task into the Task List"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Adds a Todo Type Task into the Task List"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`todo (task name)`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`[T][X] a`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`Now you have 7 tasks in the list.`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### `deadline` - Adds a Deadline Type Task into the Task List"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Adds a Deadline Type Task into the Task List"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`deadline (task name /by task by)`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`[D][X] a (by 2010-10-10)`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`Now you have 7 tasks in the list.`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### `event` - Adds an Event Type Task into the Task List"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Adds an Event Type Task into the Task List"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`event (task name /@ task at)`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`[E][X] a (@ 2010-10-10)`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`Now you have 7 tasks in the list.`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### `done` - Marks a specific Task as Done"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Marks the desired task as done."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`done (task number)`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` Nice! I\u0027ve marked this task as done:`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`[D][V] a (@ 2010-10-10) `"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### `delete` - Deletes a specific Task from the Task List"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Deletes the desired Task from the Task List."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`delete (task number)`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`  Noted. I\u0027ve removed this task:`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`[E][X] b (@ 2010-10-10)`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`Now you have 6 tasks in the list.`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### `find` - Searches a specific Task in the Task List"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Searches a specific Task in the Task List by inputting the keyword."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`find (a)`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` Here are the matching tasks in your list:`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` 1.[E][X] dsa (@ 2009-09-09)`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` 2.[T][X] a`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### `print` - Searches all the Task in the Task List with same date"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Searches all the Task in the Task List with same date as the desired date"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`print (2009-09-09)`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` Here are the matching dates in your list:`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` 1.[E][X] dsa (@ 2009-09-09) Sep 9 2009`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### `bye` - Exits the program"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "` Bye. Hope to see you again soon!`"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 144,
      "-": 17
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Command class deals with executing the commands"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * TodoCommand method executes the add todo into the taskList command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount current number of tasks in the taskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskCount"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int TodoCommand(String line, ArrayList\u003cTask\u003e taskList, int taskCount) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskName \u003d Parser.parseTodo(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        taskCount \u003d TaskList.addTask(taskList, taskCount, taskName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * deadlineCommand method executes the add deadline into the taskList command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount current number of tasks in the taskList"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskCount"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int deadlineCommand(String line, ArrayList\u003cTask\u003e taskList, int taskCount) throws DukeException, DateTimeParseException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskName \u003d Parser.parseDeadlineName(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskBy \u003d Parser.parseDeadlineBy(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        taskCount \u003d Deadline.addTask(taskList, taskCount, taskName, taskBy);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Task.setDate(taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * eventCommand method executes the add event into the taskList command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount current number of tasks in the taskList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskCount"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int eventCommand(String line, ArrayList\u003cTask\u003e taskList, int taskCount) throws DukeException, DateTimeParseException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskName \u003d Parser.parseEventName(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskAt \u003d Parser.parseEventAt(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        taskCount \u003d Event.addTask(taskList, taskCount, taskName, taskAt);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Task.setDate(taskList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * doneCommand method executes the make task as done command"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void doneCommand(String line, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int taskNum \u003d Parser.parseDoneNum(line);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Task.markAsDone(taskList, taskNum);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * deleteCommand method executes the delete task command"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount current number of tasks in the taskList"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int deleteCommand(String line, ArrayList\u003cTask\u003e taskList, int taskCount) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int taskNum \u003d Parser.parseDeleteNum(line);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        taskCount \u003d TaskList.delete(taskList, taskCount, taskNum);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * findCommand method executes the find task command"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void findCommand(String line, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String key \u003d Parser.parseFindKey(line);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Task.find(taskList, key);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * printCommand method executes the print deadline/event command"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void printCommand(String line, ArrayList\u003cTask\u003e taskList) throws DukeException, DateTimeParseException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String key \u003d Parser.parseFindKey(line);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Task.printDeadlines(taskList, key);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * listCommand method executes the print taskList command"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void listCommand(ArrayList\u003cTask\u003e taskList) throws DateTimeParseException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\" List\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Deadline.taskList(taskList);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 168
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Deadline class allows the creation of Deadline Tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * Deadline constructor inherits the description, sets the by member and sets the taskType as \"D\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param description the name of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param by is the time of the deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        taskType \u003d \"D\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.date \u003d LocalDate.parse(\"0000-01-01\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * addTask method adds the event into the taskList"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount current number of tasks in the taskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskName name of the Deadline"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskBy date of the Deadline"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int addTask(ArrayList taskList, int taskCount, String taskName, String taskBy) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if(!taskBy.contains(\"by \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            taskList.add(new Deadline(taskName, taskBy));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\" Got it. I\u0027ve added this task:\\n\" + \"  [\" + ((Task)taskList.get(taskCount)).taskType + \"][\"+ ((Task)taskList.get(taskCount)).getStatusIcon() + \"] \" + ((Task)taskList.get(taskCount)).description + \" (\" + ((Task)taskList.get(taskCount)).by + \")\"+ \"\\n\" + \" Now you have \" + (taskCount+1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Storage.WriteToFile(taskList);;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return taskCount;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * taskList method prints the event/deadlines from the taskList"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void taskList(ArrayList taskList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for(int i\u003d0; i\u003ctaskList.size();i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if(((Task)taskList.get(i)).taskType \u003d\u003d \"T\") {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                System.out.println(\" \" + (i + 1) + \".[\" + ((Task)taskList.get(i)).taskType + \"][\" + ((Task)taskList.get(i)).getStatusIcon() + \"] \" + ((Task)taskList.get(i)).description);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                System.out.println(\" \" + (i + 1) + \".[\" + ((Task)taskList.get(i)).taskType + \"][\" + ((Task)taskList.get(i)).getStatusIcon() + \"] \" + ((Task)taskList.get(i)).description + \" (\" + ((Task)taskList.get(i)).by + \") \"  + ((Task)taskList.get(i)).date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 71
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.zip.DataFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Duke class is the main class where inputs taken and sent to other classes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * Main method handles all inputs and sends them to the Parser class to make sense of the inputs"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * then sends the commands and data to the Command class to execute them."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * Tells the Storage class to either create a new save file or access the existing save file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.showIntroduction();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Storage.CreateFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        taskCount \u003d Storage.ReadFile(taskList, taskCount);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        do{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if(line.contains(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                Command.listCommand(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if(line.contains(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    taskCount \u003d Command.TodoCommand(line, taskList, taskCount);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if(line.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    taskCount \u003d Command.deadlineCommand(line, taskList, taskCount);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The deadline by cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Wrong format of date.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if(line.contains(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    taskCount \u003d Command.eventCommand(line, taskList, taskCount);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The event by cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Wrong format of date.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if(line.contains(\"done\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    Command.doneCommand(line, taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (NullPointerException | NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The number cannot be invalid.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The number cannot be out of bounds.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if(line.contains(\"delete\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    taskCount \u003d Command.deleteCommand(line, taskList, taskCount);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (NullPointerException | NumberFormatException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The number cannot be invalid.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The number cannot be out of bounds.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if(line.contains(\"find\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    Command.findCommand(line, taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! No matching tasks exist.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if(line.contains(\"print\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    Command.printCommand(line, taskList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! No tasks occurring on specified date.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }  catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Wrong format of date.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (!line.contains(\"bye\") \u0026 !line.contains(\"todo\") \u0026 !line.contains(\"event\") \u0026 !line.contains(\"deadline\") \u0026 !line.contains(\"list\") \u0026 !line.contains(\"done\") \u0026 !line.contains(\"delete\")){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    Ui.invalidInput();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } while(!line.contains(\"bye\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui.showOutro();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 104,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * DukeException class allows for Duke specific error-handling"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class DukeException extends Throwable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 8
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Event class allows the creation of Event Tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * Event constructor inherits the description, sets the by member and sets the taskType as \"E\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param description the name of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskAt is the time of the event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Event(String description, String taskAt) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.by \u003d taskAt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        taskType \u003d \"E\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.date \u003d LocalDate.parse(\"0000-01-01\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * addTask method adds the event into the taskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount current number of tasks in the taskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskName name of the Event"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskAt date of the Event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int addTask(ArrayList taskList, int taskCount, String taskName, String taskAt) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (!taskAt.contains(\"@ \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            taskList.add(new Event(taskName, taskAt));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\" Got it. I\u0027ve added this task:\\n\" + \"  [\" + ((Task)taskList.get(taskCount)).taskType + \"][\"+ ((Task)taskList.get(taskCount)).getStatusIcon() + \"] \" + ((Task)taskList.get(taskCount)).description + \" (\" + ((Task)taskList.get(taskCount)).by + \")\"  + \"\\n\" + \" Now you have \" + (taskCount+1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Storage.WriteToFile(taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return taskCount;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 51
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Parser class deals with making sense of the user command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseTodo method converts the input into a Todo taskName"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line the input of the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskName"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseTodo(String line) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerPosition \u003d line.indexOf(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskName \u003d line.substring(dividerPosition+1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseTodo method converts the input into a Deadline taskName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line the input of the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskName"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseDeadlineName(String line) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerPosition \u003d line.indexOf(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerBy \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskName \u003d line.substring(dividerPosition + 1, dividerBy - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseTodo method converts the input into a Deadline taskBy"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line the input of the user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskBy"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseDeadlineBy(String line) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerBy \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskBy \u003d line.substring(dividerBy + 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskBy;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseEventName method converts the input into a Event taskName"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line the input of the user"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskName"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseEventName(String line) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerPosition \u003d line.indexOf(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerBy \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskName \u003d line.substring(dividerPosition+1, dividerBy-1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseEventAt method converts the input into a Event taskAt"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line the input of the user"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskAt"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseEventAt(String line) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerBy \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskAt \u003d line.substring(dividerBy+1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskAt;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseDoneNum method converts the input into a desired taskNum to be marked"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line the input of the user"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskNum"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int parseDoneNum(String line) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerPosition \u003d line.indexOf(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int taskNum \u003d Integer.parseInt(line.substring(dividerPosition+1)) - 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseDoneNum method converts the input into a desired taskNum to be deleted"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line the input of the user"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskNum"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int parseDeleteNum(String line) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerPosition \u003d line.indexOf(\" \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int taskNum \u003d Integer.parseInt(line.substring(dividerPosition+1)) - 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseDoneNum method converts the input into a desired keyword to be searched"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param line the input of the user"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return key"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseFindKey(String line) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerPosition \u003d line.indexOf(\" \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String key \u003d line.substring(dividerPosition+1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return key;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseReadDataType method converts the save file data into the task\u0027s type"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param data the task information from the save file"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskNameType"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseReadDataType(String data) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerPosition \u003d data.indexOf(\" \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskNameType \u003d data.substring(dividerPosition+1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskNameType;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseReadDividerPosition2 method converts the save file data into dividerPosition2"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param data the task information from the save file"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return dividerPosition2"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int parseReadDividerPosition2(String data) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerPosition2 \u003d data.indexOf(\" \");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return dividerPosition2;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseReadTodo method converts the save file data into Todo taskName"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskNameType the name and type of the task"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param dividerPosition2 the index where to divide the taskNameType into task name and type"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskName"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseReadTodo(String taskNameType, int dividerPosition2) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskName \u003d taskNameType.substring(dividerPosition2+1);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseReadTodo method converts the save file data into Deadline taskName"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskNameType the name and type of the task"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param dividerPosition2 the index where to divide the taskNameType into task name and type"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskName"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseReadDeadlineName(String taskNameType, int dividerPosition2) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerBy \u003d taskNameType.indexOf(\"/\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskName \u003d taskNameType.substring(dividerPosition2+1, dividerBy - 1);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseReadDeadlineBy method converts the save file data into Deadline taskBy"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskNameType the name and type of the task"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskBy"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseReadDeadlineBy(String taskNameType) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerBy \u003d taskNameType.indexOf(\"/\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskBy \u003d taskNameType.substring(dividerBy + 1);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskBy;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseReadEventName method converts the save file data into Event taskName"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskNameType the name and type of the task"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskName"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseReadEventName(String taskNameType, int dividerPosition2) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerBy \u003d taskNameType.indexOf(\"/\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskName \u003d taskNameType.substring(dividerPosition2+1, dividerBy-1);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * parseReadEventAt method converts the save file data into Event taskBy"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskNameType the name and type of the task"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskBy"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String parseReadEventAt(String taskNameType) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerBy \u003d taskNameType.indexOf(\"/\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskAt \u003d taskNameType.substring(dividerBy+1);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskAt;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 234
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.io.File;  // Import the File class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.io.FileNotFoundException;  // Import this class to handle errors"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.Scanner; // Import the Scanner class to read text files"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.io.FileWriter;   // Import the FileWriter class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.io.IOException;  // Import the IOException class to handle errors"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Storage class deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * ReadFile method accesses the save file and moves the data into the taskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount the current number of tasks in the taskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskCount"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int ReadFile(ArrayList\u003cTask\u003e taskList, int taskCount) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            File myObj \u003d new File(\"D:\\\\Documents\\\\Modules\\\\Sem 03\\\\CS2113\\\\iP\\\\data\\\\duke.txt\"); //D:\\Documents\\Modules\\Sem 03\\CS2113\\iP\\data"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Scanner myReader \u003d new Scanner(myObj);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            taskCount \u003d Storage.readToArray(myReader, taskList, taskCount);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\"_______________An error occurred_______________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * WriteToFile method saves taskList entries into the save file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void WriteToFile(ArrayList taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(\"D:\\\\Documents\\\\Modules\\\\Sem 03\\\\CS2113\\\\iP\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            myWriter.write(Task.taskListToString(taskList));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\"_______________Successfully wrote to the file_______________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\"_______________An error occurred_______________\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * CreateFile method creates a save file for the program to save data into"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void CreateFile() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Files.createDirectories(Paths.get(\"D:\\\\Documents\\\\Modules\\\\Sem 03\\\\CS2113\\\\iP\\\\data\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            File myObj \u003d new File(\"D:\\\\Documents\\\\Modules\\\\Sem 03\\\\CS2113\\\\iP\\\\data\\\\duke.txt\"); //D:\\Documents\\Modules\\Sem 03\\CS2113\\iP\\data"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (myObj.createNewFile()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                System.out.println(\"File created: \" + myObj.getName());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                System.out.println(\"Absolute path: \" + myObj.getAbsolutePath());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                System.out.println(\"File already exists.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * readToArray method moves the data from the save file into the taskList"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param myReader the current line of data read by ReadFile method"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount the current number of tasks in the taskList"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskCount"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int readToArray(Scanner myReader, ArrayList\u003cTask\u003e taskList, int taskCount) throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            String taskNameType \u003d Parser.parseReadDataType(data);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            int dividerPosition2 \u003d Parser.parseReadDividerPosition2(data);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if(taskNameType.contains(\"T \")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                String taskName \u003d Parser.parseReadTodo(taskNameType, dividerPosition2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                taskCount \u003d TaskList.addTask(taskList, taskCount, taskName);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (taskNameType.contains(\"D \")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                String taskName \u003d Parser.parseReadDeadlineName(taskNameType, dividerPosition2);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                String taskBy \u003d Parser.parseReadDeadlineBy(taskNameType);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                taskCount \u003d Deadline.addTask(taskList, taskCount, taskName, taskBy);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    Task.setDate(taskList);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Wrong format of date.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (taskNameType.contains(\"E \")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                String taskName \u003d Parser.parseReadEventName(taskNameType, dividerPosition2);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                String taskAt \u003d Parser.parseReadEventAt(taskNameType);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                taskCount \u003d Event.addTask(taskList, taskCount, taskName, taskAt);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    Task.setDate(taskList);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! Wrong format of date.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if ( data.charAt(0) \u003d\u003d \u00271\u0027 ) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                taskList.get(taskList.size()-1).isDone\u003dtrue;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 130
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Task class is the Parent class of Todo, Event, and Deadline Classes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * Task constructor that establishes description, isDone and taskType members"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * markAsDone method takes in the taskList and desired taskNum and makes the isDone member as true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskNum the index where the task to be marked is located"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void markAsDone(ArrayList\u003cTask\u003e taskList, int taskNum) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        (taskList.get(taskNum)).isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Storage.WriteToFile(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if ((taskList.get(taskNum)).taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\" Nice! I\u0027ve marked this task as done:\\n\" + \"  [\" + (taskList.get(taskNum)).taskType + \"][\" + (taskList.get(taskNum)).getStatusIcon() + \"] \" + (taskList.get(taskNum)).description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else if ((taskList.get(taskNum)).taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\" Nice! I\u0027ve marked this task as done:\\n\" + \"  [\" + (taskList.get(taskNum)).taskType + \"][\" + (taskList.get(taskNum)).getStatusIcon() + \"] \" + (taskList.get(taskNum)).description + \" (\" + (taskList.get(taskNum)).by + \")\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else if ((taskList.get(taskNum)).taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\" Nice! I\u0027ve marked this task as done:\\n\" + \"  [\" + (taskList.get(taskNum)).taskType + \"][\" + (taskList.get(taskNum)).getStatusIcon() + \"] \" + (taskList.get(taskNum)).description + \" (\" + (taskList.get(taskNum)).by + \")\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * taskListToString method takes in all the tasks in the taskList converts them all into a String so that it can be stored in a save file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return taskListString"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String taskListToString(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String taskListString \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if((taskList.get(i)).taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                taskListString \u003d taskListString + ((taskList.get(i)).isDone ? \"1\" : \"0\") + \" \" + (taskList.get(i)).taskType + \" \" + (taskList.get(i)).description + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                taskListString \u003d taskListString + ((taskList.get(i)).isDone ? \"1\" : \"0\") + \" \" + (taskList.get(i)).taskType + \" \" + (taskList.get(i)).description + \" /\" + (taskList.get(i)).by  + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskListString;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * printDeadlines method takes in the taskList and the desired date to be searched to print out all tasks with the same date"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param key the desired date for searching"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void printDeadlines(ArrayList\u003cTask\u003e taskList, String key) throws DukeException, DateTimeParseException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        LocalDate dKey \u003d LocalDate.parse(key);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        boolean hasMatch \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\" Here are the matching dates in your list:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (!(taskList.get(i)).taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if(dKey.equals((taskList.get(i)).date)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    hasMatch \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\" \" + (count) + \".[\" + (taskList.get(i)).taskType + \"][\" + (taskList.get(i)).getStatusIcon() + \"] \" + (taskList.get(i)).description + \" (\" + (taskList.get(i)).by + \") \"  + (taskList.get(i)).date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (!hasMatch) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * getStatusIcon method checks the status of the isDone and return corresponding tick or X symbols"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @return tick or X symbols"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * find method takes in the taskList and the desired keyword to be searched to print out all tasks with the same name"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param key the desired keyword for searching"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void find(ArrayList\u003cTask\u003e taskList, String key) throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        boolean hasMatch \u003d false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0 ; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if ((taskList.get(i)).description.contains(key)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                hasMatch \u003d true;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if((taskList.get(i)).taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\" \" + count +\".[\" + (taskList.get(i)).taskType + \"][\" + (taskList.get(i)).getStatusIcon() + \"] \" + (taskList.get(i)).description);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } else if((taskList.get(i)).taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\" \" + count +\".[\" + (taskList.get(i)).taskType + \"][\"+ (taskList.get(i)).getStatusIcon() + \"] \" + (taskList.get(i)).description + \" (\" + (taskList.get(i)).by + \")\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } else if((taskList.get(i)).taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(\" \" + count +\".[\" + (taskList.get(i)).taskType + \"][\"+ (taskList.get(i)).getStatusIcon() + \"] \" + (taskList.get(i)).description + \" (\" + (taskList.get(i)).by + \")\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (!hasMatch) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * setDate method converts the by string member of the task and turns it into a LocalDate member of the task"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void setDate(ArrayList\u003cTask\u003e taskList) throws DateTimeParseException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String byLine \u003d (taskList.get(taskList.size()-1)).by;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int dividerPosition \u003d byLine.indexOf(\" \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String byLineNew \u003d byLine.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if(byLineNew.contains(\" \")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            int dividerPositionNew \u003d byLineNew.indexOf(\" \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            String byLineDate \u003d byLineNew.substring(0,dividerPositionNew);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            (taskList.get(taskList.size()-1)).date \u003d LocalDate.parse(byLineDate);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            (taskList.get(taskList.size()-1)).date \u003d LocalDate.parse(byLineNew);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 165
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * TaskList class contains the task list operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * delete method locates the task to be deleted from the taskList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount current number of tasks in the taskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskNum the index where the task is located in the taskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * returns taskCount"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int delete(ArrayList\u003cTask\u003e taskList, int taskCount, int taskNum) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if((taskList.get(taskNum)).taskType \u003d\u003d \"T\") {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\" Noted. I\u0027ve removed this task:\\n\" + \"  [\" + (taskList.get(taskNum)).taskType + \"][\"+ (taskList.get(taskNum)).getStatusIcon() + \"] \" + (taskList.get(taskNum)).description + \"\\n\" + \" Now you have \" + (taskCount - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else if ((taskList.get(taskNum)).taskType \u003d\u003d \"D\") {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\" Noted. I\u0027ve removed this task:\\n\" + \"  [\" + (taskList.get(taskNum)).taskType + \"][\" + (taskList.get(taskNum)).getStatusIcon() + \"] \" + (taskList.get(taskNum)).description + \" (\" + (taskList.get(taskNum)).by + \")\" + \"\\n\" + \" Now you have \" + (taskList.size()-1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else if ((taskList.get(taskNum)).taskType \u003d\u003d \"E\") {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\" Noted. I\u0027ve removed this task:\\n\" + \"  [\" + (taskList.get(taskNum)).taskType + \"][\" + (taskList.get(taskNum)).getStatusIcon() + \"] \" + (taskList.get(taskNum)).description + \" (\" + (taskList.get(taskNum)).by + \")\" + \"\\n\" + \" Now you have \" + (taskList.size()-1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        taskList.remove(taskNum);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Storage.WriteToFile(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        taskCount--;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * addTask method adds the input task into the taskList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskList the ArrayList that contains all the existing tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskCount current number of tasks in the taskList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param taskName name of the task to be added"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * returns taskCount"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static int addTask(ArrayList taskList, int taskCount, String taskName) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (taskName.contains(\"todo\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            taskList.add(new Todo(taskName));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            System.out.println(\" Got it. I\u0027ve added this task:\\n\" + \"  [\" + ((Task)taskList.get(taskCount)).taskType + \"][\" + ((Task)taskList.get(taskCount)).getStatusIcon() + \"] \" + ((Task)taskList.get(taskCount)).description + \"\\n\" + \" Now you have \" + (taskCount + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Storage.WriteToFile(taskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return taskCount;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 64
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Todo class allows the creation of Todo Tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * Todo Constructor inherits the description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 17
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Ui class deals with interactions with the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * showIntroduction method contains and prints out all the introduction to the Duke program when the program"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * is started"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void showIntroduction() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\" Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * showOutro method contains and prints out all the outro to the Duke program when program is exited"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void showOutro() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * invalidInput method handles the error when Duke cannot make sense of the input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void invalidInput() throws DukeException  {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        throw new DukeException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * printDivider method prints out the divider to make the UI easier to read"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static void printDivider() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 51
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "  [D][✘] return book (by June 6th)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "event project meeting /@ Aug 6th 2-4pm"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "  [E][✘] project meeting (@ Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "  [T][✘] join sports club"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " List"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 1.[T][✘] read book"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 2.[D][✘] return book (by June 6th)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 3.[E][✘] project meeting (@ Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 4.[T][✘] join sports club"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 5.[T][✘] borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "   [✓] return book"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " List"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 1.[T][✘] read book"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 2.[D][✓] return book (by June 6th)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 3.[E][✘] project meeting (@ Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 4.[T][✘] join sports club"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " 5.[T][✘] borrow book"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "bye"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Process finished with exit code 0"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 69
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\Todo.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 1,
      "-": 20
    }
  }
]
