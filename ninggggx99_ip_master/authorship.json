[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.EventsCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        Storage storage \u003d new Storage(System.getProperty(\"user.dir\")+\"\\\\data\\\\output.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                Command commandType \u003d runCommand(command, tasks,storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                commandType.run(command, tasks, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                isExit \u003d commandType.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            if (isExit \u003d\u003d false) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * check which duke.command to run"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return Command function"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws InvalidCommandException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private static Command runCommand(String command, ArrayList\u003cTask\u003e tasks, Storage storage) throws InvalidCommandException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        switch (commandSplit[0]) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new ListCommand(command, tasks, storage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new ToDoCommand(command, tasks,storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new DeadlineCommand(command, tasks, storage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new EventsCommand(command, tasks, storage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new DoneCommand(command, tasks, storage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new DeleteCommand(command,tasks, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                throw new InvalidCommandException(\"No such command. Please key in again\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Welcome Message"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private static void welcomeMessage() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 101,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to end duke.Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for bye"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print goodbye string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(String command, ArrayList\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 28
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Abstract class for commands"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    abstract public void run(String command, ArrayList\u003cTask\u003e tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Signal exit program"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return true if user give exit duke.command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDateAndDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to add deadline duke.task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Costructor for deadline duke.task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public DeadlineCommand(String command, ArrayList\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Add a duke.task with deadline for user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDescriptionException"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDateException"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDateAndDescriptionException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(String command, ArrayList\u003cTask\u003e tasks, Storage storage) throws MissingDescriptionException, MissingDateException, MissingDateAndDescriptionException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDateAndDescriptionException(\"The date and description of an event cannot be empty\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String descDate[] \u003d commandSplit[1].split(\" /\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (descDate[0].isEmpty() || descDate[0].contains(\"by\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDescriptionException(\"The description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } else if (descDate.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDateException(\"The date of an event cannot be empty\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String deadlineDate[] \u003d descDate[1].split(\" \", 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.add(new Deadline(descDate[0], deadlineDate[1]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this duke.task: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"    \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 67
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to delete tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for delete duke.task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public DeleteCommand(String command, ArrayList\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print delete task done/error"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(String command, ArrayList\u003cTask\u003e tasks, Storage storage) throws InvalidTaskIndexException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        int index \u003d Integer.parseInt(command.replaceAll(\"\\\\D+\", \"\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new InvalidTaskIndexException(\"The index is not found!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"index: \"+ index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(tasks.get(index - 1).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.remove(index-1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Now you have \"+ tasks.size()+\" in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 48
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.TaskDoneException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to mark duke.task as done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for mark duke.task as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public DoneCommand(String command, ArrayList\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * User marked the duke.task as done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws InvalidTaskIndexException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws TaskDoneException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(String command, ArrayList\u003cTask\u003e tasks, Storage storage) throws InvalidTaskIndexException, TaskDoneException, MissingIndexException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (commandSplit.length \u003d\u003d 1 || commandSplit[1] \u003d\u003d \" \"){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingIndexException(\"No index given\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        int index \u003d Integer.parseInt(command.replaceAll(\"\\\\D+\", \"\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new InvalidTaskIndexException(\"The index is not found!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (tasks.get(index - 1).getStatusIcon() \u003d\u003d \"Y\") {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new TaskDoneException(\"The duke.task is already marked as done.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        (tasks.get(index - 1)).markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this duke.task as done: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(tasks.get(index - 1).toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 62
    }
  },
  {
    "path": "src/main/java/duke/command/EventsCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDateAndDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to add event duke.task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class EventsCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for events"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public EventsCommand(String command, ArrayList\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Add an event for user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDescriptionException"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDateException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDateAndDescriptionException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(String command, ArrayList\u003cTask\u003e tasks, Storage storage) throws MissingDescriptionException, MissingDateException, MissingDateAndDescriptionException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDateAndDescriptionException(\"The date and description of an event cannot be empty\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String descDate[] \u003d commandSplit[1].split(\" /\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (descDate[0].isEmpty() || descDate[0].contains(\"at\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDescriptionException(\"The description of an event cannot be empty\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } else if (descDate.length \u003c 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDateException(\"The date of an event cannot be empty\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String eventsDate[] \u003d descDate[1].split(\" \", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.add(new Events(descDate[0], eventsDate[1]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this duke.task: \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"    \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 69
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to display duke.task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for ListCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public ListCommand(String command, ArrayList\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print the list of tasks the user have added"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws EmptyListException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(String command, ArrayList\u003cTask\u003e tasks, Storage storage) throws EmptyListException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new EmptyListException(\"There is no tasks at the moment!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                System.out.println((i + 1) + \". \" + \" \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to add todo duke.task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for todo duke.task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public ToDoCommand(String command, ArrayList\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Add a todo duke.task for user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDescriptionException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(String command, ArrayList\u003cTask\u003e tasks, Storage storage) throws MissingDescriptionException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (commandSplit.length \u003c 2 || commandSplit[1].isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDescriptionException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            tasks.add(new Todo(commandSplit[1]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this duke.task: \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\"    [T][\" + (tasks).get(tasks.size() - 1).getStatusIcon() + \"] \" + commandSplit[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 55
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Parent class of exceptions thrown in duke.Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public EmptyListException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception thrown when duke.command invalid"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public InvalidCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception when duke.task index is not in the list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class InvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public InvalidTaskIndexException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDateAndDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception when Date and Description of duke.task is not given"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class MissingDateAndDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public MissingDateAndDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception that date is missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class MissingDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public MissingDateException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception thrown when description missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public MissingDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception when duke.task index is not in the list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class MissingIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public MissingIndexException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception that duke.task is already marked done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class TaskDoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public TaskDoneException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * To load and store existing/new tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * constructor for Storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * load existing task in output file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            File output \u003d new File(filepath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            output.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            Scanner read \u003d new Scanner(output);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            while (read.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                String task \u003d read.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                String description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                String descWithDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                String date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                boolean done;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                if (task.charAt(4) \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    done \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    done \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                char taskType \u003d task.charAt(1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    case \u0027T\u0027:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        description \u003d (task.split(\" \", 2))[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    case \u0027E\u0027:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        descWithDate \u003d (task.split(\" \", 2))[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        description \u003d (descWithDate.split(\"\\\\(at: \"))[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        date \u003d (task.split(\"at: \"))[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        date \u003d date.substring(0, date.length() - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        tasks.add(new Events(description.strip(), date));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    case \u0027D\u0027:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        descWithDate \u003d (task.split(\" \", 2))[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        description \u003d (descWithDate.split(\"\\\\(by: \"))[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        date \u003d (task.split(\"by: \"))[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        date \u003d date.substring(0, date.length() - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        tasks.add(new Deadline(description.strip(), date));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                if (done \u003d\u003d true){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    tasks.get(tasks.size()-1).markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\"No such file\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * save all the tasks"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                fileWriter.write(tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 109
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Class for deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Get deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return by (deadline)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param by (deadline)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print deadline duke.task String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return print string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"]\" + \" \" + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Class for events"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String dateToFrom;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for Events"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param dateToFrom"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Events(String description, String dateToFrom) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.dateToFrom \u003d dateToFrom;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Get the range of time for the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return event date time range"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String getDateToFrom() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return this.dateToFrom;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the range of time for the event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return event date time range"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void setDateToFrom(String dateToFrom) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.dateToFrom \u003d dateToFrom;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print deadline duke.task String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return print string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"]\" + \" \" + super.getDescription() + \" (at: \" + dateToFrom + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Class for duke.task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for duke.task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Retrieve duke.task\u0027s status icon"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return status icon"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Retrieve duke.task\u0027s description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Setting the duke.task\u0027s description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set isDone to true if duke.task is done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Class for Todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for todo duke.task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print todo duke.task String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return print string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"]\" + \" \" + super.getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "todo buy groceries"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "event lunch /at 20/10/2020 1200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "deadline homework /by 29/10/2020 2359"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "javac -cp ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "java -classpath ..\\bin duke\\Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 3,
      "-": 19
    }
  }
]
