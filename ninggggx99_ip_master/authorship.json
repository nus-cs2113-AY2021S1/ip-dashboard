[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "# Duke "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Duke is an easy-to-use Command Line Interface (CLI) program that acts like a planner for the users."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "## What is Duke?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Duke is a Command Line Interface (CLI) planner that allows user to do the functions mention below:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Add task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. List tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Delete task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Mark task as done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Find matching task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Tasks have 3 main category, namely Todo, Event and Deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Duke commands are simple. You can use Duke on any computers if JDK 11 is installed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "## Syntax Guide"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Here\u0027s an overview of the syntax of each function"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### Add Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Todo does not require any date input\u003cbr /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Event and Deadline require a date input in the format of DD/MM/YYYY HHMM"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "todo TASK_NAME"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "event TASK_NAME /at TASK_DATE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "deadline TASK_NAME /by TASK_DATE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### List Tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "List all tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### Delete Tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Delete task of specified index"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "delete TASK_INDEX"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### Mark Task as Done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Mark task as done for specified index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "done TASK_INDEX"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### Find Task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Find any task with matching keyword"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "find KEYWORD"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 44,
      "-": 25
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "# Duke "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Duke is an easy-to-use Command Line Interface (CLI) program that acts like a planner for the users."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "## What is Duke?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Duke is a Command Line Interface (CLI) planner that allows user to do the functions mention below:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Add task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. List tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Delete task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Mark task as done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Find matching task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Tasks have 3 main category, namely Todo, Event and Deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Duke commands are simple. You can use Duke on any computers if JDK 11 is installed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "   "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "## Syntax Guide"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Here\u0027s an overview of the syntax of each function"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### Add Task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Todo does not require any date input\u003cbr /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Event and Deadline require a date input in the format of DD/MM/YYYY HHMM"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "todo TASK_NAME"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "event TASK_NAME /at TASK_DATE"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "deadline TASK_NAME /by TASK_DATE"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Example: `todo sleep` , `event CS2113T meeeting /at 01/01/2020 1122`, `deadline CS2113T quiz /by 01/01/2020 1122`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### List Tasks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "List all tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### Delete Tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Delete task of specified index"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "delete TASK_INDEX"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Example: `delete 2`  -- delete 2nd task from list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### Mark Task as Done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Mark task as done for specified index"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "done TASK_INDEX"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Example: `done 2`  -- mark task as done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### Find Task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Find any task with matching keyword"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "find KEYWORD"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Example: `find CS2113T` -- show any task containing \"CS2113T\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "### Exit Duke"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Exit the program"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "bye "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "## Summary of Commands"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Feature|Command format"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "---|---"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Add Todo task| `todo TASK_NAME`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Add Deadline task| `deadline TASK_NAME /by TASK_DATE`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Add Event task| `event TASK_NAME /at TASK_DATE`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "List all tasks| `list`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Mark a task as done| `done TASK_INDEX`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Delete a task| `delete TASK_INDEX`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Find tasks| `find KEYWORD`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "Exit program| `bye`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 83,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                c.run(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                ui.showError(e.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 47,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to end duke.Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for bye"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print goodbye string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Abstract class for commands"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    abstract public void run(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Signal exit program"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return true if user give exit duke.command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDateAndDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to add deadline duke.task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Costructor for deadline duke.task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public DeadlineCommand(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Add a duke.task with deadline for user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDescriptionException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDateException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDateAndDescriptionException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws MissingDescriptionException, MissingDateException, MissingDateAndDescriptionException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDateAndDescriptionException(\"The date and description of an event cannot be empty\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String descDate[] \u003d commandSplit[1].split(\" /\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (descDate[0].isEmpty() || descDate[0].contains(\"by\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDescriptionException(\"The description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } else if (descDate.length \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDateException(\"The date of an event cannot be empty\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String deadlineDate[] \u003d descDate[1].split(\" \", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.addDeadline(descDate[0], deadlineDate[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 56
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to delete tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for delete duke.task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print delete task done/error"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskIndexException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        int index \u003d Integer.parseInt(command.replaceAll(\"\\\\D+\", \"\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.TaskDoneException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to mark duke.task as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for mark duke.task as done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * User marked the duke.task as done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws InvalidTaskIndexException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws TaskDoneException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskIndexException, TaskDoneException, MissingIndexException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (commandSplit.length \u003d\u003d 1 || commandSplit[1] \u003d\u003d \" \"){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingIndexException(\"No index given\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        int index \u003d Integer.parseInt(command.replaceAll(\"\\\\D+\", \"\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.setTaskDone(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 43
    }
  },
  {
    "path": "src/main/java/duke/command/EventsCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDateAndDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to add event duke.task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class EventsCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for events"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public EventsCommand(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Add an event for user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDescriptionException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDateException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDateAndDescriptionException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws MissingDescriptionException, MissingDateException, MissingDateAndDescriptionException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDateAndDescriptionException(\"The date and description of an event cannot be empty\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String descDate[] \u003d commandSplit[1].split(\" /\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (descDate[0].isEmpty() || descDate[0].contains(\"at\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDescriptionException(\"The description of an event cannot be empty\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } else if (descDate.length \u003c 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDateException(\"The date of an event cannot be empty\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String eventsDate[] \u003d descDate[1].split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.addEvent(descDate[0], eventsDate[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 57
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingFindDescException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Costructor for finding duke.task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws MissingFindDescException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingFindDescException(\"Please enter a keyword\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.find(commandSplit[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to display duke.task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for ListCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print the list of tasks the user have added"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws EmptyListException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws EmptyListException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.printTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 32
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Command to add todo duke.task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for todo duke.task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public ToDoCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Add a todo duke.task for user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws MissingDescriptionException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws MissingDescriptionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (commandSplit.length \u003c 2 || commandSplit[1].isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new MissingDescriptionException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            tasks.addTodo(commandSplit[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 42
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Parent class of exceptions thrown in duke.Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public EmptyListException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception thrown when duke.command invalid"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public InvalidCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception when duke.task index is not in the list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class InvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public InvalidTaskIndexException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDateAndDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception when Date and Description of duke.task is not given"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class MissingDateAndDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public MissingDateAndDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception that date is missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class MissingDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public MissingDateException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception thrown when description missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public MissingDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingFindDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception thrown when keyword missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class MissingFindDescException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public MissingFindDescException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception when duke.task index is not in the list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class MissingIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public MissingIndexException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Exception that duke.task is already marked done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class TaskDoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the error message of duke.exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public TaskDoneException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Format error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formatted message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"OOPS!!! \" + errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 27
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.EventsCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Parse commands to the functions"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Contstructor for parser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Parse the commands"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws InvalidCommandException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public static Command parse(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String commandSplit[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        switch (commandSplit[0]) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new ToDoCommand(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new DeadlineCommand(command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new EventsCommand(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new DoneCommand(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new DeleteCommand(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                return new FindCommand(command);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                throw new InvalidCommandException(\"No such command. Please key in again\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 59
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * To load and store existing/new tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * constructor for Storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * load existing task in output file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            String names[] \u003d filepath.split(\"\\\\/\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            File directory \u003d new File(names[0]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            if (directory.exists()){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                File output \u003d new File(filepath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                output.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                Scanner read \u003d new Scanner(output);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                while (read.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    String task \u003d read.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    String description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    String descWithDate;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    String date;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    boolean done;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    if (task.charAt(4) \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        done \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        done \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    char taskType \u003d task.charAt(1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        case \u0027T\u0027:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            description \u003d (task.split(\" \", 2))[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        case \u0027E\u0027:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            descWithDate \u003d (task.split(\" \", 2))[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            description \u003d (descWithDate.split(\"\\\\(at: \"))[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            date \u003d (task.split(\"at: \"))[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            date \u003d date.substring(0, date.length() - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            tasks.add(new Events(description.strip(), date));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        case \u0027D\u0027:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            descWithDate \u003d (task.split(\" \", 2))[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            description \u003d (descWithDate.split(\"\\\\(by: \"))[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            date \u003d (task.split(\"by: \"))[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            date \u003d date.substring(0, date.length() - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            tasks.add(new Deadline(description.strip(), date));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    if (done \u003d\u003d true){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                        tasks.get(tasks.size()-1).markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                System.out.println(\"Making directory\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                File output \u003d new File(filepath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                output.createNewFile();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\"No such file\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * save all the tasks"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            File output \u003d new File(filepath);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            output.createNewFile();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            for(Task task : tasks.getTaskList()){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                fileWriter.write(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 125
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Class for deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Get deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return by (deadline)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param by (deadline)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print deadline duke.task String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return print string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"]\" + \" \" + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Class for events"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String dateToFrom;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for Events"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param dateToFrom"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Events(String description, String dateToFrom) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.dateToFrom \u003d dateToFrom;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Get the range of time for the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return event date time range"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String getDateToFrom() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return this.dateToFrom;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set the range of time for the event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return event date time range"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void setDateToFrom(String dateToFrom) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.dateToFrom \u003d dateToFrom;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print deadline duke.task String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return print string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"]\" + \" \" + super.getDescription() + \" (at: \" + dateToFrom + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Class for duke.task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for duke.task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Retrieve duke.task\u0027s status icon"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return status icon"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Retrieve duke.task\u0027s description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Setting the duke.task\u0027s description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set isDone to true if duke.task is done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " * Class for Todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for todo duke.task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print todo duke.task String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return print string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"]\" + \" \" + super.getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 25
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.exception.TaskDoneException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Default constructor"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void printTask(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print the list of tasks the user have added"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws EmptyListException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void printTaskList() throws EmptyListException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new EmptyListException(\"There is no tasks at the moment!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                System.out.println((i + 1) + \". \" + \" \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Set task as done"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws InvalidTaskIndexException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws TaskDoneException"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void setTaskDone(int index) throws InvalidTaskIndexException, TaskDoneException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new InvalidTaskIndexException(\"The index is not found!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            if (task.getStatusIcon() \u003d\u003d \"Y\") {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                throw new TaskDoneException(\"The duke.task is already marked as done.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this duke.task as done: \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(tasks.get(index - 1).toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Delete task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @throws InvalidTaskIndexException"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void deleteTask(int index) throws InvalidTaskIndexException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            throw new InvalidTaskIndexException(\"The index is not found!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Add todo"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void addTodo(String description) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this duke.task: \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"    \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Add deadline"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param deadlineDate"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void addDeadline(String description, String deadlineDate) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String date \u003d convertingDate(deadlineDate);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.add(new Deadline(description, date));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this duke.task: \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"    \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Add events"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param eventsDate"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void addEvent(String description, String eventsDate) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String date \u003d convertingDate(eventsDate);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        tasks.add(new Events(description, date));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this duke.task: \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"    \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Find matching task using keyword"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void find(String keyword) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            String desc \u003d tasks.get(i).getDescription();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            if (desc.contains(keyword)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                matchingTask.add(tasks.get(i));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        for (int i \u003d 0; i \u003c matchingTask.size(); i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "            System.out.println(i + 1 + \". \" + matchingTask.get(i).toString());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Converting the date format"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @return formattedDate"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String convertingDate(String date) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String dateSplit[] \u003d date.split(\" \");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String formatDate \u003d dateSplit[0].replace(\u0027/\u0027, \u0027-\u0027);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        LocalDate dateFormatted \u003d LocalDate.parse(formatDate, df);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return dateFormatted.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 187
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    Scanner sc ;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Constructor for Ui"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Welcome Message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print goodbye string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void byeMessage(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Get user input"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * Print error message"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     * @param errormsg"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void showError(String errormsg){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(errormsg);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void showLoadingError (){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"File does not exist!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 63
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "todo buy groceries"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "event lunch /at 20/10/2020 1200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "deadline homework /by 29/10/2020 2359"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "javac -cp ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ninggggx99"
        },
        "content": "java -classpath ..\\bin duke\\Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ninggggx99": 3,
      "-": 19
    }
  }
]
