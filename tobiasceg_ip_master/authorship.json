[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "[D][✘] bro (by: Dec 02 1998 1800)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "[E][✘] broo (at: Dec 02 1999)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "[E][✘] broo (at: Dec 02 1999)"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 3
    }
  },
  {
    "path": "src/main/java/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.EmptyDeadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.EmptyEvent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.EmptyToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.UnknownCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static int execute(String inputTask, ArrayList\u003cTask\u003e list) throws EmptyDeadline, EmptyEvent, EmptyToDo, UnknownCommand, DateTimeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        int taskFlag;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        final int TODO_REMOVAL \u003d 5;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        final int DEADLINE_REMOVAL \u003d 9;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        final int EVENT_REMOVAL \u003d 6;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String dueDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        DateTimeFormatter dateTimeEventFormatter \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        DateTimeFormatter dateTimeDeadlineFormatter \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        if (inputTask.contains(\"todo\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            taskFlag \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            taskName \u003d inputTask.substring(TODO_REMOVAL);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            Parser.emptyChecker(taskName, taskFlag);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            Todo newTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            TaskList.addedList(list, newTask, 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        } else if (inputTask.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            taskFlag \u003d 2;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            taskName \u003d inputTask.substring(DEADLINE_REMOVAL, inputTask.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            Parser.emptyChecker(taskName, taskFlag);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            dueDate \u003d inputTask.substring(inputTask.indexOf(\"/by\") + 4).stripLeading().stripTrailing();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            LocalDateTime deadlineDate \u003d LocalDateTime.parse(dueDate,dateTimeDeadlineFormatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            Deadline newTask \u003d new Deadline(taskName, deadlineDate);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            TaskList.addedList(list, newTask, 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        } else if (inputTask.contains(\"event\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            taskFlag \u003d 3;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            taskName \u003d inputTask.substring(EVENT_REMOVAL, inputTask.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            Parser.emptyChecker(taskName, taskFlag);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            dueDate \u003d inputTask.substring(inputTask.indexOf(\"/at\") + 4).stripLeading().stripTrailing();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            LocalDate eventDate \u003d LocalDate.parse(dueDate,dateTimeEventFormatter);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            Event newTask \u003d new Event(taskName, eventDate);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            TaskList.addedList(list, newTask, 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            throw new UnknownCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return taskFlag;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 64
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public abstract void execute();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printLine(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 8
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    static int DELETE_REMOVAL \u003d 7;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void execute(String inputTask, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String deleteIndex \u003d inputTask.substring(DELETE_REMOVAL);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        TaskList.printDelete(list.get((Integer.parseInt(deleteIndex)-1)), list.size()-1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        list.remove((Integer.parseInt(deleteIndex)-1));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 16
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class DoneCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    static int DONE_REMOVAL \u003d 5;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void execute(String inputTask, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String doneIndex \u003d inputTask.substring(DONE_REMOVAL);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        list.get(Integer.parseInt(doneIndex)-1).markAsDone(1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 14
    }
  },
  {
    "path": "src/main/java/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    static final int FIND_REMOVAL \u003d 5;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void execute(String inputTask,ArrayList\u003cTask\u003e list){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String searchWord \u003d inputTask.substring(FIND_REMOVAL);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        for (Task i:list){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            if (i.toString().contains(searchWord)){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                searchResults.add(i);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        TaskList.printSearchList(searchResults);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import Command.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import Command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import Command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import Command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.EmptyDeadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.EmptyEvent;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.EmptyToDo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.UnknownCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        Ui.introMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String reply;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String dukeHome \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        Path dukeLocation \u003d Paths.get(dukeHome, \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        File dukeFile \u003d new File(String.valueOf(dukeLocation));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        // Array of the Task class objects"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        int taskFlag \u003d 0; // Flag to see which command triggers the exception StringIndexOut...."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        Storage.loadStorage(dukeFile, dukeLocation, list);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            reply \u003d scan.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                if (reply.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Ui.outroMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (reply.equals(\"list\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    TaskList.printList(list);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (reply.contains(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    DoneCommand.execute(reply,list);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (reply.contains(\"delete\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    DeleteCommand.execute(reply, list);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }else if (reply.contains(\"find\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    FindCommand.execute(reply,list);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskFlag \u003d AddCommand.execute(reply,list);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Storage.storageWriteToTextFile(dukeLocation,list);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( UnknownCommand e) { // don\u0027t understand the command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Ui.unknownMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( EmptyToDo e) { // spacing"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Ui.emptyToDoMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( EmptyEvent e) { // spacing"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Ui.emptyEventMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( EmptyDeadline e) { // spacing"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Ui.emptyDeadlineMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( StringIndexOutOfBoundsException e ) { // no spacing"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                if (taskFlag \u003d\u003d 1){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Ui.emptyToDoMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }else if (taskFlag \u003d\u003d 2){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Ui.emptyDeadlineMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }else if (taskFlag \u003d\u003d 3){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Ui.emptyEventMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Ui.printMissingFileMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch (DateTimeException e){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Ui.incorrectDateFormat();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 81,
      "-": 3
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 4
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class EmptyDeadline extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 4
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class EmptyEvent extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 4
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class EmptyToDo extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 4
    }
  },
  {
    "path": "src/main/java/exceptions/FileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class FileNotFoundException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 4
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class UnknownCommand extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 4
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.EmptyDeadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.EmptyEvent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import exceptions.EmptyToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void emptyChecker(String taskName,int taskFlag) throws EmptyToDo, EmptyDeadline, EmptyEvent {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        if (taskName.equals(\"\") \u0026\u0026 taskFlag \u003d\u003d 1){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            throw new EmptyToDo();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }else if ( taskName.equals(\"\") \u0026\u0026 taskFlag \u003d\u003d 2){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            throw new EmptyDeadline();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        } else if ( taskName.equals(\"\") \u0026\u0026 taskFlag \u003d\u003d 3 ){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            throw new EmptyEvent();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 18
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    private static final int STATUS_REMOVAL \u003d 7;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    private static DateTimeFormatter dateTimeEventFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    private static DateTimeFormatter dateTimeDeadlineFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void loadStorage(File dukeFile, Path dukeLocation, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            Scanner myReader \u003d new Scanner(dukeFile);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                LocalDate dueDateEvent;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                LocalDateTime dueDateDeadline;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                String taskName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                if (data.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskName \u003d data.substring(STATUS_REMOVAL);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Todo newTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    TaskList.addedList(list,  newTask, 0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    if (data.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        newTask.markAsDone(0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    final String DUE_DATE \u003d data.substring(data.indexOf(\":\") + 2, data.indexOf(\")\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    if (data.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        taskName \u003d data.substring(STATUS_REMOVAL, data.indexOf(\"(\") - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        dueDateEvent \u003d LocalDate.parse(DUE_DATE,dateTimeEventFormatter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        Event newTask \u003d new Event(taskName, dueDateEvent);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        TaskList.addedList(list,  newTask, 0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        if (data.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            newTask.markAsDone(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    } else if (data.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        taskName \u003d data.substring(STATUS_REMOVAL, data.indexOf(\"(\") - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        dueDateDeadline \u003d LocalDateTime.parse(DUE_DATE,dateTimeDeadlineFormatter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        Deadline newTask \u003d new Deadline(taskName, dueDateDeadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        TaskList.addedList(list,  newTask, 0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        if (data.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            newTask.markAsDone(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Path path \u003d Paths.get(String.valueOf(dukeLocation)); //if file is missing create a new file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Files.createDirectory(path.getParent());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch (IOException i) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                System.out.println(\"Error creating file\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void storageWriteToTextFile(Path dukeLocation,ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dukeLocation.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        for (Task i : list) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            fw.write(i.toString() + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 84
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    final private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    @Override //calls Task\u0027s toString"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 21
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    final private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    @Override // calls Task\u0027s toString"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 20
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String checkStatus() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String toString(){ //returning the task only with status box"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return \"[\" + this.checkStatus() + \"] \" + this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public void markAsDone(int rebootFlag){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        if (!isDone){   //checking if isDone is false?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            if ( rebootFlag \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                System.out.println(\"  [\" + checkStatus() + \"] \" + description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            System.out.println(\" You have already finished the task!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 42
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        for (Task i : list){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            System.out.println( (list.indexOf(i)+1) + \".\" + i.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void addedList(ArrayList\u003cTask\u003e list, Task newTask,int rebootFlag) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        if(rebootFlag \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            added(newTask, list.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void added(Task addedTask,int listCounter){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                addedTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \"Now you have \" + listCounter + \" tasks in the list\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printDelete(Task deletedTask,int listCounter) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(deletedTask.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"Now you have \"+ listCounter +\" task in this list\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printLine(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printSearchList(ArrayList\u003cTask\u003e searchResults) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        for (Task j: searchResults){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            System.out.println((searchResults.indexOf(j)+1)+\".\"+j);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 53
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    @Override //calls Task\u0027s toString"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 13
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class Ui{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void outroMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void introMessage(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Duke the list bot\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \" Please list down your plans for today...\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \" type \\\"list\\\" to see the current list!\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \" type \\\"bye\\\" after you are done!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printLine(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printMissingFileMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"The File is missing\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void emptyToDoMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void emptyEventMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void emptyDeadlineMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void unknownMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void incorrectDateFormat() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"Incorrect Date or DateTime input detected!\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \"Please follow the format: d-MM-yyyy or d-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 62
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 3,
      "-": 19
    }
  }
]
