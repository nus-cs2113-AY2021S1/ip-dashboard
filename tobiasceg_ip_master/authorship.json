[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    @Override //calls Task\u0027s toString"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import javax.sound.midi.SysexMessage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        introMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String reply;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String dukeHome \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        Path dukeLocation \u003d Paths.get(dukeHome, \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        File dukeFile \u003d new File(String.valueOf(dukeLocation));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        // Array of the Task class objects"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        ArrayList\u003cString\u003e listText \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        int listCounter \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        int taskFlag \u003d 0; // Flag to see which command triggers the exception StringIndexOut...."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        String dueDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        int TODO_REMOVAL \u003d 5;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        int DEADLINE_REMOVAL \u003d 9;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        int EVENT_REMOVAL \u003d 6;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        int STATUS_REMOVAL \u003d 7;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            Scanner myReader \u003d new Scanner(dukeFile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                if (data.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskName \u003d data.substring(STATUS_REMOVAL);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Todo newTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    listCounter \u003d addedList(list, listCounter, newTask, 0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    if (data.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        newTask.markAsDone(0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (data.contains(\"[E]\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskName \u003d data.substring(STATUS_REMOVAL, data.indexOf(\"(\") - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    dueDate \u003d data.substring(data.indexOf(\":\") + 2,data.indexOf(\")\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Event newTask \u003d new Event(taskName, dueDate);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    listCounter \u003d addedList(list, listCounter, newTask,0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    if (data.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        newTask.markAsDone(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (data.contains(\"[D]\")){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskName \u003d data.substring(STATUS_REMOVAL, data.indexOf(\"(\") - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    dueDate \u003d data.substring(data.indexOf(\":\") + 2,data.indexOf(\")\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Deadline newTask \u003d new Deadline(taskName, dueDate);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    listCounter \u003d addedList(list, listCounter, newTask,0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    if (data.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        newTask.markAsDone(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Path path \u003d Paths.get(String.valueOf(dukeLocation)); //if file is missing create a new file"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                Files.createDirectory(path.getParent());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch (IOException i){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                System.out.println(\"Error creating file\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            reply \u003d scan.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                if (reply.equals(\"bye\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    outroMessage();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (reply.equals(\"list\")){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    printList(list);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (reply.contains(\"done\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    for (int j \u003d 1; j \u003c\u003d listCounter; j++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        if (reply.contains(Integer.toString(j))) { //finding out the task that is chosen"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            list.get(j - 1).markAsDone(1); // minus 1 coz the array of Task is 1 digit ahead , rebootFlag \u003d 1 means reboot done alr"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                             //scanningTextFile(j,dukeLocation);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            listText.set(j-1, String.valueOf(list.get(j-1)));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (reply.contains(\"delete\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    for (int j \u003d 1; j \u003c\u003d listCounter; j++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        if (reply.contains(Integer.toString(j))) { //finding out the task that is chosen"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            listCounter--;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            printDelete(list.get(j-1),listCounter);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            list.remove(j-1); // minus 1 coz the array of Task is 1 digit ahead"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            listText.remove(j-1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (reply.contains(\"todo\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskFlag \u003d 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskName \u003d reply.substring(TODO_REMOVAL);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    emptyChecker(taskName,taskFlag);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Todo newTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    listCounter \u003d addedList(list, listCounter, newTask,1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    listText.add(newTask.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (reply.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskFlag \u003d 2;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskName \u003d reply.substring(DEADLINE_REMOVAL, reply.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    emptyChecker(taskName,taskFlag);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    dueDate \u003d reply.substring(reply.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Deadline newTask \u003d new Deadline(taskName, dueDate);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    listCounter \u003d addedList(list, listCounter, newTask,1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    listText.add(newTask.toString());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else if (reply.contains(\"event\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskFlag \u003d 3;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    taskName \u003d reply.substring(EVENT_REMOVAL, reply.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    emptyChecker(taskName,taskFlag);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    dueDate \u003d reply.substring(reply.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    Event newTask \u003d new Event(taskName, dueDate);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    listCounter \u003d addedList(list, listCounter, newTask,1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    listText.add(newTask.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    throw new UnknownCommand();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                FileWriter fw \u003d new FileWriter(dukeLocation.toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                for(String i: listText) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    fw.write(i + \"\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( UnknownCommand e) { // don\u0027t understand the command"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                unknownMessage();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( emptyToDo e) { // spacing"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                emptyToDoMessage();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( emptyEvent e) { // spacing"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                emptyEventMessage();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( emptyDeadline e) { // spacing"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                emptyDeadlineMessage();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch ( StringIndexOutOfBoundsException e ) { // no spacing"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                if (taskFlag \u003d\u003d 1){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    emptyToDoMessage();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }else if (taskFlag \u003d\u003d 2){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    emptyDeadlineMessage();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                    emptyEventMessage();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                printMissingFileMessage();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printMissingFileMessage() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"The File is missing\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    private static void printDelete(Task deletedTask,int listCounter) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(deletedTask.toString());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"Now you have \"+ listCounter +\" task in this list\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void emptyChecker(String taskName,int taskFlag) throws emptyToDo,emptyDeadline,emptyEvent{"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        if (taskName.equals(\"\") \u0026\u0026 taskFlag \u003d\u003d 1){"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            throw new emptyToDo();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }else if ( taskName.equals(\"\") \u0026\u0026 taskFlag \u003d\u003d 2){"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            throw new emptyDeadline();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        } else if ( taskName.equals(\"\") \u0026\u0026 taskFlag \u003d\u003d 3 ){"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            throw new emptyEvent();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void emptyToDoMessage() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void emptyEventMessage() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void emptyDeadlineMessage() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void unknownMessage() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        for (Task i : list){"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            System.out.println( (list.indexOf(i)+1) + \".\" + i.toString());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static int addedList(ArrayList\u003cTask\u003e list, int listCounter, Task newTask,int rebootFlag) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        listCounter++;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        if(rebootFlag \u003d\u003d 1) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            added(newTask, listCounter);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return listCounter;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void added(Task addedTask,int listCounter){"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                addedTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \"Now you have \" + listCounter + \" tasks in the list\\n\" +"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \" ____________________________________________________________\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void outroMessage() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void introMessage(){"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Duke the list bot\\n\" +"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \" Please list down your plans for today...\\n\" +"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \" type \\\"list\\\" to see the current list!\\n\" +"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                \" type \\\"bye\\\" after you are done!\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public static void printLine(){"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 259,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public abstract class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 2
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    @Override // calls Task\u0027s toString"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 14
    }
  },
  {
    "path": "src/main/java/FileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class FileNotFoundException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 2
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String checkStatus() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String toString(){ //returning the task only with status box"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return \"[\" + this.checkStatus() + \"] \" + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public void markAsDone(int rebootFlag){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        if (!isDone){   //checking if isDone is false?"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            if ( rebootFlag \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                System.out.println(\"  [\" + checkStatus() + \"] \" + description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            System.out.println(\" You have already finished the task!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    @Override //calls Task\u0027s toString"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 11
    }
  },
  {
    "path": "src/main/java/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class UnknownCommand extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 2
    }
  },
  {
    "path": "src/main/java/emptyDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class emptyDeadline extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 2
    }
  },
  {
    "path": "src/main/java/emptyEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class emptyEvent extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 2
    }
  },
  {
    "path": "src/main/java/emptyToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "public class emptyToDo extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tobiasceg"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tobiasceg": 3,
      "-": 19
    }
  }
]
