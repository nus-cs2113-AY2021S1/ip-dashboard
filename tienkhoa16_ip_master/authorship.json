[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.util.Util;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.HORIZONTAL_LINE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.LINE_PREFIX;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.COMMAND_LIST_WORD;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.COMMAND_DONE_WORD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.COMMAND_TODO_WORD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.COMMAND_DEADLINE_WORD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.COMMAND_EVENT_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.COMMAND_BYE_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.COMMAND_DELETE_WORD;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * This variable is declared for the whole class (instead of declaring it"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * inside the getCommand() method to facilitate automated testing using"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * the I/O redirection technique. If not, only the first line of the input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * text file will be processed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /** List of all tasks */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected static TaskManager tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        // Initialize tasks list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks \u003d Storage.loadData();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        // Greet user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        printHello();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String userCommand \u003d getCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String feedback \u003d replyCommand(userCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Util.showResultToUser(feedback);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Greets user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static void printHello() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Hello dude! I\u0027m Duke\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(LINE_PREFIX + \"How can I help you?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + System.lineSeparator());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Farewells user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static void printFarewell() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Bye buddy. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Prompts for the command and reads the text entered by the user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Full line entered by the user."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String getCommand() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.print(\"Enter your command: \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        // Silently consume all blank lines"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        while (inputLine.trim().isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            System.out.print(\"Enter your command: \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return inputLine;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Replies to user\u0027s command."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param userInputString Raw input from user."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Feedback about how the command was executed."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String replyCommand(String userInputString) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String[] commandTypeAndParams \u003d Util.splitCommandWordAndArgs(userInputString);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String commandType \u003d commandTypeAndParams[0].toLowerCase();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String commandArgs \u003d commandTypeAndParams[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_LIST_WORD:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return tasks.executeListAllTasks();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_DONE_WORD:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return tasks.executeMarkTaskAsDone(commandArgs);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_TODO_WORD:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return tasks.executeAddTodo(commandArgs);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_DEADLINE_WORD:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return tasks.executeAddDeadline(commandArgs);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_EVENT_WORD:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return tasks.executeAddEvent(commandArgs);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_DELETE_WORD:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return tasks.executeDeleteTask(commandArgs);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_BYE_WORD:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            executeExitProgramRequest();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return tasks.getMessageForInvalidInputWord();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Requests to terminate the program."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static void executeExitProgramRequest() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        exitProgram();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Displays the farewell message and exits the runtime."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static void exitProgram() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        printFarewell();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 122,
      "-": 5
    }
  },
  {
    "path": "src/main/java/duke/constant/Constant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public final class Constant {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /** A decorative prefix added to the beginning of lines */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String LINE_PREFIX \u003d \"\\t \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String HORIZONTAL_LINE \u003d LINE_PREFIX"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String VERTICAL_BAR_REGREX \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String VERTICAL_BAR \u003d \" | \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String ONE \u003d \"1\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String X_SYMBOL \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /** A platform independent line separator */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String LS \u003d System.lineSeparator() + LINE_PREFIX;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String SAD_FACE \u003d \"\\u2639  OOPS!!! \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_LIST_TITLE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DONE_TITLE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DELETE_TITLE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_ADD_TITLE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_NUMBER_OF_TASKS \u003d \"Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_INPUT_WORD \u003d SAD_FACE +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d SAD_FACE +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            \"The description of %s cannot be empty.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_EMPTY_TIME \u003d SAD_FACE +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            \"The date/time of %s cannot be empty.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_ID_RANGE \u003d SAD_FACE +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            \"Task ID is out of range\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DUPLICATED_MARK \u003d SAD_FACE +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            \"%s has been done earlier.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_ID \u003d SAD_FACE +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            \"Expected an integer for task ID.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DATA_ERROR \u003d LINE_PREFIX + \"Data error.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DATA_FILE_NOT_FOUND \u003d LINE_PREFIX + \"Data file not found.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_IO_EXCEPTION \u003d SAD_FACE + \"Something went wrong: \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_CREATE_DATA_FOLDER \u003d LINE_PREFIX"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"Created ./data/duke.txt to store future tasks data.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_WRITE_FILE_UNSUCCESSFUL \u003d SAD_FACE"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"Unable to append %s to data file.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String SEPARATOR_TASK_ID_TASK_DESC \u003d \". \";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_LIST_WORD \u003d \"list\";          // Keyword for listing tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_BYE_WORD \u003d \"bye\";            // Keyword for exiting program"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_DONE_WORD \u003d \"done\";          // Keyword for marking a task as done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_TODO_WORD \u003d \"todo\";          // Keyword for adding a new todo"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";  // Keyword for adding a new deadline"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_EVENT_WORD \u003d \"event\";        // Keyword for adding a new event"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_DELETE_WORD \u003d \"delete\";        // Keyword for deleting a task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TODO_ABBREVIATION \u003d \"T\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String EVENT_ABBREVIATION \u003d \"E\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String DEADLINE_ABBREVIATION \u003d \"D\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /** These are the prefix strings to define the data type of a command parameter */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_DATA_PREFIX_DEADLINE \u003d \"/by\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_DATA_PREFIX_EVENT \u003d \"/at\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String DATA_FOLDER \u003d \"data\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String DATA_FILE \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /** Directory of project root */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /** Directory of data folder and data file */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final Path PATH_TO_DATA_FOLDER \u003d Paths.get(PROJECT_ROOT, DATA_FOLDER);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final Path PATH_TO_DATA_FILE \u003d Paths.get(PROJECT_ROOT, DATA_FOLDER, DATA_FILE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /** Index of data field in data file string */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int TASK_ABBREVIATION_INDEX \u003d 0;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int TASK_STATUS_INDEX \u003d 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int TASK_DESCRIPTION_INDEX \u003d 2;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int TASK_TIME_INDEX \u003d 3;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 87
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when deadline/event time is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class EmptyTimeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 8
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.DEADLINE_ABBREVIATION;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.EVENT_ABBREVIATION;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.HORIZONTAL_LINE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_CREATE_DATA_FOLDER;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_DATA_ERROR;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_DATA_FILE_NOT_FOUND;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_IO_EXCEPTION;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_WRITE_FILE_UNSUCCESSFUL;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.ONE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.PATH_TO_DATA_FILE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.PATH_TO_DATA_FOLDER;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TASK_ABBREVIATION_INDEX;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TASK_DESCRIPTION_INDEX;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TASK_STATUS_INDEX;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TASK_TIME_INDEX;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TODO_ABBREVIATION;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.VERTICAL_BAR;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.util.Util.showResultToUser;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.util.Util.splitTaskFromDataLine;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns tasks list from data file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Tasks list from data file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static TaskManager loadData() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        TaskManager tasks \u003d new TaskManager();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        showResultToUser(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (Files.exists(PATH_TO_DATA_FOLDER)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            // Create a File for the given file path"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            File file \u003d new File(PATH_TO_DATA_FILE.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                // Create a Scanner using the File as the source"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    String dataLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    String[] taskTypeAndDetails \u003d splitTaskFromDataLine(dataLine);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    handleAddTask(tasks, taskTypeAndDetails);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                System.out.print(tasks.executeListAllTasks());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                showResultToUser(MESSAGE_DATA_FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                createDataFile(PATH_TO_DATA_FILE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                showResultToUser(MESSAGE_DATA_ERROR);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            createDataFolder(PATH_TO_DATA_FOLDER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            createDataFile(PATH_TO_DATA_FILE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        showResultToUser(HORIZONTAL_LINE + System.lineSeparator());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Adds task from its data string representation to tasks list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskTypeAndDetails String representation of task in data file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private static void handleAddTask(TaskManager tasks, String[] taskTypeAndDetails) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String taskType \u003d taskTypeAndDetails[TASK_ABBREVIATION_INDEX];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String taskStatus \u003d taskTypeAndDetails[TASK_STATUS_INDEX];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String taskDescription \u003d taskTypeAndDetails[TASK_DESCRIPTION_INDEX];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case TODO_ABBREVIATION:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            addTodo(tasks, taskDescription);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case EVENT_ABBREVIATION:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String eventTime \u003d taskTypeAndDetails[TASK_TIME_INDEX];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            addEvent(tasks, taskDescription, eventTime);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case DEADLINE_ABBREVIATION:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String deadlineTime \u003d taskTypeAndDetails[TASK_TIME_INDEX];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            addDeadline(tasks, taskDescription, deadlineTime);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            showResultToUser(MESSAGE_DATA_ERROR);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (taskStatus.equals(ONE)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String numberOfTasks \u003d Integer.toString((tasks.getNumberOfTasks()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            tasks.executeMarkTaskAsDone(numberOfTasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Adds a new deadline to tasks list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param deadlineDescription Deadline description."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param deadlineTime Deadline time."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private static void addDeadline(TaskManager tasks, String deadlineDescription, String deadlineTime) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks.getTasksList().add(new Deadline(deadlineDescription, deadlineTime));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Adds a new event to tasks list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param eventDescription Event description."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param eventTime Event time."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private static void addEvent(TaskManager tasks, String eventDescription, String eventTime) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks.getTasksList().add(new Event(eventDescription, eventTime));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Adds a new todo to tasks list."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param todoDescription Todo description."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private static void addTodo(TaskManager tasks, String todoDescription) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks.getTasksList().add(new Todo(todoDescription));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates data file."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param pathToDataFile Path to data file."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private static void createDataFile(Path pathToDataFile) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Files.createFile(pathToDataFile);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            showResultToUser(MESSAGE_CREATE_DATA_FOLDER);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            showResultToUser(MESSAGE_IO_EXCEPTION + e.getMessage());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates data folder."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param pathToDataFolder Path to data file."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private static void createDataFolder(Path pathToDataFolder) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Files.createDirectory(pathToDataFolder);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            showResultToUser(MESSAGE_IO_EXCEPTION + e.getMessage());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Saves tasks list data to hard disk when tasks list changes."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static void saveData(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            // Create a FileWriter in append mode"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            FileWriter fw \u003d new FileWriter(PATH_TO_DATA_FILE.toString());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                String taskData \u003d createTaskDataString(task);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                fw.write(taskData);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            System.out.println(HORIZONTAL_LINE + System.lineSeparator()"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    + MESSAGE_WRITE_FILE_UNSUCCESSFUL"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates task data string to write to data file."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param task Task being written to data file."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String representation of task."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private static String createTaskDataString(Task task) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String taskData \u003d task.getTaskAbbreviation() + VERTICAL_BAR + task.getIsDone()"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + VERTICAL_BAR + task.getDescription();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (task instanceof Deadline || task instanceof Event) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            taskData +\u003d VERTICAL_BAR + task.getTaskTime();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return taskData + System.lineSeparator();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 210
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.DEADLINE_ABBREVIATION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs a new Deadline object inheriting from Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Deadline description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param by Deadline date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        taskTime \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * to return task type, status icon, description and deadline date."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task type, status icon, description and deadline date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return \"[\" + DEADLINE_ABBREVIATION + \"]\" + super.toString() + \" (by: \" + taskTime + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.EVENT_ABBREVIATION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs a new Event object inheriting from Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param at Event time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        taskTime \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * to return task type, status icon, description and event time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task type, status icon, description and event time."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return \"[\" + EVENT_ABBREVIATION + \"]\" + super.toString() + \" (at: \" + taskTime + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.DEADLINE_ABBREVIATION;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.EVENT_ABBREVIATION;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TICK_SYMBOL;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TODO_ABBREVIATION;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.X_SYMBOL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected String description;   // Task description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected boolean isDone;       // Task status"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected String taskTime;      // Task time"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs a new Task object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * By default, initially, task status is set as not done and task time is empty."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        taskTime \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns an icon according task\u0027s status."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Icon according task\u0027s status."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        // Return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return (isDone ? TICK_SYMBOL : X_SYMBOL);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns task\u0027s status in integer (0 or 1)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Number (0 or 1) according task\u0027s status."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public int getIsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return isDone? 1 : 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns task\u0027s time."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * If task is a todo, empty string is returned."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return taskTime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns task description."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Marks task status as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws DukeException If task has been marked as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns string representing task type abbreviation."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task type abbreviation."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getTaskAbbreviation() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String abbreviation \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (this instanceof Todo) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            abbreviation \u003d TODO_ABBREVIATION;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else if (this instanceof Deadline) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            abbreviation \u003d DEADLINE_ABBREVIATION;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else if (this instanceof Event) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            abbreviation \u003d EVENT_ABBREVIATION;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return abbreviation;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Object to return status icon and task description."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task status icon and task description."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 106
    }
  },
  {
    "path": "src/main/java/duke/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exception.EmptyTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.HORIZONTAL_LINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.LINE_PREFIX;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.LS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_DELETE_TITLE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TASK_DATA_PREFIX_DEADLINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TASK_DATA_PREFIX_EVENT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_NUMBER_OF_TASKS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_ADD_TITLE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_DONE_TITLE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_DUPLICATED_MARK;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_EMPTY_TIME;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_INVALID_ID;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_INVALID_INPUT_WORD;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_LIST_TITLE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.MESSAGE_INVALID_ID_RANGE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.SEPARATOR_TASK_ID_TASK_DESC;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.storage.Storage.saveData;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;    // List of all tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs a new Task Manager instance."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns tasks list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Tasks list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns the total number of tasks in tasks list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Number of tasks in tasks list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Marks a task in the tasks list as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Full command args string from the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Feedback display message for marking the task as done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String executeDeleteTask(String commandArgs) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int taskIndex \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            taskIndex \u003d extractTaskIndexFromInputString(commandArgs);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Task deletedTask \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            // Delete task from task list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            // Save updated tasks list to hard disk"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            saveData(tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return getMessageForSuccessfulDelete(deletedTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return getMessageForInvalidIdRange();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return getMessageForInvalidId();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns a message when user deletes a task successfully."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param task Task object to be marked as done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Message for successfully delete a task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getMessageForSuccessfulDelete(Task task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_DELETE_TITLE + LS"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + task.toString() + LS"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_NUMBER_OF_TASKS + System.lineSeparator()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + HORIZONTAL_LINE + System.lineSeparator(), getNumberOfTasks());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Adds a new event to tasks list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * If event description or event date is missing, error feedback message is returned."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Full command args string from the user."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Feedback display message for adding a new event."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String executeAddEvent(String commandArgs) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        final String TASK_TYPE \u003d \"an event\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String feedbackMessage \u003d null;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Event decodeResult \u003d decodeEventFromString(commandArgs);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d executeAddTask(decodeResult);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d getMessageForEmptyDescription(TASK_TYPE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d getMessageForEmptyTime(TASK_TYPE);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d getMessageForEmptyTime(TASK_TYPE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return feedbackMessage;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Decodes an event from it\u0027s supposed string representation."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encoded string to be decoded."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Event object of description and time."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws DukeException If event description is empty."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyTimeException If event time is empty."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Event decodeEventFromString(String encoded) throws DukeException, EmptyTimeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Event decodedEvent \u003d makeEventFromData("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                extractDescriptionFromString(encoded),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                extractEventTimeFromString(encoded)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        );"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return decodedEvent;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates an event from the given data."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param time Event time without data prefix."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Constructed event."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws DukeException If event description is empty."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Event makeEventFromData(String description, String time) throws DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return new Event(description, time);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Extracts substring representing event time from command arguments."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encoded String to be decoded."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Event time argument WITHOUT prefix."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyTimeException If event time is empty."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String extractEventTimeFromString(String encoded) throws EmptyTimeException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int indexOfEventPrefix \u003d encoded.indexOf(TASK_DATA_PREFIX_EVENT);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String eventTime \u003d removePrefixSign(encoded.substring(indexOfEventPrefix, encoded.length()).trim(),"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                TASK_DATA_PREFIX_EVENT);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (eventTime.isEmpty()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new EmptyTimeException();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Adds a new deadline to tasks list."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * If deadline description or deadline date is missing, error feedback message is returned."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Full command args string from the user."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Feedback display message for adding a new deadline."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String executeAddDeadline(String commandArgs) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        final String TASK_TYPE \u003d \"a deadline\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String feedbackMessage \u003d null;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Deadline decodeResult \u003d decodeDeadlineFromString(commandArgs);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d executeAddTask(decodeResult);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d getMessageForEmptyDescription(TASK_TYPE);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d getMessageForEmptyTime(TASK_TYPE);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d getMessageForEmptyTime(TASK_TYPE);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return feedbackMessage;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Decodes a deadline from it\u0027s supposed string representation."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encoded string to be decoded."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Deadline object of description and date."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws DukeException If deadline description is empty."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyTimeException If deadline time is empty."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Deadline decodeDeadlineFromString(String encoded) throws DukeException, EmptyTimeException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Deadline decodedDeadline \u003d makeDeadlineFromData("
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                extractDescriptionFromString(encoded),"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                extractDeadlineDateFromString(encoded)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        );"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return decodedDeadline;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates a deadline from the given data."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Description of deadline."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param date Deadline date without data prefix."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Constructed deadline."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws DukeException If deadline description is empty."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Deadline makeDeadlineFromData(String description, String date) throws DukeException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return new Deadline(description, date);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Extracts substring representing deadline date from command arguments."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encoded string to be decoded."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Deadline date argument WITHOUT prefix."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyTimeException If deadline date is empty."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String extractDeadlineDateFromString(String encoded) throws EmptyTimeException {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int indexOfDeadlinePrefix \u003d encoded.indexOf(TASK_DATA_PREFIX_DEADLINE);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String deadlineDate \u003d removePrefixSign(encoded.substring(indexOfDeadlinePrefix, encoded.length()).trim(),"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                TASK_DATA_PREFIX_DEADLINE);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (deadlineDate.isEmpty()) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new EmptyTimeException();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return deadlineDate;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Extracts substring representing task description from command arguments."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encoded command arguments."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws DukeException If task description is empty."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String extractDescriptionFromString(String encoded) throws DukeException {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int indexOfDeadlinePrefix \u003d encoded.indexOf(TASK_DATA_PREFIX_DEADLINE);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int indexOfEventPrefix \u003d encoded.indexOf(TASK_DATA_PREFIX_EVENT);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         * Description is leading substring up to data prefix string."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         * If prefix of deadline exists (indexOfDeadlinePrefix \u003e\u003d 0),"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         * prefix of event doesn\u0027t (indexOfEventPrefix \u003d\u003d -1) and vice versa."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         */"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int indexOfExistingPrefix \u003d Math.max(indexOfDeadlinePrefix, indexOfEventPrefix);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String description \u003d encoded.substring(0, indexOfExistingPrefix).trim();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Adds a new Todo to tasks list."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * If todo description is missing, error feedback message is returned."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param todoDescription Todo description."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Feedback display message for adding a new todo."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String executeAddTodo(String todoDescription) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String taskType \u003d \"a todo\";"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String feedbackMessage \u003d null;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (todoDescription.isEmpty()) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d getMessageForEmptyDescription(taskType);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            // Create a new Todo instance"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Todo todo \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedbackMessage \u003d executeAddTask(todo);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return feedbackMessage;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns a message when task description is not found."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskType String stating which task type\u0027s description is missing."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Empty description message."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getMessageForEmptyDescription(String taskType) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_EMPTY_DESCRIPTION + System.lineSeparator()"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + HORIZONTAL_LINE + System.lineSeparator(), taskType);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns a message when date/time for deadline/event is not found."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskType String stating which task type\u0027s date/time is missing."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Empty date/time message."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getMessageForEmptyTime(String taskType) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_EMPTY_TIME + System.lineSeparator()"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + HORIZONTAL_LINE + System.lineSeparator(), taskType);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns a message when user\u0027s command keyword does not belong to any valid keywords."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Invalid input message."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getMessageForInvalidInputWord() {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_INVALID_INPUT_WORD + System.lineSeparator()"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + HORIZONTAL_LINE + System.lineSeparator();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Adds a new task to tasks list."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param task Task object to be added."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Feedback display message for adding a new task."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String executeAddTask(Task task) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        // Save updated tasks list to hard disk"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        saveData(tasks);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_ADD_TITLE + LS"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + task.toString() + LS"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_NUMBER_OF_TASKS + System.lineSeparator()"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + HORIZONTAL_LINE + System.lineSeparator(), getNumberOfTasks());"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Lists out tasks added so far with their status."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String executeListAllTasks() {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String feedback \u003d HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_LIST_TITLE + System.lineSeparator();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        // Iterate through tasks list and print each task with its status and description"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        for (int i \u003d 0; i \u003c getNumberOfTasks(); i++) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            feedback +\u003d LINE_PREFIX + (i + 1) + SEPARATOR_TASK_ID_TASK_DESC"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    + tasks.get(i).toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        feedback +\u003d HORIZONTAL_LINE + System.lineSeparator();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Marks a task in the tasks list as done."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Full command args string from the user."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Feedback display message for marking the task as done."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String executeMarkTaskAsDone(String commandArgs) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int taskIndex \u003d 0;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            taskIndex \u003d extractTaskIndexFromInputString(commandArgs);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            // Update status of task"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            tasks.get(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            // Save updated tasks list to hard disk"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            saveData(tasks);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return getMessageForSuccessfulMark(tasks.get(taskIndex));"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return getMessageForDuplicatedMark(tasks.get(taskIndex));"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return getMessageForInvalidIdRange();"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return getMessageForInvalidId();"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns a message when task ID to be marked as done is not an integer."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Message for invalid task ID."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getMessageForInvalidId() {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_INVALID_ID + System.lineSeparator()"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + HORIZONTAL_LINE + System.lineSeparator();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns a message when user inputs a task ID out of range."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Message for invalid task ID."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getMessageForInvalidIdRange() {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         * Task ID displayed to user is task index in tasks list + 1"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         * because task index in list starts from 0"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         * while task ID displayed to user starts from 1."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         */"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_INVALID_ID_RANGE + System.lineSeparator()"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + HORIZONTAL_LINE + System.lineSeparator();"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns a message when user marks a task as done successfully."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param task Task object to be marked as done."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Message for successfully mark task as done."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getMessageForSuccessfulMark(Task task) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_DONE_TITLE + LS"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + task.toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + HORIZONTAL_LINE + System.lineSeparator();"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns an error message when user marks a task as done but it has been done earlier."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param task Task object marked as done earlier."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Duplicated marked as done message."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getMessageForDuplicatedMark(Task task) {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(HORIZONTAL_LINE + LS"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + MESSAGE_DUPLICATED_MARK + System.lineSeparator()"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                + HORIZONTAL_LINE + System.lineSeparator(), task.getDescription());"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Converts task ID in user\u0027s command (starting from 1)"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * to the corresponding task index  in tasks list (starting from 0)."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * In the case of \"done X\" command,"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * the command argument X is the task ID to be marked as done."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs User\u0027s argument passed in the command."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task index."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public int extractTaskIndexFromInputString(String commandArgs) {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return Integer.parseInt(commandArgs) - 1;"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Removes a sign (/by, /at, etc.) from parameter string."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param string Parameter as a string."
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param sign Parameter sign to be removed."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String without the sign."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String removePrefixSign(String string, String sign) {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return string.replace(sign, \"\").trim();"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 463
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.TODO_ABBREVIATION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs a new Todo object inheriting from Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Todo description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * to return task type, status icon and description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task type, status icon and description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return \"[\" + TODO_ABBREVIATION + \"]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 26
    }
  },
  {
    "path": "src/main/java/duke/util/Util.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constant.Constant.VERTICAL_BAR_REGREX;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Util {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Splits raw user input into command word and command arguments string."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param rawUserInput User\u0027s raw input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Size 2 array; first element is the command type and second element is the arguments string."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String[] splitCommandWordAndArgs(String rawUserInput) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String[] split \u003d rawUserInput.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"}; // else case: no parameters"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Splits data string from data file into task abbreviation and task details."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param dataLine Data line from data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Array containing task type, status, description and time (where applicable)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String[] splitTaskFromDataLine(String dataLine) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return dataLine.trim().split(VERTICAL_BAR_REGREX);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Shows a result message to the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param result Result message to be displayed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static void showResultToUser(String result) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(result);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "deadline read book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "deadline /by Sunday"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "event return book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "event /at Monday"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "deadline read book /by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "event return book /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "event return book /at"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done -10"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done xyz"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "delete xyz"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 27
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 2,
      "-": 19
    }
  }
]
