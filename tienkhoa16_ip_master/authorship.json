[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "# Duke project"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "_Duke_ is a Java project for managing tasks effectively using the command-line interface. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "## Setting up in IntelliJ"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Prerequisites: JDK 11, update IntelliJ to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. Import the project into IntelliJ as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Created data/duke.txt to store future tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Hello dude! I\u0027m Duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    How can I help you?"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 15,
      "-": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "D | 0 | CS2113T Individual Project | 2 October 2020, 11.59PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "E | 0 | project meeting | 3 October 2020, 6.00PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. [**Introduction**](#introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. [**Quick Start**](#quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. [**Features**](#features)\\"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "3.1. [Adding A Task : `todo`, `deadline`, `event`](#adding-a-task--codetodocode-codedeadlinecode-codeeventcode)\\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "3.2. [Listing Tasks: `list`](#listing-tasks-codelistcode)\\"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "3.3. [Marking A Task As Done: `done`](#marking-a-task-as-done-codedonecode)\\"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "3.4. [Deleting A Task : `delete`](#deleting-a-task--codedeletecode)\\"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "3.5. [Finding Tasks : `find`](#finding-tasks--codefindcode)\\"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "3.6. [Exiting Duke : `bye`](#exiting-duke--codebyecode)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. [**Command Summary**](#command-summary)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. [**FAQ**](#faq)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Duke is for those who **prefer to use a desktop app for keeping track of tasks**."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "More importantly, Duke is **optimised for the Command Line Interface** (CLI) which is beneficial if you can type fast."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "If you have trouble tracking your deadlines and event dates, Duke can help you manage by saving your task list into "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "a data file and loading it when you start the app again. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Interested? Jump to the [Section 2. Quick Start](#quick-start) to get started!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. Download the latest `duke.jar` [here](https://github.com/tienkhoa16/ip/releases/tag/A-Release)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. Copy the file to the folder you want to use as the home folder for Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. In the home folder for Duke, launch the jar file using the `java -jar duke.jar` command "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "on Command Prompt (for Windows) or Terminal (for macOS and Linux) to start the app. "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Created data/duke.txt to store future tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Hello dude! I\u0027m Duke"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        How can I help you?"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        ____________________________________________________________   "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. To use Duke, simply type a valid command into the terminal and press \u003ckbd\u003eEnter\u003c/kbd\u003e to run the command.\\"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Example: Typing `list` command and pressing \u003ckbd\u003eEnter\u003c/kbd\u003e will list tasks added to Duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. Some example commands you can try:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    - `list` : Views all tasks added to Duke."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    - `deadline CS2113 Individual Project /by 2/10/2020 2359` : Adds a deadline called `CS2113 Individual Project`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    which is due on `2 October 2020, 11.59PM` to Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    - `bye` : Exits Duke."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "1. A summary of all the supported commands in Duke can be found in [Section 4. Command Summary](#command-summary).\\"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "   Refer to [Section 3. Features](#features) for the detailed instructions of the various features of Duke.  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "***"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ":information_source: **Command Format**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "- Words that are in `UPPER_CASE` are the parameters to be supplied by you.\\"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Example: in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo CS2113 Team Meeting`."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "- The `INDEX` used in various commands is a number specifying the order of a task in the tasks list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "This number can be found on the left of a task after running `list` command.\\"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "You can refer to [Section 3.2. Listing Tasks: `list`](#listing-tasks-codelistcode) to have more information about `list` command.\\"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Below is an example of Task Index:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ![Image of Task Index](./TaskIndex.png)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "- `DATE` that you input to Duke should follow `D/M/YYYY` format.\\"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Example: `1/10/2020` represents the date 1 October 2020."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "- `TIME` that you input to Duke should follow `HHMM` format where `HH` is hour in day (0-23)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "and `MM` is minute in hour (0-59).\\"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Example: `1600` represents the time 4:59PM."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "- Parameters cannot be reordered.\\"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Example: If the command specifies `DESCRIPTION /by DATE TIME`,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    `/by DATE TIME DESCRIPTION` will result in an invalid command. "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "***"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Below are the supported features in Duke: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "### 3.1. Adding A Task : `todo`, `deadline`, `event`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Adds a task to Duke for tracking purposes."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Each task type in Duke is denoted by its abbreviation. Task completion is denoted by"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "`[/]` and `[X]` symbols where `[/]` indicates task has been done while "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "`[X]` indicates task has not been done."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "After adding a task to the task list, Duke will automatically save the list to"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "`[YOUR_DUKE_HOME_FOLDER]/data/duke.txt`."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "There are 3 types of task that you can add to Duke:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "- `todo` - a task with only a description, represented by `[T]` in Duke."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Format: `todo DESCRIPTION`\\"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Example of usage: `todo CS2113 Team Meeting`\\"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         ____________________________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         [T][X] CS2113 Team Meeting"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         Now you have 1 task in the list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         ____________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "- `deadline` - a task with a description and a deadline, represented by `[D]` in Duke."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Format: `deadline DESCRIPTION /by DATE TIME`\\"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Example of usage: `deadline CS2113 Individual Project /by 2/10/2020 2359`\\"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Expected outcome:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         ____________________________________________________________"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         [D][X] CS2113 Individual Project (by: 2 October 2020, 11.59PM)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         ____________________________________________________________"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    |:bulb:| Although other date time formats are accepted, it is recommended for `DATE TIME` to follow `D/M/YYYY HHMM` format so that `find` command can have the optimal performance.|"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    |------|:-------------------------------------------|
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "   "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "- `event` - a task with a description and date and time of the event, represented by `[E]` in Duke."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Format: `event DESCRIPTION /at DATE TIME`\\"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Example of usage: `event Google Day 2020 /at 9/9/2020 1500`\\"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Expected outcome:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         ____________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         [E][X] Google Day 2020 (at: 9 September 2020, 3.00PM)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         ____________________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ``` "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    | :bulb: | Although other date time formats are accepted, it is recommended for `DATE TIME` to follow `D/M/YYYY HHMM` format so that `find` command can have the optimal performance.|"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    |---|:--------------------------|   "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "### 3.2. Listing Tasks: `list`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Lists all tasks in Duke with numbering according to the order they are added to Duke."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Format: `list`\\"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Here is the list of your tasks:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    1. [T][X] CS2113 Team Meeting"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    2. [D][X] CS2113 Individual Project (by: 2 October 2020, 11.59PM)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    3. [E][X] Google Day 2020 (at: 9 September 2020, 3.00PM)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "``` "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "| :warning: | A warning will show if redundant parameters are provided.|"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "|---|:--------------------------|   "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "### 3.3. Marking A Task As Done: `done`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Marks a task in Duke as done."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "After marking a task in task list as done, Duke will automatically save the list to"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "`[YOUR_DUKE_HOME_FOLDER]/data/duke.txt`."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Format: `done INDEX`\\"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Example of usage: `done 1`\\"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    [T][/] CS2113 Team Meeting"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "``` "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "| :warning: | If the task has been marked as done previously, Duke will show a warning about the duplicated mark as done.|"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "|--------|:---------------|  "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "### 3.4. Deleting A Task : `delete`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Deletes a task from Duke."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "After deleting a task from the task list, Duke will automatically save the list to"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "`[YOUR_DUKE_HOME_FOLDER]/data/duke.txt`."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Format: `delete INDEX`\\"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Example of usage: `delete 2`\\"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    [D][X] CS2113 Individual Project (by: 2 October 2020, 11.59PM)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "``` "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "### 3.5. Finding Tasks : `find`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Finds tasks in Duke by searching for a keyword which can be a number,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "a word or a phrase. Duke will filter and display tasks "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "whose details, including description and date time, match the keyword."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Format: `find KEYWORD`\\"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Example of usage: `find CS2113`\\"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "```"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Here is the list of matching tasks:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    1. [T][/] CS2113 Team Meeting"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "```  "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "### 3.6. Exiting Duke : `bye`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Exits Duke."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Format: `bye`\\"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "```"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    Bye buddy. Hope to see you again soon!"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "``` "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "| :warning: | A warning will show if redundant parameters are provided.|"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "|---|:--------------------------|   "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "## 4. Command Summary"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Below is the summary of all the supported features in Duke:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**Action** | **Format, Examples** "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "|------|-----------------|"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**Add** | - `todo DESCRIPTION`\u003cbr\u003e\u003cbr\u003e Example: `todo CS2113 Team Meeting`\u003cbr\u003e\u003cbr\u003e - `deadline DESCRIPTION /by DATE TIME`\u003cbr\u003e\u003cbr\u003e Example: `deadline CS2113 Individual Project /by 2/10/2020 2359`\u003cbr\u003e\u003cbr\u003e - `event DESCRIPTION /at DATE TIME`\u003cbr\u003e\u003cbr\u003e Example: `event Google Day 2020 /at 9/9/2020 1500`"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**List** | `list`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**Mark As Done** | `done INDEX`\u003cbr\u003e\u003cbr\u003e Example: `done 1`"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**Delete** | `delete INDEX`\u003cbr\u003e\u003cbr\u003e Example: `delete 2`"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**Find** | `find KEYWORD`\u003cbr\u003e\u003cbr\u003e Example: `find CS2113`"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**Exit** | `bye`"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "## 5. FAQ"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Below are the answers to some frequently asked questions about Duke:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**Q:** Can I use Duke on another operating systems apart from Windows?\\"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**A:** Yes. Duke is compatible with Windows, macOS and Linux. "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**Q:** How do I transfer my data to another Computer?\\"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**A:** Install Duke in the other computer and overwrite the empty data file "
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "`duke.txt` it creates in `data` folder with `duke.txt` of your previous Duke `data` folder."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**Q:** Can I exit Duke without typing `bye` command?\\"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "**A:** Yes. Your data is saved automatically to `duke.txt` whenever your task list changes."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "Therefore, you can exit Duke worry-free."
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 247,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.CommandResult;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.ExceptionHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.TasksList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_CREATED_NEW_DATA_FILE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_LOAD_SUCCESSFUL;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * The Duke program implements an application that keeps track of the user\u0027s tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * @author Nguyen Tien Khoa"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * @version v2.0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * @since 2020-08-23"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private ExceptionHandler exceptionHandler;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private TasksList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Duke object by initialising Ui, Storage, Parser, ExceptionHandler, TasksList objects"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * and loads saved tasks if applicable."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        exceptionHandler \u003d new ExceptionHandler();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks \u003d new TasksList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            tasks \u003d storage.loadData();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            if (storage.getHasExistingDataFile()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                ui.showResultToUser(MESSAGE_LOAD_SUCCESSFUL);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                ui.showResultToUser(MESSAGE_CREATED_NEW_DATA_FILE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            ui.showResultToUser(exceptionHandler.handleCheckedExceptions(e));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            ui.showResultToUser(exceptionHandler.handleUncheckedExceptions(e));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Main entry point to run Duke."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param args Unused in Duke."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Runs Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        runCommandLoop();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Starts up Duke with welcome message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s command and executes repeatedly until user requests to exit Duke."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void runCommandLoop() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                String userCommand \u003d ui.getCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                command \u003d parser.parseCommand(userCommand);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                CommandResult result \u003d command.execute(tasks, storage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                ui.showResultToUser(result.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                ui.showResultToUser(exceptionHandler.handleCheckedExceptions(e));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                ui.showResultToUser(exceptionHandler.handleUncheckedExceptions(e));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Exits the runtime."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 101,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.TasksList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.InvalidCommandWordException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.InvalidTagException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.commands.CommandResult.createAcknowledgeMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.components.Parser.extractDescriptionFromString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.components.Parser.extractTimeFromString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_ADD_ACK;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.DEADLINE_ABBREVIATION;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.EVENT_ABBREVIATION;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TODO_ABBREVIATION;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for adding a task to the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private char taskTypeAbbrev;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String commandArgs;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs AddCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskTypeAbbrev Task type abbreviation of the task to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Command arguments from user\u0027s input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public AddCommand(char taskTypeAbbrev, String commandArgs) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.taskTypeAbbrev \u003d taskTypeAbbrev;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.commandArgs \u003d commandArgs;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command to execute the add command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data after adding task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(TasksList tasks, Storage storage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Task task \u003d createTask();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            storage.saveData(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String acknowledgeMsg \u003d createAcknowledgeMsg(MESSAGE_ADD_ACK, tasks, task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_FORMAT, acknowledgeMsg));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates a task based on user\u0027s input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Created task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If task description is empty."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDateTimeException If task date time is empty."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws InvalidCommandWordException If command word is invalid."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws InvalidTagException If command tag is invalid."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Task createTask() throws EmptyDescriptionException, EmptyDateTimeException,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            InvalidCommandWordException, InvalidTagException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        switch (taskTypeAbbrev) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case TODO_ABBREVIATION:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            task \u003d new Todo(commandArgs);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String activity \u003d extractDescriptionFromString(taskTypeAbbrev, commandArgs);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String time \u003d extractTimeFromString(commandArgs, taskTypeAbbrev);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            switch (taskTypeAbbrev) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            case DEADLINE_ABBREVIATION:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                task \u003d new Deadline(activity, time);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            case EVENT_ABBREVIATION:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                task \u003d new Event(activity, time);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                throw new InvalidCommandWordException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 102
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.TasksList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A base class for command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Executes a specific command requested by user\u0027s input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data when required."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public abstract CommandResult execute(TasksList tasks, Storage storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 19
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.TasksList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.ONE_TASK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_PLURAL_NOUN;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_SINGULAR_NOUN;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class representing result shown to user after executing the requested command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String feedbackMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs CommandResult object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param feedbackMessage Feedback message after executing command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult(String feedbackMessage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.feedbackMessage \u003d feedbackMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Object to get string representation of CommandResult object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String representation of CommandResult object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return feedbackMessage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates acknowledge message after executing a command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param messageFormat Format of the acknowledge message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param task Task applied the command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Acknowledge message after executing the command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String createAcknowledgeMsg(String messageFormat, TasksList tasks, Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int numOfTasks \u003d tasks.getNumberOfTasks();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (numOfTasks \u003e ONE_TASK) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return String.format(messageFormat, task.toString(), numOfTasks, MESSAGE_PLURAL_NOUN);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return String.format(messageFormat, task.toString(), numOfTasks, MESSAGE_SINGULAR_NOUN);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 52
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.TasksList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.commands.CommandResult.createAcknowledgeMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.components.Utils.convertToZeroBased;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_DELETE_ACK;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_INVALID_INDEX;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_INVALID_INDEX_RANGE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for deleting a task from the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs DeleteCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param index Index in one-based numbering of the task to be deleted."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public DeleteCommand(String index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command to execute the delete task command requested by user\u0027s input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data after deleting task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(TasksList tasks, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            int indexZeroBased \u003d convertToZeroBased(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Task taskToDelete \u003d tasks.getTask(indexZeroBased);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            tasks.removeTask(indexZeroBased);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            storage.saveData(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String acknowledgeMsg \u003d createAcknowledgeMsg(MESSAGE_DELETE_ACK, tasks, taskToDelete);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_FORMAT, acknowledgeMsg));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_FORMAT, MESSAGE_INVALID_INDEX_RANGE));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_FORMAT, MESSAGE_INVALID_INDEX));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 58
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.TasksList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.components.Utils.convertToZeroBased;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_DONE_ACK;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_INVALID_INDEX;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_INVALID_INDEX_RANGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for marking a task from the list as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs DoneCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param index Index in one-based numbering of the task to be marked as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public DoneCommand(String index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command to execute the mark task as done command requested by user\u0027s input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data after marking task as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(TasksList tasks, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            int indexZeroBased \u003d convertToZeroBased(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Task task \u003d tasks.getTask(indexZeroBased);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            storage.saveData(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String acknowledgeMsg \u003d String.format(MESSAGE_DONE_ACK, task.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_FORMAT, acknowledgeMsg));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_FORMAT, MESSAGE_INVALID_INDEX_RANGE));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_FORMAT, MESSAGE_INVALID_INDEX));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 57
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.TasksList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.RedundantParamException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_BYE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_EXIT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for exiting Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs ExitCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Command arguments from user\u0027s input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws RedundantParamException If parameters are provided to Exit Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public ExitCommand(String commandArgs) throws RedundantParamException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new RedundantParamException(COMMAND_WORD_BYE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command to execute exit command requested by user\u0027s input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data when required."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(TasksList tasks, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_FORMAT, MESSAGE_EXIT));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Checks if user wants to exit Duke by checking given command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param command The command to be checked."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Whether the command is an object of type ExitCommand."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 49
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.TasksList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyKeywordException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.components.Utils.convertTasksListToString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.ONE_APPEARANCE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FIND_FORMAT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_NO_MATCH;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_DETAILS_START_INDEX;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for finding tasks by keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs FindCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param keyword Keyword for searching."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyKeywordException If keyword is empty."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public FindCommand(String keyword) throws EmptyKeywordException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new EmptyKeywordException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.keyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * to execute the find tasks by keyword command requested by user\u0027s input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data when required."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(TasksList tasks, Storage storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d (ArrayList\u003cTask\u003e) tasks.getTasksList().stream()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                .filter(task -\u003e task.toString().substring(TASK_DETAILS_START_INDEX).toLowerCase().contains(keyword))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String listingMessage \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (matchingTasks.size() \u003e\u003d ONE_APPEARANCE) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            listingMessage \u003d String.format(MESSAGE_FIND_FORMAT, convertTasksListToString(matchingTasks));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            listingMessage \u003d MESSAGE_NO_MATCH;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_FORMAT, listingMessage));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 63
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.components.TasksList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.RedundantParamException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.components.Utils.convertTasksListToString;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_LIST;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.ONE_APPEARANCE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_EMPTY_TASKS_LIST;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_LIST_FORMAT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for listing tasks list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs ListCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Command arguments from user\u0027s input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws RedundantParamException If parameters are provided to List Command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public ListCommand(String commandArgs) throws RedundantParamException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new RedundantParamException(COMMAND_WORD_LIST);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command to execute the listing tasks command requested by user\u0027s input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data when required."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(TasksList tasks, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String listingMessage \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (tasks.getNumberOfTasks() \u003e\u003d ONE_APPEARANCE) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            listingMessage \u003d String.format(MESSAGE_LIST_FORMAT, convertTasksListToString(tasks.getTasksList()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            listingMessage \u003d MESSAGE_EMPTY_TASKS_LIST;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_FORMAT, listingMessage));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 50
    }
  },
  {
    "path": "src/main/java/duke/components/ExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class that deals with handling exceptions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class ExceptionHandler {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Handles checked exceptions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param e Checked exceptions in Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String handleCheckedExceptions(DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Handles unchecked exceptions."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param e Unchecked exception in Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String handleUncheckedExceptions(Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(MESSAGE_FORMAT, e.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 31
    }
  },
  {
    "path": "src/main/java/duke/components/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyKeywordException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.InvalidCommandWordException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.InvalidTagException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.RedundantParamException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.CHECK_VALIDITY_SPLIT_LIMIT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_ARGS_INDEX;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_SPLIT_LIMIT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_TYPE_INDEX;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_BYE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_DEADLINE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_DELETE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_DONE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_EVENT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_FIND;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_LIST;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.COMMAND_WORD_TODO;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.DESCRIPTION_START_INDEX;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.EMPTY_STRING;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.GREEDY_WHITE_SPACE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.OFFSET;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.ONE_APPEARANCE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.VERTICAL_BAR_REGREX;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.DEADLINE_ABBREVIATION;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.DEADLINE_TAG;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.EVENT_ABBREVIATION;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.EVENT_TAG;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_INPUT_DATE_TIME_FORMAT;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_OUTPUT_DATE_TIME_FORMAT;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TODO_ABBREVIATION;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class that deals with making sense of the user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Parses and returns the Command associated with the user input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param userInputString User\u0027s raw input string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Associated command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws InvalidCommandWordException If command word is invalid."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyKeywordException If user\u0027s keyword input for find command is empty."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws RedundantParamException If redundant parameters are provided."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Command parseCommand(String userInputString) throws InvalidCommandWordException, EmptyKeywordException,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            RedundantParamException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String[] commandTypeAndParams \u003d splitCommandWordAndArgs(userInputString);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String commandType \u003d commandTypeAndParams[COMMAND_TYPE_INDEX].toLowerCase();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String commandArgs \u003d commandTypeAndParams[COMMAND_ARGS_INDEX];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_TODO:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new AddCommand(TODO_ABBREVIATION, commandArgs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_DEADLINE:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new AddCommand(DEADLINE_ABBREVIATION, commandArgs);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new AddCommand(EVENT_ABBREVIATION, commandArgs);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_LIST:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new ListCommand(commandArgs);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_DONE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new DoneCommand(commandArgs);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_DELETE:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new DeleteCommand(commandArgs);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_FIND:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new FindCommand(commandArgs);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_BYE:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new ExitCommand(commandArgs);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new InvalidCommandWordException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Splits raw user\u0027s input into command word and command arguments string."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param rawUserInput User\u0027s raw input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Size 2 array; first element is the command type and second element is the arguments string."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String[] splitCommandWordAndArgs(String rawUserInput) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String[] split \u003d rawUserInput.trim().split(GREEDY_WHITE_SPACE,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                COMMAND_SPLIT_LIMIT);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return split.length \u003d\u003d COMMAND_SPLIT_LIMIT ? split : new String[]{split[COMMAND_TYPE_INDEX], EMPTY_STRING};"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Converts date and time in string format to LocalDateTime format."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param string Date and time in string format."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Date and time in LocalDateTime format."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static LocalDateTime stringToDateTime(String string) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(TASK_INPUT_DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Converts date and time in LocalDateTime format to string format."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param dateTime Date and time in LocalDateTime format."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Date and time in string format."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String dateTimeToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return dateTime.format(DateTimeFormatter.ofPattern(TASK_OUTPUT_DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Parses user\u0027s input date time format."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param stringFormatDateTime User\u0027s input date time format."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Parsed date and time format."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String parseStringFormatDateTime(String stringFormatDateTime) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return dateTimeToString(stringToDateTime(stringFormatDateTime));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Extracts task description from command arguments."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskTypeAbbrev Task type abbreviation."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encoded Command arguments."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws InvalidTagException If command tag is invalid in user\u0027s input."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String extractDescriptionFromString(char taskTypeAbbrev, String encoded)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throws InvalidTagException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (!checkTagValidity(taskTypeAbbrev, encoded)) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new InvalidTagException();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int indexOfDeadlineTag \u003d encoded.indexOf(DEADLINE_TAG);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int indexOfEventTag \u003d encoded.indexOf(EVENT_TAG);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         * Description is leading substring up to command tag string."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         * If tag of deadline exists (i.e. indexOfDeadlineTag \u003e\u003d 0),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         * then tag of event doesn\u0027t (i.e. indexOfEventPrefix \u003d\u003d -1) and vice versa."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "         */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int indexOfExistingTag \u003d Math.max(indexOfDeadlineTag, indexOfEventTag);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return encoded.substring(DESCRIPTION_START_INDEX, indexOfExistingTag).trim();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Checks the validity of command tag from user\u0027s input command arguments."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskTypeAbbrev Task type abbreviation."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encoded Command arguments."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Whether the command tag is valid."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private static boolean checkTagValidity(char taskTypeAbbrev, String encoded) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        boolean isValid \u003d false;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int countDeadlineTag \u003d encoded.split(DEADLINE_TAG, CHECK_VALIDITY_SPLIT_LIMIT).length - OFFSET;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int countEventTag \u003d encoded.split(EVENT_TAG, CHECK_VALIDITY_SPLIT_LIMIT).length - OFFSET;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        switch (taskTypeAbbrev) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case DEADLINE_ABBREVIATION:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            if (countDeadlineTag \u003d\u003d ONE_APPEARANCE \u0026\u0026 countEventTag \u003c ONE_APPEARANCE) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                isValid \u003d true;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case EVENT_ABBREVIATION:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            if (countEventTag \u003d\u003d ONE_APPEARANCE \u0026\u0026 countDeadlineTag \u003c ONE_APPEARANCE) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                isValid \u003d true;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            isValid \u003d false;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return isValid;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Extracts task time from command arguments."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encoded String containing task time including tag."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskTypeAbbrev Abbreviation of task type."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task time argument WITHOUT tag."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String extractTimeFromString(String encoded, Character taskTypeAbbrev) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String commandTag \u003d EMPTY_STRING;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (taskTypeAbbrev.equals(DEADLINE_ABBREVIATION)) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            commandTag \u003d DEADLINE_TAG;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else if (taskTypeAbbrev.equals(EVENT_ABBREVIATION)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            commandTag \u003d EVENT_TAG;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int indexOfExistingTag \u003d encoded.indexOf(commandTag);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String timeWithTag \u003d encoded.substring(indexOfExistingTag, encoded.length()).trim();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return removeTag(timeWithTag, commandTag);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Removes a tag (/by, /at, etc.) from a string."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param string String to remove tag."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tag Tag to be removed."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String without the tag."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String removeTag(String string, String tag) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return string.replace(tag, EMPTY_STRING).trim();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Splits data string from data file into task abbreviation and task details."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param dataLine Data line from data file."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Array containing task type, status, description and time (where applicable)."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String[] splitTaskFromDataLine(String dataLine) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return dataLine.trim().split(VERTICAL_BAR_REGREX);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 233
    }
  },
  {
    "path": "src/main/java/duke/components/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.InvalidSaveFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.LoadingException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.SavingException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.TaskWithDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.components.Parser.splitTaskFromDataLine;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.DataFileConfig.PATH_TO_DATA_FILE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.DataFileConfig.PATH_TO_DATA_FOLDER;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.TASK_ENCODE_FORMAT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.TASK_ENCODE_FORMAT_DATE_TIME_EXTENSION;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.DEADLINE_ABBREVIATION;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.EVENT_ABBREVIATION;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_ABBREVIATION_INDEX;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_DESCRIPTION_INDEX;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_STATUS_INDEX;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_TIME_INDEX;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TODO_ABBREVIATION;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class that deals with loading tasks from the data file and saving tasks in the data file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private boolean hasExistingDataFile;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Storage object where data file is assumed to be existed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        hasExistingDataFile \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns boolean stating if data file is existed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Boolean stating if data file is existed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public boolean getHasExistingDataFile() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return hasExistingDataFile;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns tasks list from data file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Tasks list from data file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws InvalidSaveFormatException If data line in Duke has invalid encode format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If task description is empty."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDateTimeException If task date time is empty."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws LoadingException If there are failed or interrupted I/O operations."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public TasksList loadData() throws InvalidSaveFormatException, EmptyDescriptionException, EmptyDateTimeException,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            LoadingException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        TasksList tasks \u003d new TasksList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (Files.exists(PATH_TO_DATA_FOLDER)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            // Create a File in the given file path"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            File file \u003d new File(PATH_TO_DATA_FILE.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                // Create a Scanner using the File as the source"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    String encodedTask \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    Task decodedTask \u003d decodeTask(encodedTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    tasks.addTask(decodedTask);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                createDataFile(PATH_TO_DATA_FILE);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            createDataFolder(PATH_TO_DATA_FOLDER);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            createDataFile(PATH_TO_DATA_FILE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates data file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param pathToDataFile Path to data file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws LoadingException If there are failed or interrupted I/O operations."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void createDataFile(Path pathToDataFile) throws LoadingException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            hasExistingDataFile \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Files.createFile(pathToDataFile);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new LoadingException(e.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates data folder."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param pathToDataFolder Path to data folder."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws LoadingException If there are failed or interrupted I/O operations."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void createDataFolder(Path pathToDataFolder) throws LoadingException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Files.createDirectory(pathToDataFolder);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new LoadingException(e.getMessage());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Saves tasks list data to hard disk when tasks list changes."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws SavingException If there are failed or interrupted I/O operations."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void saveData(TasksList tasks) throws SavingException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            StringBuilder tasksData \u003d new StringBuilder();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            FileWriter fw \u003d new FileWriter(PATH_TO_DATA_FILE.toString());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            for (Task task : tasks.getTasksList()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                tasksData.append(encodeTask(task) + System.lineSeparator());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            fw.write(tasksData.toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new SavingException(e.getMessage());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Encodes information in a task for it to be saved and decoded in future."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param task Task to encode."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Encoded string with all information of the task."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String encodeTask(Task task) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String encodedTaskString;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String encodedTaskWithoutDateTime \u003d String.format("
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                TASK_ENCODE_FORMAT, task.getTaskTypeAbbrev(), task.getIsDone(), task.getDescription());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (task instanceof TaskWithDateTime) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String dateTime \u003d ((TaskWithDateTime) task).getDateTime();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            encodedTaskString \u003d String.format(TASK_ENCODE_FORMAT_DATE_TIME_EXTENSION, encodedTaskWithoutDateTime,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    dateTime);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            encodedTaskString \u003d encodedTaskWithoutDateTime;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return encodedTaskString;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Deciphers a string containing information of a task."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encodedTask Encoded string with information of the task."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task object with information decoded from encodedTask."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws InvalidSaveFormatException If data line in Duke has invalid encode format."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If task description is empty."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDateTimeException If task date time is empty."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Task decodeTask(String encodedTask) throws InvalidSaveFormatException, EmptyDescriptionException,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            EmptyDateTimeException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String[] taskTypeAndDetails \u003d splitTaskFromDataLine(encodedTask);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            char taskAbbrev \u003d encodedTask.charAt(TASK_ABBREVIATION_INDEX);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String taskStatus \u003d taskTypeAndDetails[TASK_STATUS_INDEX];"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            String taskDescription \u003d taskTypeAndDetails[TASK_DESCRIPTION_INDEX];"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Task decodedTask \u003d null;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            switch (taskAbbrev) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            case TODO_ABBREVIATION:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                decodedTask \u003d new Todo(taskDescription, taskStatus);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                String taskTime \u003d taskTypeAndDetails[TASK_TIME_INDEX];"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                switch (taskAbbrev) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                case DEADLINE_ABBREVIATION:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    decodedTask \u003d new Deadline(taskDescription, taskTime, taskStatus);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                case EVENT_ABBREVIATION:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    decodedTask \u003d new Event(taskDescription, taskTime, taskStatus);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    throw new InvalidSaveFormatException(encodedTask);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return decodedTask;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new InvalidSaveFormatException(encodedTask);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 217
    }
  },
  {
    "path": "src/main/java/duke/components/TasksList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class to represent a list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class TasksList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs TasksList object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public TasksList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns tasks list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Tasks list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns the total number of tasks in tasks list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Number of tasks in tasks list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Adds a task to tasks list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param task Task to add."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns the task at the specified index in tasks list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param index Index of task in zero-based numbering."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task at the specified index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Removes the task at the specified index in tasks list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param index Index of task in zero-based numbering."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 65
    }
  },
  {
    "path": "src/main/java/duke/components/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.SCANNER;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class deals with interactions with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Shows a result message to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param result Result message to be displayed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void showResultToUser(String result) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(result);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Greets user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        showResultToUser(String.format(MESSAGE_FORMAT, MESSAGE_WELCOME));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Prompts for the command and reads the text entered by the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Full line entered by the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.print(\"Enter your command: \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        // Silently consume all blank lines"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        while (inputLine.trim().isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            System.out.print(\"Enter your command: \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return inputLine;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 46
    }
  },
  {
    "path": "src/main/java/duke/components/Utils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.CommandConstants.OFFSET;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.LISTING_FORMAT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class containing utility methods used in Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Utils {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Converts an integer in string format from one-based numbering to zero-based numbering."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param index One-based integer in string format to be converted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Integer with zero-based numbering."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static int convertToZeroBased(String index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return Integer.parseInt(index) - OFFSET;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Converts an integer from zero-based numbering to one-based numbering."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param index Zero-based integer to be converted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Integer with one-based numbering."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static int convertToOneBased(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return index + OFFSET;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Converts tasks list from ArrayList to string representation."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param tasks Tasks list managing all user\u0027s tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String representation of tasks list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static String convertTasksListToString(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String tasksString \u003d IntStream.range(0, tasks.size())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                .mapToObj(index -\u003e String.format(LISTING_FORMAT, convertToOneBased(index), tasks.get(index).toString()))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                .collect(Collectors.joining());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return tasksString;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 50
    }
  },
  {
    "path": "src/main/java/duke/constants/CommandConstants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Constants related to user\u0027s input command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public final class CommandConstants {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int CHECK_VALIDITY_SPLIT_LIMIT \u003d -1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int COMMAND_ARGS_INDEX \u003d 1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int COMMAND_SPLIT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int COMMAND_TYPE_INDEX \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int DESCRIPTION_START_INDEX \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String EMPTY_STRING \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String GREEDY_WHITE_SPACE \u003d \"\\\\s+\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int OFFSET \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int ONE_APPEARANCE \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int ONE_TASK \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 28
    }
  },
  {
    "path": "src/main/java/duke/constants/DataFileConfig.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Configurations for data file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public final class DataFileConfig {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String DATA_FILE \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String DATA_FOLDER \u003d \"data\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final Path PATH_TO_DATA_FOLDER \u003d Paths.get(PROJECT_ROOT, DATA_FOLDER);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final Path PATH_TO_DATA_FILE \u003d Paths.get(PROJECT_ROOT, DATA_FOLDER, DATA_FILE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 15
    }
  },
  {
    "path": "src/main/java/duke/constants/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Messages shown in Duke application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public final class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String LINE_PREFIX \u003d \"\\t \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String HORIZONTAL_LINE \u003d LINE_PREFIX"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String LS \u003d System.lineSeparator() + LINE_PREFIX;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String LISTING_FORMAT \u003d LS + \"%d. %s\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_ADD_TITLE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_AN_EVENT \u003d \"an event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_A_DEADLINE \u003d \"a deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_A_TODO \u003d \"a todo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DELETE_TITLE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DONE_TITLE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DONE_ACK \u003d MESSAGE_DONE_TITLE + LS + \"%s\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_EMPTY_TASKS_LIST \u003d \"You don\u0027t have any tasks.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_EXIT \u003d \"Bye buddy. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_FIND_FORMAT \u003d \"Here is the list of matching tasks:%s\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_FORMAT \u003d HORIZONTAL_LINE + LS + \"%s\" + System.lineSeparator()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + HORIZONTAL_LINE + System.lineSeparator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_CREATED_NEW_DATA_FILE \u003d String.format("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            MESSAGE_FORMAT, \"Created data/duke.txt to store future tasks.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_LIST_FORMAT \u003d \"Here is the list of your tasks:%s\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_LOAD_SUCCESSFUL \u003d String.format("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            MESSAGE_FORMAT, \"Loading saved tasks completed.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_NUMBER_OF_TASKS \u003d \"Now you have %d task%s in the list.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DELETE_ACK \u003d MESSAGE_DELETE_TITLE + LS + \"%s\" + LS + MESSAGE_NUMBER_OF_TASKS;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_ADD_ACK \u003d MESSAGE_ADD_TITLE + LS + \"%s\" + LS + MESSAGE_NUMBER_OF_TASKS;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_PLURAL_NOUN \u003d \"s\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_SINGULAR_NOUN \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Hello dude! I\u0027m Duke\" + LS + \"How can I help you?\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String SAD_FACE \u003d \":(  OOPS!!! \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_NO_MATCH \u003d SAD_FACE + \"There are no results that match your keyword.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_LOADING_ERROR \u003d SAD_FACE + \"An error has occurred while loading data.\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + LS + \"%s\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_SAVING_ERROR \u003d SAD_FACE + \"An error has occurred while saving data.\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + LS + \"%s\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_WORD \u003d SAD_FACE + \"Sorry, but I don\u0027t know what that means.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_TAG \u003d SAD_FACE + \"Command tag is invalid.\" + LS"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"- For deadline, use tag /by D/M/YYYY HHMM\" + LS"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"- For event, use tag /at D/M/YYYY HHMM\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d SAD_FACE + \"The description of %s cannot be empty.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_EMPTY_KEYWORD \u003d SAD_FACE + \"Keyword cannot be empty.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_EMPTY_DATE_TIME \u003d SAD_FACE + \"The date and time of %s cannot be empty.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_REDUNDANT_PARAM \u003d SAD_FACE + \"%s command does not take parameters.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX_RANGE \u003d SAD_FACE + \"INDEX is out of range.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DUPLICATED_MARK \u003d SAD_FACE + \"%s has been done earlier.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d SAD_FACE + \"Expected an integer for INDEX.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_SAVE_FORMAT \u003d SAD_FACE + \"Save format \u0027%s\u0027 is invalid.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_ENCODE_FORMAT \u003d \"%s | %s | %s\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_ENCODE_FORMAT_DATE_TIME_EXTENSION \u003d \"%s | %s\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String VERTICAL_BAR_REGREX \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 57
    }
  },
  {
    "path": "src/main/java/duke/constants/TaskConstants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Constants related to task specifications."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public final class TaskConstants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final char DEADLINE_ABBREVIATION \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String DEADLINE_STRING_REPRESENTATION \u003d \"%s (by: %s)\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String DEADLINE_TAG \u003d \"/by\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final char EVENT_ABBREVIATION \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String EVENT_STRING_REPRESENTATION \u003d \"%s (at: %s)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String EVENT_TAG \u003d \"/at\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int TASK_ABBREVIATION_INDEX \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int TASK_DESCRIPTION_INDEX \u003d 2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int TASK_DETAILS_START_INDEX \u003d 6;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_DONE_ICON \u003d \"/\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_DONE_STRING_REPRESENTATION \u003d \"1\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_INPUT_DATE_TIME_FORMAT \u003d \"d/M/yyyy HHmm\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_OUTPUT_DATE_TIME_FORMAT \u003d \"d MMMM yyyy, h.mma\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int TASK_STATUS_INDEX \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_STRING_REPRESENTATION \u003d \"[%s][%s] %s\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int TASK_TIME_INDEX \u003d 3;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_UNDONE_ICON \u003d \"X\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String TASK_UNDONE_STRING_REPRESENTATION \u003d \"0\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final char TODO_ABBREVIATION \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 26
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A base class for the checked exceptions in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs DukeException object inheriting class Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_FORMAT, message));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DuplicatedMarkAsDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_DUPLICATED_MARK;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when task to be marked as done was marked as done previously."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class DuplicatedMarkAsDoneException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs DuplicatedMarkAsDoneException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskDescription Description of duplicated marked as done task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public DuplicatedMarkAsDoneException(String taskDescription) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_DUPLICATED_MARK, taskDescription));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_EMPTY_DATE_TIME;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when deadline/event date time is empty."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class EmptyDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs EmptyDateTimeException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskType Type of task with empty date time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public EmptyDateTimeException(String taskType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_EMPTY_DATE_TIME, taskType));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when task description is empty."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs EmptyDescriptionException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param taskType Type of the task with empty description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public EmptyDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_EMPTY_DESCRIPTION, taskType));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_EMPTY_KEYWORD;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when keyword parsed from user\u0027s input is empty."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class EmptyKeywordException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs EmptyKeywordException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public EmptyKeywordException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_EMPTY_KEYWORD));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidCommandWordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_INVALID_COMMAND_WORD;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when command word is invalid."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class InvalidCommandWordException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs InvalidCommandException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public InvalidCommandWordException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(MESSAGE_INVALID_COMMAND_WORD);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidSaveFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_INVALID_SAVE_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when there is corruption in data save format."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class InvalidSaveFormatException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs InvalidSaveFormatException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param encodedLine The specific line in the data file that is causing the error."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public InvalidSaveFormatException(String encodedLine) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_INVALID_SAVE_FORMAT, encodedLine));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidTagException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_INVALID_TAG;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when command tag is invalid."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class InvalidTagException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs InvalidTagException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public InvalidTagException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(MESSAGE_INVALID_TAG);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/LoadingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_LOADING_ERROR;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception while loading data."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class LoadingException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs LoadingException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public LoadingException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_LOADING_ERROR, message));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/RedundantParamException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_REDUNDANT_PARAM;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when input parameters are redundant."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class RedundantParamException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs RedundantParamException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandWord Command with redundant input parameters."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public RedundantParamException(String commandWord) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_REDUNDANT_PARAM, commandWord.toUpperCase()));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 18
    }
  },
  {
    "path": "src/main/java/duke/exceptions/SavingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_SAVING_ERROR;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception while saving data."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class SavingException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs SavingException object inheriting abstract class DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public SavingException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_SAVING_ERROR, message));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.DEADLINE_ABBREVIATION;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.DEADLINE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_UNDONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of a deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Deadline extends TaskWithDateTime {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Deadline object inheriting abstract class TaskWithDateTime."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates an uncompleted deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Deadline description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param by Deadline date time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If deadline description is empty."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDateTimeException If deadline date time is empty."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Deadline(String description, String by) throws EmptyDescriptionException, EmptyDateTimeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this(description, by, TASK_UNDONE_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Deadline object inheriting abstract class TaskWithDateTime."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates a completed/uncompleted deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Deadline description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param by Deadline date time."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param isDone String representation of task status (\"1\" for completed, \"0\" for uncompleted)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If deadline description is empty."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDateTimeException If deadline date time is empty."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Deadline(String description, String by, String isDone) throws EmptyDescriptionException,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            EmptyDateTimeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(description, by, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * to get string representation of Deadline including task type, status icon, description and deadline date time."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String representation of Deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(DEADLINE_STRING_REPRESENTATION, super.toString(), getDateTime());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides getTaskTypeAbbrev of abstract class Task to return deadline abbreviation (\u0027D\u0027)."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Deadline abbreviation (\u0027D\u0027)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public char getTaskTypeAbbrev() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return DEADLINE_ABBREVIATION;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.EVENT_ABBREVIATION;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.EVENT_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_UNDONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of an event task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Event extends TaskWithDateTime {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Event object inheriting abstract class TaskWithDateTime."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates an uncompleted event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param at Event date time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If event description is empty."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDateTimeException If event date time is empty."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Event(String description, String at) throws EmptyDescriptionException, EmptyDateTimeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this(description, at, TASK_UNDONE_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Event object inheriting abstract class TaskWithDateTime."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates a completed/uncompleted event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param at Event date time."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param isDone String representation of task status (\"1\" for completed, \"0\" for uncompleted)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If event description is empty."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDateTimeException If event date time is empty."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Event(String description, String at, String isDone) throws EmptyDescriptionException,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            EmptyDateTimeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(description, at, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * to get string representation of Event including task type, status icon, description and event time."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String representation of Event."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(EVENT_STRING_REPRESENTATION, super.toString(), getDateTime());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides getTaskTypeAbbrev of abstract class Task to return event abbreviation (\u0027E\u0027)."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Event abbreviation (\u0027E\u0027)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public char getTaskTypeAbbrev() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return EVENT_ABBREVIATION;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.DuplicatedMarkAsDoneException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_AN_EVENT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_A_DEADLINE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_A_TODO;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_DONE_ICON;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_DONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_UNDONE_ICON;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_UNDONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A base class for task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Task object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param isDone String representation of task status (\"1\" for completed, \"0\" for uncompleted)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If task description is empty."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Task(String description, String isDone) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            if (this instanceof Todo) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                throw new EmptyDescriptionException(MESSAGE_A_TODO);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } else if (this instanceof Deadline) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                throw new EmptyDescriptionException(MESSAGE_A_DEADLINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } else if (this instanceof Event) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                throw new EmptyDescriptionException(MESSAGE_AN_EVENT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.isDone \u003d (isDone.equals(TASK_DONE_STRING_REPRESENTATION));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns task description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns an icon representing task\u0027s status."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Icon representing task\u0027s status."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return (isDone ? TASK_DONE_ICON : TASK_UNDONE_ICON);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns task\u0027s status in string representation (\"0\" or \"1\")."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String representation (\"0\" or \"1\") of task\u0027s status."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getIsDone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return isDone ? TASK_DONE_STRING_REPRESENTATION : TASK_UNDONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns task type abbreviation."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return \u0027T\u0027, \u0027D\u0027 or \u0027E\u0027 depending on task type."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public abstract char getTaskTypeAbbrev();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Marks task status as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws DuplicatedMarkAsDoneException If task has been marked as done previously."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void markAsDone() throws DuplicatedMarkAsDoneException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new DuplicatedMarkAsDoneException(description);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Object to get string representation of Task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * including task type abbreviation, status icon and description."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String representation of Task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(TASK_STRING_REPRESENTATION, getTaskTypeAbbrev(), getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 101
    }
  },
  {
    "path": "src/main/java/duke/task/TaskWithDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.components.Parser.parseStringFormatDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_AN_EVENT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.Messages.MESSAGE_A_DEADLINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A base class for task with date time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public abstract class TaskWithDateTime extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected String dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs TaskWithDateTime object inheriting abstract class Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param dateTime Date and time of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param isDone String representation of task status (\"1\" for completed, \"0\" for uncompleted)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If task description is empty."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDateTimeException If task date time is empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public TaskWithDateTime(String description, String dateTime, String isDone) throws EmptyDescriptionException,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            EmptyDateTimeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (dateTime.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            if (this instanceof Deadline) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                throw new EmptyDateTimeException(MESSAGE_A_DEADLINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } else if (this instanceof Event) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                throw new EmptyDateTimeException(MESSAGE_AN_EVENT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            this.dateTime \u003d parseStringFormatDateTime(dateTime);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns the date and time of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Task date and time."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TASK_UNDONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static duke.constants.TaskConstants.TODO_ABBREVIATION;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of a todo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Todo object inheriting abstract class Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates an uncompleted todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Todo description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If todo description is empty."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Todo(String description) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this(description, TASK_UNDONE_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Todo object inheriting abstract class Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates a completed/uncompleted todo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param description Description of todo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param isDone String representation of task status (\"1\" for completed, \"0\" for uncompleted)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws EmptyDescriptionException If todo description is empty."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Todo(String description, String isDone) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides getTaskTypeAbbrev of abstract class Task to return todo abbreviation (\u0027T\u0027)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Todo abbreviation (\u0027T\u0027)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public char getTaskTypeAbbrev() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return TODO_ABBREVIATION;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 45
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "deadline return book /by 10/10/2020 0800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "find book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "if exist .\\data\\duke.txt del .\\data\\duke.txt"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 4,
      "-": 18
    }
  }
]
