[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alstontham"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "alstontham": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "import duke.commands.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "import duke.commands.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": "import duke.commands.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": "import duke.commands.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Hey there! I\u0027m Duke\\n\" + \"What would you like to do?\" + \"\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        //Takes user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                executeCommand(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                e.getErrorMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private static void executeCommand(Scanner input) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        //this do-while loop asks users for input, can add items to lists and print the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        String userCommand \u003d userInput.split(\"\\\\s\", 2)[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        int stringLen \u003d userInput.length();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        //adds a todo item to the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        if (userCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                String taskDetails \u003d userInput.split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                Task newTask \u003d new Todo(taskDetails);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                taskList.add(newTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                printNewTask(newTask, taskList.size());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                throw new DukeCommandMissingDescriptionException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        //adds a deadline event to the list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        else if (userCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            if (!userInput.contains(\" /by \")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                throw new DukeDeadlineMissingByException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                String taskDetails \u003d userInput.split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                Task newTask \u003d new Deadline(obtainDeadlineDescription(taskDetails), obtainDeadlineDate(taskDetails));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                taskList.add(newTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                printNewTask(newTask, taskList.size());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                throw new DukeCommandMissingDescriptionException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        //adds an event item to the list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        else if (userCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            if (!userInput.contains(\" /at \")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                throw new DukeEventMissingAtException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                String taskDetails \u003d userInput.split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                Task newTask \u003d new Event(obtainEventDescription(taskDetails), obtainEventDate(taskDetails));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                taskList.add(newTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                printNewTask(newTask, taskList.size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                throw new DukeCommandMissingDescriptionException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        //lists out respective tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                throw new DukeTaskListEmptyException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            printTaskList(taskList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        //marks a task as done"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        else if (userCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                int i \u003d Integer.parseInt(userInput.substring(5, stringLen)) - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                taskList.get(i).setDone(true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                printCompletedTask(taskList.get(i));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                throw new DukeInvalidIndexException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        else if (userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            System.out.println(\"Bye, see you soon!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        //handles the case for when an invalid command is entered"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            throw new DukeInvalidCommandException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private static String obtainDeadlineDescription(String description) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return description.split(\"/by\", 2)[0];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private static String obtainEventDescription(String description) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return description.split(\"/at\", 2)[0];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private static String obtainDeadlineDate(String description) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return description.split(\"/by\", 2)[1];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private static String obtainEventDate(String description) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return description.split(\"/at\", 2)[1];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private static void printNewTask(Task task, int totalTasks) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Ok! I\u0027ve added the following task:\\n\" + task + \"\\n\" + \"You now have \""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + totalTasks + \" task(s) in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private static void printTaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"I\u0027ve printed your list of tasks below!\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        //goes through each item in the array and lists them out"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            System.out.println((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private static void printCompletedTask(Task task) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Ok! I\u0027ve marked this task as complete!\\n\" + task + \"\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alstontham": 146
    }
  },
  {
    "path": "src/main/java/duke/commands/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    protected String deadlineDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public Deadline(String description, String deadlineDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return \"[D] \" + super.toString() + \" (by:\" + deadlineDate + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    protected String eventDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public Event (String description, String eventDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return \"[E] \" + super.toString() + \" (at:\" + eventDate + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeCommandMissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class DukeCommandMissingDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public DukeCommandMissingDescriptionException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void getErrorMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Please enter a valid description!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeDeadlineMissingByException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class DukeDeadlineMissingByException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public DukeDeadlineMissingByException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void getErrorMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Remember to put \u0027by\u0027 when specifying a deadline!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeEventMissingAtException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class DukeEventMissingAtException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public DukeEventMissingAtException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void getErrorMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Remember to put \u0027at\u0027 in your event command!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "//Parent Exception class for the duke.Duke program"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void getErrorMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"An error has occurred.\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class DukeInvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public DukeInvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void getErrorMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Please enter a valid command!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeInvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class DukeInvalidIndexException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public DukeInvalidIndexException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void getErrorMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Please enter a valid index number for the command!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeTaskListEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class DukeTaskListEmptyException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public DukeTaskListEmptyException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void getErrorMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Your task list is currently empty! Add some first before you view them!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alstontham"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "alstontham": 2,
      "-": 19
    }
  }
]
