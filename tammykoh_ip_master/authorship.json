[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Duke is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI). "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. Ensure you have **Java 11** or above installed in your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. Download the latest duke.jar from [here](https://github.com/tammykoh/ip/releases/tag/A-Release)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. Copy the file to the folder you want to use as the home folder for Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. Follow the following steps to start up Duke. If the setup is correct, you should see something like the following on your first launch:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   1. Open Command Prompt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   1. Navigate to the folder with the jar file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   1. Enter `java -jar duke.jar`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   Hey there! I\u0027m Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   ______________________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   Seems like you\u0027re new here. No worries! Your file is being created..."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   We\u0027re set and ready to go. What would you like me to do?"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   ______________________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. Type the command in the command box and press Enter to execute it. Refer to the Features below for the available commands."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Adding a task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Adding a todo: `todo`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Adds a todo task into the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Format:  `todo TASK`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Example: `todo write an essay`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Adding a deadline: `deadline`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Adds a deadline task into the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Format:  `deadline TASK /by DATE/TIME`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Example: `deadline complete assignment /by 3Oct`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Adding an event: `event`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Adds an event task into the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Format:  `event TASK /at DATE/TIME`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Example: `event attend a course /at LT23 on 5Oct 2pm`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Listing all task: `list`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Shows a list of all the tasks in the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Format: `list`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Marking task as done: `done`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Marks a task as done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Format: `done INDEX`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Example: `done 2`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Removes a task from the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Format: `delete INDEX`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Example: `delete 3`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Finding a task: `find`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Finds all task containing the given keyword."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Format: `find KEYWORD`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Example: `find book`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Exits the program."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Format: `bye`"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 54,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final UserInterface ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Prints the welcome message, and loads up the data from the storage file and prints ready message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Reads and executes user command until termination"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ui.displayWelcomeMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        storage.loadTextFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ui.displayReadyMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String userCommand \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            parser.executeUserCommand(userCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 30,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Represents the file used to store address book data."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Signals an error caused by an invalid command. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printInvalidCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Oh no! I do not know what that command means \\u2639\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Signals an error caused by an empty description field. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printEmptyDescription(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Oops! You can\u0027t leave the description for \" + command + \" empty \\u2639\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Signals an error caused by the lack of /at or /by for the event and deadline respectively. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printEmptyDetails(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Oops! You can\u0027t leave the date/time for \" + command + \" empty \\u2639\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Signals an error caused by entering a non-integer. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printInvalidTaskNumber() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Please input a valid task number.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Signals an error caused by entering an index that is not within the task list. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printOutOfRange(int count) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (count \u003e 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Please input a task number between 1 and \" + count);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Please input task number 1.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"You have no task in your list\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tammykoh": 39
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final UserInterface ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param rawUserCommand full user input string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void executeUserCommand(String rawUserCommand) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String userCommand \u003d rawUserCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String details \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int dividerPosition \u003d rawUserCommand.indexOf(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (dividerPosition !\u003d -1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            userCommand \u003d rawUserCommand.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            details \u003d rawUserCommand.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        switch(userCommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (details !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                taskList.addToList(userCommand, details);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                DukeException.printEmptyDescription(userCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            taskList.displayList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            taskList.setAsDone(details);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            taskList.deleteFromList(userCommand, details);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (dividerPosition !\u003d -1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                taskList.searchList(details);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                DukeException.printEmptyDescription(userCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            exitProgram();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DukeException.printInvalidCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Displays goodbye and terminates the program */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static void exitProgram() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ui.displayGoodbyeMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 72
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Represents the file used to store address book data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Loads a text file upon starting the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Creates a text file if the text file does not exist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void loadTextFile() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        File file \u003d new File(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        File folder \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Loading existing file...\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            readTextFile(file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Seems like you\u0027re new here. No worries! Your file is being created...\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Reads the text file line by line and adds each task to TaskList"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static void readTextFile(File file) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Scanner sf \u003d new Scanner(file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            while (sf.hasNextLine()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                taskList.addTextToList(sf.nextLine());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            sf.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Saves the new task in TaskList to the storage file. */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void addToFile() throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int count \u003d TaskList.getCount();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String pathName \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(pathName, true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String taskToFile \u003d taskToFileFormat(count);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fw.write(taskToFile);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fw.write(\"\\n\" + taskToFile);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Appends the file when a task in TaskList has been done or deleted. */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void appendFile() throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int count \u003d TaskList.getCount();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String tempPath \u003d \"./data/temp.txt\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String pathName \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        File tempFile \u003d new File(tempPath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        File file \u003d new File(pathName);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        tempFile.createNewFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(tempPath, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i\u003d0; i\u003ccount; i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String taskLine \u003d taskToFileFormat(i+1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                fw.write(taskLine);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                fw.write(\"\\n\" + taskLine);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Files.delete(Paths.get(pathName));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        tempFile.renameTo(file);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Converts a task from the TaskList into a certain format to store in a file"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param taskNumber task that needs to be converted into storing format"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @return the data in string format"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static String taskToFileFormat(int taskNumber) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String category \u003d tasks.get(taskNumber-1).getCategory().toUpperCase();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int taskDone \u003d tasks.get(taskNumber-1).getDone() ? 1 : 0;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String details \u003d tasks.get(taskNumber-1).getDescription();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String datetime \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (category.equals(\"T\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            return \"T | \" + taskDone + \" | \" + details;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (category.equals(\"D\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            datetime \u003d ((Deadline) tasks.get(taskNumber-1)).getBy();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (category.equals(\"E\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            datetime \u003d ((Event) tasks.get(taskNumber-1)).getAt();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return category + \" | \" + taskDone + \" | \" + details + \" | \" + datetime;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 114
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/** Represents a Deadline Task in the TaskList */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public Deadline(String category, String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/** Represents a Event Task in the TaskList */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public Event(String category, String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Represents a Task in the Task List."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected String category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public Task(String category, String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Returns TICK_SYMBOL if task is completed and CROSS_SYMBOL if it is not complete."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 44
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Represents and contains the data of the entire Task List."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Total number of tasks in the list */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static int count \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final UserInterface ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Adds a task to the Task List."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void addToList(String command, String details) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ToDo todo \u003d new ToDo(\"t\", details);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            tasks.add(todo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String item, datetime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int dividerPosition \u003d details.indexOf(\"/\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (dividerPosition !\u003d -1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                item \u003d details.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                datetime \u003d details.substring(dividerPosition + 4);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                switch(command) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    Deadline deadline \u003d new Deadline(\"d\", item, datetime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    Event event \u003d new Event(\"e\", item, datetime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                DukeException.printEmptyDetails(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"    \" + tasks.get(count-1));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ui.printNumberOfTask(count);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        storage.addToFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Adds existing task from file to the Task List upon starting the application."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void addTextToList(String fileLine) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] taskLine \u003d fileLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String command \u003d taskLine[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String done \u003d taskLine[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String item \u003d taskLine[2];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String datetime;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ToDo todo \u003d new ToDo(\"t\", item);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            tasks.add(todo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            datetime \u003d taskLine[3];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Deadline deadline \u003d new Deadline(\"d\", item, datetime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            tasks.add(deadline);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            datetime \u003d taskLine[3];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Event event \u003d new Event(\"e\", item, datetime);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            tasks.add(event);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            tasks.get(count-1).setAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Deletes a task to the Task List."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void deleteFromList(String command, String details) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (details \u003d\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DukeException.printEmptyDescription(command);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int taskNumber \u003d parseInt(details);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String task \u003d tasks.get(taskNumber - 1).toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Got it! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            count--;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            storage.appendFile();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printNumberOfTask(count);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DukeException.printInvalidTaskNumber();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DukeException.printOutOfRange(count);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Sets a task as done in the Task List."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void setAsDone(String details) throws IOException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int taskNumber \u003d parseInt(details);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            task.setAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    + \"    \" + task);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            storage.appendFile();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DukeException.printInvalidTaskNumber();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DukeException.printOutOfRange(count);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Displays the entire Task List."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void displayList() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"You have no task in your list.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Here is the task in your list:\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i\u003d0; i\u003ccount; i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int taskNumber \u003d i + 1;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"    \" + taskNumber + \". \" + task);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void searchList(String toFind){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int numOfMatches \u003d 0;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i\u003d0; i\u003ccount; i++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String description \u003d tasks.get(i).getDescription();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            boolean check \u003d description.contains(toFind);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (check) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                numOfMatches++;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                System.out.println(\"    \" + numOfMatches + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (numOfMatches \u003d\u003d 0) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"    --- no matches found ---    \");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static int getCount() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static ArrayList\u003cTask\u003e getArrayList() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 175
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/** Represents a ToDo Task in the TaskList */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public ToDo(String category, String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 14
    }
  },
  {
    "path": "src/main/java/duke/ui/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Reads the text entered by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @return userCommand (full line) entered by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static String getUserInput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String userCommand \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Displays the welcome message upon the start of the application. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(logo + \"Hey there! I\u0027m Duke.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Displays the ready message once the file has been set-up. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void displayReadyMessage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"We\u0027re set and ready to go. What would you like me to do?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Prints a dividing line. */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"______________________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Displays the goodbye message upon the termination of the application. */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void displayGoodbyeMessage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Goodbye. Hope to see you again soon! :)\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /** Prints the number of task in the list. */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printNumberOfTask(int count) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"You have no more task in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"You have 1 task in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"You have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 58
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 1,
      "-": 20
    }
  }
]
