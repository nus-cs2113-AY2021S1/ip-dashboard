[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "T | 1 | xx"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "T | 0 | xt"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "E | 0 | hey | 123"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "D | 0 | bb | 123"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "T | 0 | cy"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static UserInterface ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ui.displayWelcomeMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        storage.loadTextFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String userCommand \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            parser.executeUserCommand(userCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 20,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printInvalidCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Oh no! I do not know what that command means \\u2639\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printEmptyDescription(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Oops! You can\u0027t leave the description for \" + command + \" empty \\u2639\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void printEmptyDetails(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Oops! You can\u0027t leave the date/time for \" + command + \" empty \\u2639\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tammykoh": 17
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static UserInterface ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void executeUserCommand(String rawUserCommand) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String userCommand \u003d rawUserCommand.trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String details \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int dividerPosition \u003d rawUserCommand.indexOf(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (dividerPosition !\u003d -1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            userCommand \u003d rawUserCommand.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            details \u003d rawUserCommand.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        switch(userCommand) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                //Fallthrough"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                if (dividerPosition !\u003d -1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    taskList.addToList(userCommand, details);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    DukeException.printEmptyDescription(userCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                taskList.deleteFromList(userCommand, details);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                taskList.displayList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                taskList.setAsDone(taskNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                exitProgram();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                DukeException.printInvalidCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static void exitProgram() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ui.displayGoodbyeMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 57
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void loadTextFile() throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        File file \u003d new File(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        File folder \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            readTextFile(file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"File does not exist. Creating file...\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static void readTextFile(File file) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Scanner sf \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            while (sf.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                taskList.addTextToList(sf.nextLine());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            sf.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void addToFile() throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int count \u003d TaskList.getCount();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String pathName \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(pathName, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String taskToFile \u003d taskToFileFormat(count);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fw.write(taskToFile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fw.write(\"\\n\" + taskToFile);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void appendFile() throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int count \u003d TaskList.getCount();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String tempPath \u003d \"./data/temp.txt\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String pathName \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        File tempFile \u003d new File(tempPath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        File file \u003d new File(pathName);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        tempFile.createNewFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(tempPath, true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i\u003d0; i\u003ccount; i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String taskLine \u003d taskToFileFormat(i+1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                fw.write(taskLine);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                fw.write(\"\\n\" + taskLine);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Files.delete(Paths.get(pathName));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        tempFile.renameTo(file);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static String taskToFileFormat(int taskNumber) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getArrayList();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String category \u003d tasks.get(taskNumber-1).getCategory().toUpperCase();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int taskDone \u003d tasks.get(taskNumber-1).getDone() ? 1 : 0;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String details \u003d tasks.get(taskNumber-1).getDescription();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String datetime \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (category.equals(\"T\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            return \"T | \" + taskDone + \" | \" + details;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (category.equals(\"D\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            datetime \u003d ((Deadline) tasks.get(taskNumber-1)).getBy();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (category.equals(\"E\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            datetime \u003d ((Event) tasks.get(taskNumber-1)).getAt();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return category + \" | \" + taskDone + \" | \" + details + \"| \" + datetime;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 95
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public Deadline(String category, String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public Event(String category, String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected String category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public Task(String category, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 39
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    // Total number of tasks in the list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static int count \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void addToList(String command, String details) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ToDo todo \u003d new ToDo(\"t\", details);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            tasks.add(todo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String item \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String datetime \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int dividerPosition2 \u003d details.indexOf(\"/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (dividerPosition2 !\u003d -1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                item \u003d details.substring(0, dividerPosition2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                datetime \u003d details.substring(dividerPosition2 + 4);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                switch(command) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                        Deadline deadline \u003d new Deadline(\"d\", item, datetime);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                        Event event \u003d new Event(\"e\", item, datetime);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                DukeException.printEmptyDetails(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"    \" + tasks.get(count-1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        storage.addToFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void addTextToList(String fileLine) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] taskLine \u003d fileLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String command \u003d taskLine[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String done \u003d taskLine[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String item \u003d taskLine[2];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String datetime \u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                ToDo todo \u003d new ToDo(\"t\", item);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                datetime \u003d taskLine[3];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                Deadline deadline \u003d new Deadline(\"d\", item, datetime);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                datetime \u003d taskLine[3];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                Event event \u003d new Event(\"e\", item, datetime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (done \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            tasks.get(count-1).setAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void deleteFromList(String command, String details) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (details \u003d\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DukeException.printEmptyDescription(command);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                String task \u003d tasks.get(taskNumber-1).toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                System.out.println(\"Got it! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                tasks.remove(taskNumber-1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                count--;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                System.out.println(\"Please input a valid task number\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                System.out.println(\"Please input a task number between 1 and \" + count);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void setAsDone(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        task.setAsDone();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                + \"    \" + task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        storage.appendFile();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void displayList() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i\u003d0; i\u003ccount; i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int taskNumber \u003d i + 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"    \" + taskNumber + \". \" + task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            taskNumber++;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static int getCount() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static ArrayList\u003cTask\u003e getArrayList() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    };"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 124
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public ToDo(String category, String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(category, description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 13
    }
  },
  {
    "path": "src/main/java/duke/ui/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(logo + \"Hey there! I\u0027m Duke.\\n\" + \"How may I be of service?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static void displayGoodbyeMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Goodbye. Hope to see you again soon! :)\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public static String getUserInput() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String userCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 1,
      "-": 20
    }
  }
]
