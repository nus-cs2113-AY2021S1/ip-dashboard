[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static final String horizontalLine \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        printGreetings();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        execute();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static void makeTextBorder(String text) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.print(horizontalLine + text + System.lineSeparator() + horizontalLine);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void printGreetings() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String greet \u003d \"Hello! I\u0027m Duke, your personal task assistant!\\nWhat can I do for you today?\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        makeTextBorder(greet);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void execute() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        FileIO io \u003d new FileIO();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputParser parsedInput \u003d new InputParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                switch (parsedInput.command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String farewellMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    makeTextBorder(farewellMessage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    FileIO.saveTasksList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    // Fallthrough"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    tasks.add(new ToDo(parsedInput.commandDescription));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    Task.getTaskTracker(tasks.get(Task.taskNumber));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    tasks.add(new Deadline(parsedInput.taskDescription.trim(), parsedInput.slashDescription.trim()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    Deadline.getTaskTracker(tasks.get(Deadline.taskNumber));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    tasks.add(new Event(parsedInput.taskDescription.trim(), parsedInput.slashDescription.trim()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    Event.getTaskTracker(tasks.get(Event.taskNumber));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    System.out.println(horizontalLine + \"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int i \u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    for (Task str : tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        System.out.println(i + \".\" + str);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        i++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int doneIndex \u003d Integer.parseInt(parsedInput.commandDescription);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    if (doneIndex \u003e tasks.size() || doneIndex \u003c 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        throw new DukeException(DukeException.ExceptionType.INDEX_OUT_OF_BOUND);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        tasks.get(doneIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    System.out.println(horizontalLine + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    System.out.println(\"[\" + tasks.get(doneIndex - 1).getStatusIcon() + \"] \" + tasks.get(doneIndex - 1).getDescription() + \"\\n\" + horizontalLine);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int deleteIndex \u003d Integer.parseInt(parsedInput.commandDescription) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    if (deleteIndex \u003e tasks.size() || deleteIndex \u003c 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        throw new DukeException(DukeException.ExceptionType.INDEX_OUT_OF_BOUND);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        System.out.println(horizontalLine + \"Noted. I have removed this task:\\n\" + tasks.get(deleteIndex) + \"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        tasks.remove(deleteIndex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        Task.taskNumber--;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\" + horizontalLine);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    throw new DukeException(DukeException.ExceptionType.INVALID_INPUT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new DukeException(DukeException.ExceptionType.INDEX_OUT_OF_BOUND);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yeapcl": 95,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected enum ExceptionType {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        INVALID_INPUT(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        EMPTY_DESCRIPTION(\"\\u2639 OOPS!!! The description of a task cannot be empty.\\n\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        INDEX_OUT_OF_BOUND(\"\\u2639 OOPS!!! No such task is found!\\n\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        FILE_NOT_FOUND(\"duke.txt not found in data/duke.txt, please check again!\\n\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        FOLDER_NOT_FOUND(\"The folder ./data/ is not found, please check again!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        private String error;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        private String horizontalLine \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ExceptionType(String error) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            this.error \u003d error;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return \"\\n\" + horizontalLine + error + horizontalLine;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public DukeException(ExceptionType error) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(error.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 30
    }
  },
  {
    "path": "src/main/java/duke/FileIO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class FileIO {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected static ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected static String taskType, isDoneString, taskDescription;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected static boolean isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected static String[] taskDescriptionDetails;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected static final String DATA_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    Path path \u003d Paths.get(\"./data/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public FileIO() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(DukeException.ExceptionType.FOLDER_NOT_FOUND);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            readFileContents();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(DukeException.ExceptionType.FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void printFileContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        File f \u003d new File(DATA_PATH);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void readFileContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        File f \u003d new File(DATA_PATH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            list.add(s.nextLine());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"duke.txt detected; Loading previous data...\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Data loaded. You can access your previous saved tasks by using the command \u0027list\u0027\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        parseFromFile();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void parseFromFile() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (String arr : list) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            taskType \u003d arr.substring(0,1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            isDoneString \u003d arr.substring(4, 5);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            isDone \u003d isDoneString.equals(\"1\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            taskDescription \u003d arr.substring(8);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Duke.tasks.add(new ToDo(taskDescription, isDone));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Task.getTaskTracker(Duke.tasks.get(Task.taskNumber), true);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                taskDescriptionDetails \u003d taskDescription.split(\"\\\\|\",2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Duke.tasks.add(new Deadline(taskDescriptionDetails[0].trim(), taskDescriptionDetails[1].trim(), isDone));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Deadline.getTaskTracker(Duke.tasks.get(Deadline.taskNumber), true);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                taskDescriptionDetails \u003d taskDescription.split(\"\\\\|\",2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Duke.tasks.add(new Event(taskDescriptionDetails[0].trim(), taskDescriptionDetails[1].trim(), isDone));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Deadline.getTaskTracker(Duke.tasks.get(Event.taskNumber), true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static void saveTasksList() throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        File saveFile \u003d new File(DATA_PATH);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        boolean fileExists \u003d saveFile.exists();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (!fileExists) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(DukeException.ExceptionType.FOLDER_NOT_FOUND);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(DATA_PATH);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            for (Task readArrayList : Duke.tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String taskType \u003d readArrayList.toString().substring(1, 2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String checkIsDone, finalString, taskDetailBy, taskDetailAt;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if (readArrayList.getStatusIcon().equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    checkIsDone \u003d \"1\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    checkIsDone \u003d \"0\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int count1 \u003d readArrayList.toString().lastIndexOf(\"by: \") + 4;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int count2 \u003d readArrayList.toString().indexOf(\")\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    taskDetailBy \u003d readArrayList.toString().substring(count1, count2);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    finalString \u003d taskType + \" | \" + checkIsDone + \" | \" + readArrayList.getDescription() + \" | \" + taskDetailBy;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int count1 \u003d readArrayList.toString().lastIndexOf(\"at: \") + 4;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int count2 \u003d readArrayList.toString().indexOf(\")\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    taskDetailAt \u003d readArrayList.toString().substring(count1, count2);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    finalString \u003d taskType + \" | \" + checkIsDone + \" | \" + readArrayList.getDescription() + \" | \" + taskDetailAt;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    finalString \u003d taskType + \" | \" + checkIsDone + \" | \" + readArrayList.getDescription();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.write(finalString + System.lineSeparator());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(DukeException.ExceptionType.FOLDER_NOT_FOUND);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 141
    }
  },
  {
    "path": "src/main/java/duke/InputParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String command, commandDescription, taskDescription, slashDescription;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public InputParser() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] strings;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String userInput \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        checkCommandValidity(userInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        strings \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        command \u003d strings[0].toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        boolean isSlashExpected \u003d userInput.startsWith(\"deadline\") || userInput.startsWith(\"event\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        boolean isSingleWordCommand \u003d userInput.startsWith(\"bye\") || userInput.startsWith(\"list\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (isSlashExpected) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            strings \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            strings \u003d strings[1].split(\"/\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            taskDescription \u003d strings[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            slashDescription \u003d strings[1].substring(3);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (userInput.contains(\" \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            strings \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            commandDescription \u003d strings[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (isSingleWordCommand) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            command \u003d userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(DukeException.ExceptionType.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void checkCommandValidity(String string) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (string \u003d\u003d null || string.isEmpty() || string.isBlank()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(DukeException.ExceptionType.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static int taskNumber \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static void getTaskTracker(Task item) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Duke.makeTextBorder(\"Got it. I\u0027ve added this task:\\n\" + item.toString() + \"\\nNow you have \" + (taskNumber + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        taskNumber++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static void getTaskTracker(Task item, boolean isFromFile) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        taskNumber++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 44
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 18
    }
  }
]
