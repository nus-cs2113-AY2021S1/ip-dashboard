[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "T | ✓ | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "D | ✘ | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "E | ✓ | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "T | ✘ | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "D | ✘ | submit homework | next Friday 2359hours"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Duke is a task management application that helps user to manage tasks such as todos, deadlines and events, through a simple command-line interface."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "It can be executed on any platform that supports Java 11."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- [Instructions](#instructions)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - [Adding a todo task: `todo`](#adding-a-todo-task-todo)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - [Adding a deadline task: `deadline`](#adding-a-deadline-task-deadline)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - [Adding an event task: `event`](#adding-an-event-task-event)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - [Listing all tasks: `list`](#listing-all-tasks-list)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - [Finding a task: `find`](#finding-a-task-find)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - [Completing a task: `done`](#completing-a-task-done)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - [Deleting a task: `delete`](#deleting-a-task-delete)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - [Existing the program: `bye`](#existing-the-program-bye)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- [Command summary](#command-summary)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Add tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Duke supports 3 different types of task to be managed, namely `todo`, `deadline` and `event`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Manage tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Duke allows the tasks to be managed, such as marking it as completed, or deleting the task from the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Search tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Duke allows user to easily search for a task that contains the keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Save tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Duke automatically saves all your tasks in a text file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Load tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Duke automatically loads the saved tasks from the previous session."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "## Instructions"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Adding a todo task: `todo`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Adds a todo task to Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- `DESCRIPTION` should not be an empty field"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`todo read book`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Adds a deadline task to Duke."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Format: `deadline DESCRIPTION_1 /by DESCRIPTION_2`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- the keyword `/by` must be specified followed by `DESCRIPTION_2`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- both `DESCRIPTION_1` and `DESCRIPTION_2` should not be an empty field"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`deadline return book /by June 6th`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Adding an event task: `event`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Adds an event task to Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Format: `event DESCRIPTION_1 /at DESCRIPTION_2`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- the keyword `/at` must be specified followed by `DESCRIPTION_2`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- both `DESCRIPTION_1` and `DESCRIPTION_2` should not be an empty field"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`event project meeting /at Aug 2-4pm at NUS`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Listing all tasks: `list`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Shows a list of tasks saved by Duke"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Finding a task: `find`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Duke finds and lists all task(s) that matches the `KEYWORD`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- Keyword(s) is case-sensitive."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- `KEYWORD` should not be an empty field"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Completing a task: `done`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Duke marks a task as done as specified by user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- The `INDEX` must be within the range of the enumerated list. Type `list` to get an overview of the tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Duke deletes a task as specified by user."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- The `INDEX` must be within the range of the enumerated list. Type `list` to get an overview of the tasks."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Existing the program: `bye`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Quit the Duke program. Duke saves all the tasks in a text file in the default location."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Action | Format | Examples"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "------ | -------| --------"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "todo | `todo DESCRIPTION` | `todo read book`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "deadline | `deadline DESCRIPTION_1 /by DESCRIPTION_2` | `deadline return book /by June 6th`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "event | `event DESCRIPTION_1 /at DESCRIPTION_2` | `event project meeting /at Aug 6th 2-4pm at NUS`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list | `list` | `list`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "find | `find KEYWORD` | `find book`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "done | `done INDEX` | `done 1`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "delete | `delete INDEX` | `delete 1`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "bye | `bye` | `bye`"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 124,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Creates a new Duke object based on the given file path. Duke will load/write from/to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * the text file in the specified path."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param filePath relative location of the folder and text file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * run Duke task assistant until it terminates"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 56,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 18
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Command(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public DeadlineCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] parsedInputs \u003d input.split(\" /by \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Deadline newTask \u003d new Deadline(parsedInputs[0], parsedInputs[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.printDeadline(tasks, newTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public DeleteCommand(String information) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int index \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Task removedTask \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.printDelete(tasks, removedTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public DoneCommand(String information) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int index \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Task completedTask \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (!completedTask.isDone()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"That task was already done!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.printDone(completedTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 27
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public EventCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] parsedInputs \u003d input.split(\" /at \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Event newTask \u003d new Event(parsedInputs[0], parsedInputs[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.printEvent(tasks, newTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 23
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(keyword);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        TaskList tasksFound \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (Task t : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (t.getDescription().contains(input)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                tasksFound.addTask(t);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.printFind(tasksFound, input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            ui.printList(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 17
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public TodoCommand(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ToDo newTask \u003d new ToDo(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.printToDo(tasks, newTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 22
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 8
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] parsedInputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        switch (parsedInputs[0]) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_TODO:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            checkTodoValidity(parsedInputs);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new TodoCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            checkDeadlineValidity(parsedInputs);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new DeadlineCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            checkEventValidity(parsedInputs);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new EventCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            checkTaskIndexValidity(parsedInputs);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new DoneCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            checkTaskIndexValidity(parsedInputs);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new DeleteCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            verifyFind(parsedInputs);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new FindCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Sorry! I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkTaskIndexValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Please enter the task number you want to mark as done!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered an invalid task number!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkTodoValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your todo command!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkDeadlineValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your deadline command!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (!input[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"A deadline task requires a \u0027/by\u0027 to indicate time frame!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int byPosition \u003d input[1].indexOf(\"/by\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input[1].substring(0, byPosition).isBlank()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your deadline command!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (input[1].substring(byPosition + 3).isBlank()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Please indicate time frame!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkEventValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your event command!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (!input[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"An event task requires an \u0027/at\u0027 to indicate location!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int atPosition \u003d input[1].indexOf(\"/at\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input[1].substring(0, atPosition).isBlank()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your event command!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (input[1].substring(atPosition + 3).isBlank()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"An event task requires an \u0027/at\u0027 to indicate location!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void verifyFind(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Search description is empty\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 96
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final String FILE_PATH;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static final int MAX_SIZE \u003d 100;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Storage(String FILE_PATH) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.FILE_PATH \u003d FILE_PATH;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        initialise();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void initialise() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        File storageFile \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        File storageFolder \u003d new File(storageFile.getParent());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (storageFolder.exists() \u0026\u0026 storageFolder.isDirectory()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Data folder found! Finding duke.txt...\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Data folder not found! Creating one...\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (!storageFolder.mkdir()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new DukeException(\"Attempt to create a data folder failed.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (storageFile.createNewFile()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"No existing duke.txt found! Creating one...\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"Existing duke.txt found. Loading previously saved task list...\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Attempt to create duke.txt failed.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Previous task list loaded successfully\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Scanner reader;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            reader \u003d new Scanner(new File(FILE_PATH));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Attempt to read duke.txt failed.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(MAX_SIZE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            loadTask(reader, tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void loadTask(Scanner reader, ArrayList\u003cTask\u003e storageTasks) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] parsedLines \u003d reader.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (int i \u003d 0; i \u003c parsedLines.length; i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            parsedLines[i] \u003d parsedLines[i].trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        switch (parsedLines[0]) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            task \u003d new ToDo(parsedLines[2]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            task \u003d new Deadline(parsedLines[2], parsedLines[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            task \u003d new Event(parsedLines[2], parsedLines[3]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Existing task list format is corrupted. Please check again.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (parsedLines[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        storageTasks.add(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void write(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(FILE_PATH));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            writeTask(fw, tasks);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Attempt to write to duke.txt failed.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void writeTask(FileWriter fw, ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.write(t.getTaskType() + \" | \" + t.getStatusIcon() + \" | \" + t.getDescription());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            switch (t.getTaskType()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.write(\" | \" + ((Deadline) t).getBy());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.write(\" | \" + ((Event) t).getAt());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.append(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 110
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        setTaskType(\"D\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        setTaskType(\"E\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Provides the blueprint for a Task object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Constructor to initialise a new Task object, and mark it as undone by default."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param description the description of a particular task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Set the task type based on \u0027todo\u0027, \u0027deadline\u0027 and \u0027event\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param taskType the type of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void setTaskType(String taskType) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * To retrieve a particular task\u0027s description"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 60
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static final int MAX_SIZE \u003d 100;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(MAX_SIZE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return tasks.get(index - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Invalid task number! Type \u0027list\u0027 to get an overview of your tasks.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public int getTotalTaskCount() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 43
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        setTaskType(\"T\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 14
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * This class Ui makes sense of user\u0027s inputs and print relevant messages to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String MESSAGE_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String MESSAGE_GREETINGS \u003d \"\\nHello! I\u0027m Duke, your personal task assistant!\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"What can I do for you today?\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints a horizontal divider line"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(MESSAGE_LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Reads user inputs."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return String the inputs provided by users, where leading and trailing spaces are trimmed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints welcome message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(MESSAGE_LINE + MESSAGE_GREETINGS + MESSAGE_LINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints out all tasks saved in the array list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param taskList the array list to print"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (taskList.getTotalTaskCount() \u003e 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(i + \". \" + t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"There is no task in the list! Consider adding one?\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printToDo(TaskList taskList, ToDo task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added the following to-do in the list:\\n\" + task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Now now have \" + taskList.getTotalTaskCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printDeadline(TaskList taskList, Deadline task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added the following deadline in the list:\\n\" + task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Now now have \" + taskList.getTotalTaskCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printEvent(TaskList taskList, Event task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added the following event in the list:\\n\" + task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Now now have \" + taskList.getTotalTaskCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printDone(Task task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Nice! I have marked this task as done:\\n\" + task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Print to inform the user that the selected task has been deleted"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param taskList the task array list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param task the task that has been deleted"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printDelete(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Noted. I have removed this task:\\n\" + task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getTotalTaskCount() + \" tasks in this list.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints all result(s) that matches the search keyword"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param taskList the array list that contains the keyword"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param keyword the word that the user searches"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printFind(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (taskList.getTotalTaskCount() \u003e 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Here are the task(s) in your list that matches the keyword \\\"\" + keyword + \"\\\":\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(i + \". \" + t);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"No task contains the keyword \\\"\" + keyword + \"\\\".\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints farewell message"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param message the error message to be printed"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\u2639 OOPS!!! \" + message);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 126
    }
  }
]
