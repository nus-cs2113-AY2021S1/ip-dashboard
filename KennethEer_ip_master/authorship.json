[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String LONG_LINE \u003d \"______________________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String GREETING \u003d \"Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String REQUEST \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String EXIT \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static int totalTaskNumber \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(LONG_LINE + System.lineSeparator() + GREETING);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(REQUEST + System.lineSeparator() + LONG_LINE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static void addTask(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        int slashIndex \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Task currentTask \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (input.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                currentTask \u003d createDeadlineTask(input, slashIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else if (input.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                currentTask \u003d createEventTask(input, slashIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else if (input.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                currentTask \u003d createTodoTask(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                throw new DukeException(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (currentTask !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (totalTaskNumber \u003c 100) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    tasks[totalTaskNumber] \u003d currentTask;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    totalTaskNumber++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(LONG_LINE + System.lineSeparator() + ADDED_TASK);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(\"  \" + currentTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                String plural \u003d (totalTaskNumber \u003e 1) ? \"s\" : \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(\"Now you have \" + totalTaskNumber + \" task\" + plural + \" in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(LONG_LINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            e.printErrorMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static boolean checkValid(String input, int slashIndex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean hasAt \u003d input.contains(\" /at \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean hasBy \u003d input.contains(\" /by \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean exceedLength \u003d (slashIndex + 4) \u003e\u003d input.length();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean hasDeadlineTask \u003d (slashIndex - 1) \u003e\u003d 9;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean hasEventTask \u003d (slashIndex - 1) \u003e\u003d 6;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!hasBy || exceedLength || !hasDeadlineTask) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!hasAt || exceedLength || !hasEventTask) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static Task createDeadlineTask(String input, int slashIndex){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkValid(input, slashIndex)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (input.trim().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    throw new DukeException(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return new Deadline(input.substring(9, slashIndex - 1), input.substring(slashIndex + 4));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            e.printErrorMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static Task createEventTask(String input, int slashIndex) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!checkValid(input, slashIndex)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                if (input.trim().equals(\"event\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                    throw new DukeException(input);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return new Event(input.substring(6, slashIndex - 1), input.substring(slashIndex + 4));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            e.printErrorMessage();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static Task createTodoTask(String input) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (input.substring(5).isBlank()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return new Todo(input.substring(5));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            e.printErrorMessage();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static void printExit() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(LONG_LINE + System.lineSeparator() + EXIT + System.lineSeparator() + LONG_LINE);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(LONG_LINE);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (int i \u003d 0; i \u003c totalTaskNumber; i++) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(i+1 + \".\" + tasks[i]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(LONG_LINE);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static void completeTask(String input) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String taskDigit \u003d input.substring(5);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(taskDigit);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (taskNumber \u003e totalTaskNumber || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"This task number is invalid. Please try again.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Task taskToFinish \u003d tasks[taskNumber - 1];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        taskToFinish.doTask();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(LONG_LINE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(taskToFinish);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(LONG_LINE);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        input \u003d in.nextLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                printList();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                completeTask(input);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                addTask(input);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (in.hasNextLine()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                input \u003d in.nextLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        printExit();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "KennethEer": 170
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String EMPTY_TODO \u003d \"\\u2639\" + \" OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String EMPTY_EVENT \u003d \"\\u2639\" + \" OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String EMPTY_DEADLINE \u003d \"\\u2639\" + \" OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_DEADLINE \u003d \"The deadline task should be written as deadline (name of task) /by (deadline).\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_EVENT \u003d \"The event task should be written as event (name of task) /at (time of event).\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_TODO \u003d \"The todo task should be written as todo (name of task).\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String taskInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public DukeException(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.taskInput \u003d input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    void printErrorMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(Duke.LONG_LINE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (taskInput.equals(\"todo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(EMPTY_TODO);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.equals(\"event\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(EMPTY_EVENT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(EMPTY_DEADLINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(ERROR_DEADLINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(ERROR_EVENT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(ERROR_TODO);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(ERROR_MESSAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(Duke.LONG_LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return [tick] or [X] symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "deadline /by r"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "event /by"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "event /at test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "KennethEer": 2
    }
  }
]
