[
  {
    "path": "src/main/java/duke/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents command to be executed. A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * the command\u0027s execution and whether it is the bye command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Executes command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage Storage object to save tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws IOException If there is an error saving to storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Returns bye status whether the user types in bye"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return exit status"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 35
    }
  },
  {
    "path": "src/main/java/duke/Command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents deadline command to be executed. A \u003ccode\u003eDeadlineCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * the deadline command\u0027s execution."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public DeadlineCommand(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Executes deadline command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage Storage object to save tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws IOException If there is an error writing to file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        int slashIndex \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Task currentTask \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        currentTask \u003d taskList.createDeadlineTask(input, slashIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (currentTask !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            (taskList.getData()).add(currentTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            storage.writeToFile(taskList.getData());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ui.showAddTask(currentTask, taskList.getData());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 40
    }
  },
  {
    "path": "src/main/java/duke/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents delete command to be executed. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * the delete command\u0027s execution."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Executes delete command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage Storage object to save tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws IOException If there is an error writing to file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Task taskToDelete \u003d taskList.deleteTask(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        storage.writeToFile(taskList.getData());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ui.showDeleteTask(taskToDelete, taskList.getData());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 34
    }
  },
  {
    "path": "src/main/java/duke/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents done command to be executed. A \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * the done command\u0027s execution."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Executes done command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage Storage object to save tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws IOException If there is an error writing to file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Task taskToFinish \u003d taskList.completeTask(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        storage.writeToFile(taskList.getData());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ui.showCompleteTask(taskToFinish);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 32
    }
  },
  {
    "path": "src/main/java/duke/Command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents event command to be executed. A \u003ccode\u003eEventCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * the event command\u0027s execution."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class EventCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public EventCommand(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Executes event command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage Storage object to save tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws IOException If there is an error writing to file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        int slashIndex \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Task currentTask \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        currentTask \u003d taskList.createEventTask(input, slashIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (currentTask !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            (taskList.getData()).add(currentTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            storage.writeToFile(taskList.getData());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ui.showAddTask(currentTask, taskList.getData());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 38
    }
  },
  {
    "path": "src/main/java/duke/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents exit command to be executed. A \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * the deadline command\u0027s execution and exit status."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Executes exit command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage Storage object to save tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 28
    }
  },
  {
    "path": "src/main/java/duke/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ArrayList\u003cTask\u003e matchList \u003d taskList.findTask(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ui.showfindList(matchList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 21
    }
  },
  {
    "path": "src/main/java/duke/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents list command to be executed. A \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * the list command\u0027s execution."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Executes list command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage Storage object to save tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ui.showList(taskList.getData());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 23
    }
  },
  {
    "path": "src/main/java/duke/Command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents todo command to be executed. A \u003ccode\u003eTodoCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * the todo command\u0027s execution."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public TodoCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Executes todo command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param ui Ui object to deal with user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param storage Storage object to save tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws IOException If there is an error writing to file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Task currentTask \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        currentTask \u003d taskList.createTodoTask(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (currentTask !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            (taskList.getData()).add(currentTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            storage.writeToFile(taskList.getData());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ui.showAddTask(currentTask, taskList.getData());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 37
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String fileName \u003d \"taskdata.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.showError(e.getErrorMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } catch(IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        new Duke(fileName).run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "KennethEer": 46
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents the exceptions when the user types in invalid input. A \u003ccode\u003eDukeException\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * corresponds to the error message based on what kind of invalid user input"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String EMPTY_TODO \u003d \"\\u2639\" + \" OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String EMPTY_EVENT \u003d \"\\u2639\" + \" OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String EMPTY_DEADLINE \u003d \"\\u2639\" + \" OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_DEADLINE \u003d \"The deadline task should be written as deadline (name of task) /by (deadline).\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_EVENT \u003d \"The event task should be written as event (name of task) /at (time of event).\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_TODO \u003d \"The todo task should be written as todo (name of task).\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_DELETE \u003d \"delete task should be written as delete (task number).\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_DONE \u003d \"done task should be written as done (task number).\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ERROR_FIND \u003d \"find task should be written as find (task description).\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String taskInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public DukeException(String input) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.taskInput \u003d input;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String typeOfError;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (taskInput.equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d EMPTY_TODO;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.equals(\"event\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d EMPTY_EVENT;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d EMPTY_DEADLINE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d ERROR_DEADLINE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d ERROR_EVENT;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d ERROR_TODO;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d ERROR_DELETE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d ERROR_DONE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (taskInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d ERROR_FIND;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            typeOfError \u003d ERROR_MESSAGE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return typeOfError;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 51
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a parser that deals with making sense of the user command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Returns command object from parsing an input message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input input typed by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return command to be executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Command command \u003d createCommand(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Creates command object based on user\u0027s input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input input typed by user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return command that is created."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static Command createCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (input.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            command \u003d new DoneCommand(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (input.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            command \u003d new DeleteCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (input.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            command \u003d new DeadlineCommand(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (input.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            command \u003d new EventCommand(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (input.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            command \u003d new TodoCommand(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (input.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            command \u003d new FindCommand(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            throw new DukeException(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "KennethEer": 61
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a storage in the local filesystem. A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a filePath where data is stored e.g., \u003ccode\u003etaskdata.txt\u003c/code\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected static ArrayList\u003cString\u003e savedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        createFileObject(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        loadFileContents(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return savedTasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void createFileObject(String filePath){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Loads tasks from the text file specified in the filePath"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param filePath  name of filePath where tasks are saved."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return list of saved tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws FileNotFoundException  If file is not found"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public ArrayList\u003cString\u003e loadFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            savedTasks.add(s.nextLine());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return savedTasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Saves tasks to the textfile specified in the filePath"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param tasks  list of tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws IOException  If there is a file write error"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        fw.write(\"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        FileWriter fwAppend \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            fwAppend.write((tasks.get(i)).editFile());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        fwAppend.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 73
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a user interface that deals  in the local filesystem. A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a filePath where data is stored e.g., \u003ccode\u003etaskdata.txt\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public static final String LONG_LINE \u003d \"______________________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String GREETING \u003d \"Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String REQUEST \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String EXIT \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final String ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints error message based on paramter error"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param error  error message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints loading error message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(\"There is a problem loading the file\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints welcome message"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(LONG_LINE + System.lineSeparator() + GREETING);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(REQUEST + System.lineSeparator() + LONG_LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints goodbye messafe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(EXIT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints message including added task and total number of tasks when user adds a task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showAddTask(Task currentTask, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(ADDED_TASK);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(\"  \" + currentTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String plural \u003d (taskList.size() \u003e 1) ? \"s\" : \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" task\" + plural + \" in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the list of tasks when user inputs list command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(i+1 + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showfindList(ArrayList\u003cTask\u003e matchList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (int i \u003d 0; i \u003c matchList.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(i + 1 + \".\" + matchList.get(i));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message about the task that was done when user inputs done command"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showCompleteTask(Task taskToFinish) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (taskToFinish !\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(taskToFinish);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints the message about the task that was deleted when user inputs delete command"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showDeleteTask(Task taskToDelete, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (taskToDelete !\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"  \" + taskToDelete);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String plural \u003d (taskList.size() \u003e 1) ? \"s\" : \"\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" task\" + plural + \" in the list.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Prints line"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        System.out.println(LONG_LINE);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 122
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a deadline task with its description, done status and by what deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String byDeadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Deadline(String description, String byDeadline) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.byDeadline \u003d byDeadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Returns deadline task when user prints the deadline task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return description, status icon and by description of deadline task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + byDeadline + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String editFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return \"D | \" + super.editFile() + \" | \" + byDeadline + System.lineSeparator();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean findInput(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if ((super.toString() + byDeadline).contains(input)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents an event task. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * an event task with its description, done status and at when."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String atWhen;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Event(String description, String atWhen) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.atWhen \u003d atWhen;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Returns an event task when user prints the event task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return description, status icon and at when description of event task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + atWhen + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String editFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return \"E | \" + super.editFile() + \" | \" + atWhen + System.lineSeparator();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean findInput(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if ((super.toString() + atWhen).contains(input)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a task with its description and done status"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected static final String tick \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    protected static final String cross \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Returns status icon to show if task is done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return status icon."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return (isDone ? tick : cross); //return [tick] or [X] symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Returns status number to show if task is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return status number."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String getStatusNumber() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return 1 if done or 0 if undone"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Modify status from undone to done to show that task is done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Returns task when user prints the task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return description of task and status icon of task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String editFile() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return getStatusNumber() + \" | \" + this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public boolean findInput(String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (toString().contains(input)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "KennethEer": 64
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents a task list. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a list of tasks and a Ui object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private int endIndexOfDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private int startIndexOfWhen;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int DEADLINE_CHAR \u003d 9; //number of characters in \"deadline \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int EVENT_CHAR \u003d 6;  //number of characters in \"event \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int TODO_CHAR \u003d 5;  //number of characters in \"todo \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int DONE_CHAR \u003d 5;  //number of characters in \"done \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int DELETE_CHAR \u003d 7;  //number of characters in \"delete \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private static final int FIND_CHAR \u003d 5;  //number of characters in \"find \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e savedTasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        taskList \u003d readFileContents(savedTasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Returns the list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public ArrayList\u003cTask\u003e getData() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Reads the list of saved tasks and add to the list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param savedTasks list of saved tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public ArrayList\u003cTask\u003e readFileContents(ArrayList\u003cString\u003e savedTasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (int i \u003d 0; i \u003c savedTasks.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            String sentence \u003d savedTasks.get(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (sentence.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                taskList.add(new Todo(sentence.substring(7)));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (sentence.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                int slashIndex \u003d sentence.indexOf(\u0027|\u0027, 7);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                taskList.add(new Event(sentence.substring(8, slashIndex - 1), sentence.substring(slashIndex + 2)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (sentence.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                int slashIndex \u003d sentence.indexOf(\u0027|\u0027, 7);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                taskList.add(new Deadline(sentence.substring(8, slashIndex - 1), sentence.substring(slashIndex + 2)));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            checkDone(sentence);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Checks if the task is done and change done status of task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param sentence sentence from saved file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private void checkDone(String sentence) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (sentence.charAt(4) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            (taskList.get(taskList.size()-1)).doTask();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private void getIndex(int slashIndex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        endIndexOfDescription \u003d slashIndex - 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        startIndexOfWhen \u003d slashIndex + 4;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Checks if the user input is valid"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input input typed in by user"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param slashIndex index of slash in user input"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return user input validity status"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    private boolean checkValid(String input, int slashIndex) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        getIndex(slashIndex);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean hasAt \u003d input.contains(\" /at \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean hasBy \u003d input.contains(\" /by \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean exceedLength \u003d startIndexOfWhen \u003e\u003d input.length();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean hasDeadlineTask \u003d endIndexOfDescription \u003e\u003d DEADLINE_CHAR;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        boolean hasEventTask \u003d endIndexOfDescription \u003e\u003d EVENT_CHAR;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!hasBy || exceedLength || !hasDeadlineTask) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!hasAt || exceedLength || !hasEventTask) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Creates a deadline task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input input typed in by user"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param slashIndex index of slash in user input"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return deadline task that is created"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws DukeException  If user input is invalid."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Task createDeadlineTask(String input, int slashIndex){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        getIndex(slashIndex);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (checkValid(input, slashIndex)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return new Deadline(input.substring(DEADLINE_CHAR, endIndexOfDescription), input.substring(startIndexOfWhen));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else if (input.trim().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                throw new DukeException(input);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ui.showError(e.getErrorMessage());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Creates an event task"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input input typed in by user"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param slashIndex index of slash in user input"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return event task that is created"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws DukeException  If user input is invalid."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Task createEventTask(String input, int slashIndex) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (checkValid(input, slashIndex)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return new Event(input.substring(EVENT_CHAR, endIndexOfDescription), input.substring(startIndexOfWhen));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else if (input.trim().equals(\"event\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                throw new DukeException(input);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ui.showError(e.getErrorMessage());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Creates a todo task"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input input typed in by user"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return todo task that is created"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws DukeException  If user input is invalid."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Task createTodoTask(String input) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (input.substring(TODO_CHAR).isBlank()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return new Todo(input.substring(TODO_CHAR));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            ui.showError(e.getErrorMessage());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Completes task"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input input typed in by user"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return task that is completed"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws NumberFormatException  If user input is invalid."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Task completeTask(String input) throws NumberFormatException {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Task taskToFinish \u003d null;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (input.length() \u003c\u003d DONE_CHAR) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"Please input done and and a blank space and task number\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String taskDigit \u003d input.substring(DONE_CHAR);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(taskDigit);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (!(taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c\u003d taskList.size())) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(\"This task number is invalid. Please try again.\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            taskToFinish \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            taskToFinish.doTask();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"NumberFormatException: \" + nfe.getMessage());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return taskToFinish;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Deletes task"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @param input input typed in by user"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return task that is deleted"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @throws NumberFormatException  If user input is invalid."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Task deleteTask(String input) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        Task taskToDelete \u003d null;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        if (input.length() \u003c\u003d DELETE_CHAR) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"Please input delete and a blank space and task number\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String taskDigit \u003d input.substring(DELETE_CHAR);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(taskDigit);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if (taskNumber \u003e taskList.size() || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                System.out.println(\"This task number is invalid. Please try again.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                taskToDelete \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            System.out.println(\"NumberFormatException: \" + nfe.getMessage());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return taskToDelete;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public ArrayList\u003cTask\u003e findTask(String input) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        String findTask \u003d input.substring(FIND_CHAR);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            if ((taskList.get(i)).findInput(findTask)) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "                 matchList.add(taskList.get(i));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return matchList;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "KennethEer": 247
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * Represents todo task. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " * a task with its description and done status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * Returns todo task when user prints the todo task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     * @return description and status icon of todo task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    public String editFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "        return \"T | \" + super.editFile() + System.lineSeparator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KennethEer"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 27
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "deadline /by r"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "event /by"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "event /at test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "KennethEer": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\Command\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "KennethEer": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KennethEer"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "KennethEer": 2
    }
  }
]
