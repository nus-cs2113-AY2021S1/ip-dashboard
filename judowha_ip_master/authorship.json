[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "DUKE is a desktop app allows users to record tasks to schedule their work better. The task list will be stored under the same file path as the executable file."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": "2. Download the latest DUKE.jar from [here](https://github.com/judowha/ip/releases/tag/v1.0)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your DUKE."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": "## Features:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": "* ##### View Help: `help`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Show a help message which will explain all commands in detail.  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Format: `help`  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": "* ##### Add a ToDO task: `todo`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Add a task which you want to do but has no specific date or time.  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Format: `todo TASK`  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Example:`todo read a book`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": "  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": "* ##### Add a Deadline task: `deadline`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Add a task which need to be done before the deadline. Deadline tasks will be indicated by `[D]` in the task list.  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Format: `deadline TASK /by  YYYY-MM-DD  HOUR:MINUTE`  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "judowha"
        },
        "content": "    * the \u0027/\u0027 is needed to indicate that the following parts include date and time  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "judowha"
        },
        "content": "    * the format of date and time is not flexible  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Example: `deadline return the book /by 2020-10-01 19:00`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "judowha"
        },
        "content": "* ##### Add an Event task: `event`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Add a task which need to be done in a specific duration.  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Format: `event TASK /at  YYYY-MM-DD  STARTHOUR:STARTMINUTE-ENDHOUR:ENDMINUTE`  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "judowha"
        },
        "content": "    * the \u0027/\u0027 is needed to indicate that the following parts include date and time  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "judowha"
        },
        "content": "    * the format of date and time is not flexible  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Example: `event return the book /by 2020-10-01 19:00-20:00`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "judowha"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "judowha"
        },
        "content": "* #### Mark a task as done: `done`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Mark a task as done when the task is completed.  "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Format: `done INDEX`      "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Example: `done 1`  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "judowha"
        },
        "content": "* #### Delete a task: `delete`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Delete a task when you want to remove it from the task list.  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Format: `delete INDEX`     "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Example: `delete 1`  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "judowha"
        },
        "content": "    "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "judowha"
        },
        "content": "* #### Find a task: `find`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Find a task in the list.  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Format: `find KEYWORDS`  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "judowha"
        },
        "content": "    Example: `find book`  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "judowha"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "judowha"
        },
        "content": "##Command Summary"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "judowha"
        },
        "content": "Action |Format"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "judowha"
        },
        "content": "------ |------"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "judowha"
        },
        "content": "help| `help`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "judowha"
        },
        "content": "add todo task| `todo TASK`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "judowha"
        },
        "content": "add deadline task| `deadline TASK /by  YYYY-MM-DD  HOUR:MINUTE`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "judowha"
        },
        "content": "add event task| `event TASK /at  YYYY-MM-DD  STARTHOUR:STARTMINUTE-ENDHOUR:ENDMINUTE`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "judowha"
        },
        "content": "done | `done INDEX`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "judowha"
        },
        "content": "delete | `delete INDEX`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "judowha"
        },
        "content": "find | `find KEYWORDS`"
      }
    ],
    "authorContributionMap": {
      "judowha": 62
    }
  },
  {
    "path": "src/main/java/Duke/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "package Duke.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "import oop.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": "import oop.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": "public class Deadline extends tasks{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public Deadline(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003d\"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.done\u003dfalse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public Deadline (String task) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] contain\u003dParser.parseDeadline(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.date \u003d Parser.parseDeadlineDate(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.time \u003d Parser.parseDeadlineTime(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String commandContain\u003dcontain[0]+\"(at \"+date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+\" \"+time+\")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003d\"  [D][\\u2718] \"+commandContain;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": "        super.setDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003d\"  [D][\\u2713] \" +task.substring(9);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 30
    }
  },
  {
    "path": "src/main/java/Duke/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "package Duke.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "import oop.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.time.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "public class Event  extends tasks{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public Event(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003d\"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.done\u003dfalse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public Event (String task) throws DukeException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] contain\u003dParser.parseEvent(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.date\u003dParser.parseEventDate(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] time\u003dParser.parseEventTime(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": "        LocalTime startTime \u003d LocalTime.parse(time[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": "        LocalTime endTime \u003d LocalTime.parse(time[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.time\u003d startTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String newCommandContain\u003dcontain[0]+\"(at \"+date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+\" \"+ startTime +\"-\"+ endTime +\")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003d\"  [E][\\u2718] \"+newCommandContain;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "judowha"
        },
        "content": "        super.setDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003d\"  [E][\\u2713] \" +task.substring(9);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 32
    }
  },
  {
    "path": "src/main/java/Duke/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "package Duke.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "import oop.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": "public class ToDo extends tasks {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public ToDo() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003d\"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.done\u003dfalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public ToDo(String task){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003d\"  [T][\\u2718] \"+ Parser.parseToDO(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003d\"  [T][\\u2713] \"+task.substring(9);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": "        super.setDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 26
    }
  },
  {
    "path": "src/main/java/Duke/java/tasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "package Duke.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": "public  class tasks {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": "    protected static int taskNum\u003d0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public tasks() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.done\u003dfalse;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": "        taskNum++;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public void setTask(String task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.task\u003dtask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void setTaskNum(int taskNum) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "judowha"
        },
        "content": "        tasks.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "judowha"
        },
        "content": "        this.done\u003dtrue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static int getTaskNum() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public void displayTask(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(this.task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 54
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": "import oop.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private static ArrayList\u003ctasks\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private final static String EVENT\u003d\"event\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private final static String TODO\u003d\"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private final static String DEADLINE\u003d\"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private final static String BYE\u003d\"bye\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private final static String LIST\u003d\"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private final static String DONE\u003d\"done\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private final static String DELETE\u003d\"delete\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private final static String HELP\u003d\"help\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": "    private final static String FIND\u003d\"find\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void main(String[] args)  {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": "        UI.showGreetings();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": "        RunReadFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": "        RunDukeCommands();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "        UI.sayBye();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void RunReadFile(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "judowha"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "judowha"
        },
        "content": "            Storage.ReadFile(\"duke.txt\",taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "judowha"
        },
        "content": "            System.out.println(\"A new file will be created to save your schedule\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void RunDukeCommands() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String inputLine;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "judowha"
        },
        "content": "        Scanner in\u003dnew Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "judowha"
        },
        "content": "        while(!(inputLine\u003d in.nextLine()).equals(BYE)){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "judowha"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "judowha"
        },
        "content": "                DukeCommands(inputLine);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }catch(DukeException e){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "judowha"
        },
        "content": "                System.out.println(e+System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }catch(IOException e){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "judowha"
        },
        "content": "                System.out.println(\"OOPS!!! there are something wrong with the file\"+System.lineSeparator());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "judowha"
        },
        "content": "                System.out.println(\"OOPS!!! please check the input format of date and time\"+System.lineSeparator());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }catch(NumberFormatException e){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "judowha"
        },
        "content": "                System.out.println(\"OOPS!!! please ensure that you input a integer but not a character\"+System.lineSeparator());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Accept users\u0027 input and do corresponding commands"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param line users\u0027 input line"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void DukeCommands(String line) throws DukeException, IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] commands;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "judowha"
        },
        "content": "        commands \u003d line.split(\" \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if (line.equals(LIST)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "judowha"
        },
        "content": "            TaskList.listFaction(taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "judowha"
        },
        "content": "        else if (commands[0].equals(TODO)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.CheckEmptyDescription(commands, TODO);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "judowha"
        },
        "content": "            TaskList.AddToDoCommands(taskList, line);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "judowha"
        },
        "content": "            Storage.writeToFile(filePath, Storage.getFileContain(taskList));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "judowha"
        },
        "content": "        else if (commands[0].equals(DEADLINE)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.CheckEmptyDescription(commands, DEADLINE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.CheckValidInputFormat(line, DEADLINE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "judowha"
        },
        "content": "            TaskList.AddDeadlineCommands(taskList, line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "judowha"
        },
        "content": "            Storage.writeToFile(filePath, Storage.getFileContain(taskList));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "judowha"
        },
        "content": "        else if (commands[0].equals(EVENT)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.CheckEmptyDescription(commands, EVENT);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.CheckValidInputFormat(line, EVENT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "judowha"
        },
        "content": "            TaskList.AddEventCommands(taskList, line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "judowha"
        },
        "content": "            Storage.writeToFile(filePath, Storage.getFileContain(taskList));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "judowha"
        },
        "content": "        else if (commands[0].equals(DONE)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.CheckEmptyDescription(commands, DONE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "judowha"
        },
        "content": "            TaskList.MarkAsDoneFaction(commands, taskList);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "judowha"
        },
        "content": "            Storage.writeToFile(filePath, Storage.getFileContain(taskList));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "judowha"
        },
        "content": "        else if (commands[0].equals(DELETE)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.CheckEmptyDescription(commands, DELETE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "judowha"
        },
        "content": "            TaskList.deleteTask(commands, taskList);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "judowha"
        },
        "content": "            Storage.writeToFile(filePath, Storage.getFileContain(taskList));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "judowha"
        },
        "content": "        else if (commands[0].equals(FIND)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.CheckEmptyDescription(commands,FIND);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "judowha"
        },
        "content": "            TaskList.findTask(commands, taskList);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "judowha"
        },
        "content": "        else if (commands[0].equals(HELP)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.dukeHelp();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "judowha"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "judowha"
        },
        "content": "            UI.NoneExistCommand();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 108
    }
  },
  {
    "path": "src/main/java/oop/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "package oop;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public DukeException(String s){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 7
    }
  },
  {
    "path": "src/main/java/oop/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "package oop;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static String parseToDO(String command){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": "        final int commandLength\u003d5;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return command.substring(commandLength);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static String[] parseDeadline(String command){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": "        final int commandLength\u003d9;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] commandContain \u003d command.substring(commandLength).split(\"/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return commandContain;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static String[] parseEvent(String command){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": "        final int commandLength\u003d6;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] commandContain \u003d command.substring(commandLength).split(\"/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return commandContain;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *Accept a deadline command and then get the date of the deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param command input command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @return the date of the deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws DukeException if date is missing"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static LocalDate parseDeadlineDate(String command) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] commandContain\u003d parseDeadline(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String dateInformation\u003dcommandContain[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] dateContain\u003d dateInformation.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if(dateContain.length\u003c2){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "judowha"
        },
        "content": "            throw new DukeException(\"OOPS!!! please ensure both date and time are written\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return LocalDate.parse(dateContain[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Accept a Event command and then get the date of the event"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param command input command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @return the date of the event"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws DukeException if date is missing"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static LocalDate parseEventDate(String command) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] commandContain\u003d parseEvent(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String dateInformation\u003dcommandContain[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] dateContain\u003d dateInformation.split(\" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if(dateContain.length\u003c2){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "judowha"
        },
        "content": "            throw new DukeException(\"OOPS!!! please ensure both date and time are written\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return LocalDate.parse(dateContain[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Accept a Deadline command and then get the time of the deadline"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param command input command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @return the time of the deadline"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws DukeException if time is missing"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static LocalTime parseDeadlineTime(String command) throws DukeException{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] commandContain\u003d parseDeadline(command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String dateInformation\u003dcommandContain[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] dateContain\u003d dateInformation.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if(dateContain.length\u003c3){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "judowha"
        },
        "content": "            throw new DukeException(\"OOPS!!! please ensure both date and time are written\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return LocalTime.parse(dateContain[2]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Accept a Event command and then get the time of the event"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param command input command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @return the start time and the end time"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws DukeException if the time is missing. if start time or end time is missing"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static String[] parseEventTime(String command) throws DukeException{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] commandContain\u003d parseEvent(command);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String dateInformation\u003dcommandContain[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] dateContain\u003d dateInformation.split(\" \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if(dateContain.length\u003c3){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "judowha"
        },
        "content": "            throw new DukeException(\"OOPS!!! please ensure both date and time are written\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String[] timeContain\u003d dateContain[2].split(\"-\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if(timeContain.length!\u003d2){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "judowha"
        },
        "content": "            throw new DukeException(\"OOPS!!! please ensure that both start time and end time of the event have been written\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return timeContain;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 96
    }
  },
  {
    "path": "src/main/java/oop/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "package oop;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static String getFileContain(ArrayList\u003ctasks\u003e taskList){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String contain \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": "        for(int i \u003d 0; i\u003c tasks.getTaskNum(); i++){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": "            contain\u003dcontain+(i+1)+\".\"+taskList.get(i).getTask()+System.lineSeparator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": "        return contain;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Write the contain testToAdd to a file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param filePath path of the file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param textToAdd text wants to add"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "judowha"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "judowha"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "judowha"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Read a file from the filePath and store it in the task list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param filePath path of the file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param taskList target array list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws FileNotFoundException if the file does not exist"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void ReadFile(String filePath, ArrayList\u003ctasks\u003e taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String taskCommand;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "judowha"
        },
        "content": "        File f\u003d new File(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "judowha"
        },
        "content": "        Scanner s\u003d new Scanner(f);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "judowha"
        },
        "content": "        while (s.hasNext()){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "judowha"
        },
        "content": "            taskCommand\u003ds.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "judowha"
        },
        "content": "            if (taskCommand.charAt(5)\u003d\u003d\u0027D\u0027){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "judowha"
        },
        "content": "                Deadline task\u003d new Deadline();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "judowha"
        },
        "content": "                task.setTask(taskCommand.substring(2));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "judowha"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "judowha"
        },
        "content": "            else if (taskCommand.charAt(5)\u003d\u003d\u0027E\u0027){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "judowha"
        },
        "content": "                Event task\u003d new Event();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "judowha"
        },
        "content": "                task.setTask(taskCommand.substring(2));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "judowha"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "judowha"
        },
        "content": "            else if (taskCommand.charAt(5)\u003d\u003d\u0027T\u0027){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "judowha"
        },
        "content": "                ToDo task\u003d new ToDo();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "judowha"
        },
        "content": "                task.setTask(taskCommand.substring(2));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "judowha"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "judowha"
        },
        "content": "            if(taskCommand.charAt(7)\u003d\u003d\u0027\\u2713\u0027){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "judowha"
        },
        "content": "                taskList.get(tasks.getTaskNum()-1).setDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 75
    }
  },
  {
    "path": "src/main/java/oop/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "package oop;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Add a task of type to do in the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param taskList target array list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param line the input line"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void AddToDoCommands(ArrayList\u003ctasks\u003e taskList, String line) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": "        taskList.add(new ToDo(line));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": "        int indexOfCurrentTask \u003d tasks.getTaskNum() - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": "        UI.showAddInformation(taskList.get(indexOfCurrentTask).getTask());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Add a task of type event in the list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param taskList target array list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param line the input line"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void AddEventCommands(ArrayList\u003ctasks\u003e taskList, String line) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "judowha"
        },
        "content": "        taskList.add(new Event(line));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "judowha"
        },
        "content": "        int indexOfCurrentTask \u003d tasks.getTaskNum() - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "judowha"
        },
        "content": "        UI.showAddInformation(taskList.get(indexOfCurrentTask).getTask());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Add a task of type deadline in the list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param taskList target array list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param line the input line"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void AddDeadlineCommands(ArrayList\u003ctasks\u003e taskList, String line) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "judowha"
        },
        "content": "        taskList.add(new Deadline(line));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "judowha"
        },
        "content": "        int indexOfCurrentTask \u003d tasks.getTaskNum() - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "judowha"
        },
        "content": "        UI.showAddInformation(taskList.get(indexOfCurrentTask).getTask());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Remove a specific task from the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param commands input command"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param taskList target array list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void deleteTask(String[] commands, ArrayList\u003ctasks\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "judowha"
        },
        "content": "        int targetTask \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if (targetTask \u003e\u003d tasks.getTaskNum()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "judowha"
        },
        "content": "            throw new DukeException(\"OOPS!!! the task is not exist, please enter a valid serial number\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "judowha"
        },
        "content": "        taskList.get(targetTask).displayTask();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "judowha"
        },
        "content": "        taskList.remove(targetTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "judowha"
        },
        "content": "        tasks.setTaskNum(tasks.getTaskNum() - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getTaskNum() + \" tasks in the list.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Set a specific task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param commands input command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param taskList target array list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void MarkAsDoneFaction(String[] commands, ArrayList\u003ctasks\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "judowha"
        },
        "content": "        int currentTask \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if (currentTask \u003e\u003d tasks.getTaskNum()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "judowha"
        },
        "content": "            throw new DukeException(\"OOPS!!! the task is not exist, please enter a valid serial number\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "judowha"
        },
        "content": "        taskList.get(currentTask).setDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "judowha"
        },
        "content": "        UI.showSetDoneInformation(taskList.get(currentTask).getTask());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Show the full task list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param taskList target array list"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void listFaction(ArrayList\u003ctasks\u003e taskList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"here are the tasks in you list: \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "judowha"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "judowha"
        },
        "content": "            System.out.println(i + 1 + \".\" + taskList.get(i).getTask());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.print(System.lineSeparator());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "judowha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * Find a task in the task list by searching for a keyword."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "judowha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param commands input command"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "judowha"
        },
        "content": "     * @param taskList target array list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "judowha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void findTask(String[] commands, ArrayList\u003ctasks\u003e taskList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "judowha"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "judowha"
        },
        "content": "        String targetTask \u003d commands[1];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Here are matching tasks in your list\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "judowha"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "judowha"
        },
        "content": "            if (taskList.get(i).getTask().contains(targetTask)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "judowha"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "judowha"
        },
        "content": "                System.out.println(index + \".\" + taskList.get(i).getTask());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "judowha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "judowha"
        },
        "content": "            System.out.println(\"Sorry, no match task exists\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.print(System.lineSeparator());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 121
    }
  },
  {
    "path": "src/main/java/oop/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "package oop;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "import Duke.java.tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void dukeHelp(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Here are available functions and the corresponding format: \"+System.lineSeparator());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"todo: record what should be done next\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Format for todo: todo \u003cthings you want to record\u003e\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Example: todo read a book\"+System.lineSeparator());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Deadline: record a deadline\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Format for deadline: deadline \u003cthings you want to record\u003e /by \u003cyyyy-mm-dd time\u003e\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Example: todo return the book /by 2020-10-1 18:00\"+System.lineSeparator());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"event: record a event that will happen in a specific duration\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Format for event: event \u003cthings you want to record\u003e /at \u003cyyyy-mm-dd startTime-endTime\u003e\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Example: event attend the group meeting /at 2020-10-01 18:00-19:00\"+System.lineSeparator());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"done: indicate that a task has been done\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Format for done: done \u003ctaskNUmber\u003e\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Example: done 2\"+System.lineSeparator());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"delete: delete a recorded task\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Format for delete: delete \u003ctaskNUmber\u003e\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Example: delete 2\"+System.lineSeparator());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"list: show all the task\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Format for done: list\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Example: list\"+System.lineSeparator());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void showGreetings(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"if you need help, please enter \u0027help\u0027 to get instruction\"+System.lineSeparator());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void showAddInformation(String task){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Got it. I have add this task: \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Now you have \"+ tasks.getTaskNum()+\" tasks in the list.\"+System.lineSeparator());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void CheckEmptyDescription(String[] commands, String type) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if(commands.length\u003c2){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "judowha"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a \"+type+\" cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void CheckValidInputFormat(String line, String type) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "judowha"
        },
        "content": "        if(!line.contains(\"/\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "judowha"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please indicate the time of the \"+type+\" by \u0027/\u0027 \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "judowha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void showSetDoneInformation(String task){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(task+System.lineSeparator());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void NoneExistCommand() throws DukeException{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "judowha"
        },
        "content": "        throw new DukeException(\"OOPS!!! This command doesn\u0027t exist\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "judowha"
        },
        "content": "    public static void sayBye(){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "judowha"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "judowha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "judowha"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "judowha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "judowha": 70
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "judowha"
        },
        "content": "todo read books"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "judowha"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "judowha"
        },
        "content": "deadline return the book /by 2020-09-22 18:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "judowha"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "judowha"
        },
        "content": "event things /at 2020-09-22 18:00-19:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "judowha"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "test invalid command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "judowha"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "judowha"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "judowha": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "judowha"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "judowha"
        },
        "content": "java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "judowha": 2,
      "-": 19
    }
  }
]
