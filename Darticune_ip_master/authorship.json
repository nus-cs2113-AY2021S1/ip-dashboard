[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Darticune"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Darticune"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "Darticune": 2
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Darticune"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Darticune"
        },
        "content": "//Level-5"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Darticune"
        },
        "content": "//Level-6"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": "//Level-7"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String HELLO \u003d \"Hello! I\u0027m duke.Duke\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String INVALID_COMMAND \u003d \"Sorry, this command does not exist!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String PROMPT_START \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String EMPTY_LIST \u003d \"Sorry, you have no tasks in the list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String DETAILS_ERROR \u003d \"ERROR: The description of \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String EMPTY_FIELD \u003d \" cannot be empty!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String DEADLINE_FORMAT_INCORRECT \u003d \"Command format for Deadline is incorrect.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String EVENT_FORMAT_INCORRECT \u003d \"Command format for Event is incorrect.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String CORRECT_DEADLINE_FORMAT \u003d \"Correct format: deadline [DEADLINE_NAME] /by [DUE_BY]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String CORRECT_EVENT_FORMAT \u003d \"Correct format: event [EVENT_NAME] /at [DURATION]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String COMPLETED_TASK \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String DELETED_TASK \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String INDEX_BEYOND_LIST \u003d \"Sorry, there is no such item.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String INVALID_INDEX \u003d \"Please enter a valid task number.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String INVALID_ENTRY \u003d \"Invalid entry in saved file: \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String TEXT_FILE_CREATION_FAILED \u003d \"Unable to create text file\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String SAVE_FAILED \u003d \"Attempt to save data failed!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void printDivider() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(HELLO);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(PROMPT_START);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static ArrayList\u003cString\u003e readDataAsStrings() throws FileNotFoundException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        File dukeFile \u003d new File (\"data/Duke.txt\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        ArrayList\u003cString\u003e fileContents \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        Scanner s \u003d new Scanner(dukeFile);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            fileContents.add(s.nextLine());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return fileContents;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static Todo convertToTask(String record) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        String[] parsedFields \u003d record.split(\" \\\\| \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        switch(parsedFields[0]) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return new Todo (parsedFields[0], parsedFields[1], parsedFields[2], \" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return new Deadline (parsedFields[0], parsedFields[1], parsedFields[2], parsedFields[3]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return new Event (parsedFields[0], parsedFields[1], parsedFields[2], parsedFields[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            printDivider();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(INVALID_ENTRY + record);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            printDivider();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static ArrayList\u003cTodo\u003e convertDataToTaskList(ArrayList\u003cString\u003e fileContent) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        ArrayList\u003cTodo\u003e recordedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        for (String record : fileContent) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            recordedList.add(convertToTask(record));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return recordedList;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static ArrayList\u003cTodo\u003e createTaskListFromSavedData() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        ArrayList\u003cTodo\u003e recordedList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            ArrayList\u003cString\u003e fileContent \u003d readDataAsStrings();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            recordedList \u003d convertDataToTaskList(fileContent);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            recordedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return recordedList;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static String getCommand() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static String extractCommandType(String command) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        String[] parsedStrings \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return parsedStrings[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static boolean isAddTask(String commandType) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static boolean isCompleteTask(String commandType) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return commandType.equals(\"done\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static boolean isDeleteTask(String commandType) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return commandType.equals(\"delete\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static boolean isBye(String keyword) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return keyword.equals(\"bye\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static boolean requireCommandDetails(String commandType) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return ((isAddTask(commandType)) || isCompleteTask(commandType) || isDeleteTask(commandType));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static String extractCommandDetails(String command) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            String[] parsedStrings \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return parsedStrings[1];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void handleEmptyCommandDetails(String commandType) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(DETAILS_ERROR + commandType + EMPTY_FIELD);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void printTask(ArrayList\u003cTodo\u003e recordedList, int index) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        Todo element \u003d recordedList.get(index);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.print(\"[\" + element.getTaskType() + \"]\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.print(\"[\" + element.getStatusIcon() + \"] \" + element.getDescription());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(element.getTimeline());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void printTask(Todo element) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.print(\"[\" + element.getTaskType() + \"]\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.print(\"[\" + element.getStatusIcon() + \"] \" + element.getDescription());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(element.getTimeline());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void printList(ArrayList\u003cTodo\u003e recordedList) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int listCount \u003d recordedList.size();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if (listCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(EMPTY_LIST);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            for (int i \u003d 0; i \u003c listCount; i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                System.out.print(i + 1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                System.out.print(\". \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                printTask(recordedList, i);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void printTaskTally(ArrayList\u003cTodo\u003e recordedList) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int listCount \u003d recordedList.size();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.print(\"Now you have \" + listCount + \" task\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if(listCount \u003e 1) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.print(\"s\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(\" in the list.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void endAddTask(ArrayList\u003cTodo\u003e recordedList) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(ADDED_TASK);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int listCount \u003d recordedList.size();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printTask(recordedList, listCount-1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printTaskTally(recordedList);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void addTodoToList(ArrayList\u003cTodo\u003e recordedList, String details) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        recordedList.add(new Todo(details, \" \", \"T\"));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        endAddTask(recordedList);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void addDeadlineToList(ArrayList\u003cTodo\u003e recordedList, String details) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        String[] parsedStrings \u003d details.split(\" /by \", 2);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            recordedList.add(new Deadline(parsedStrings[0], parsedStrings[1], \"D\"));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            endAddTask(recordedList);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(DEADLINE_FORMAT_INCORRECT);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(CORRECT_DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void addEventToList(ArrayList\u003cTodo\u003e recordedList, String details) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        String[] parsedStrings \u003d details.split(\" /at \", 2);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            recordedList.add(new Event(parsedStrings[0], parsedStrings[1], \"E\"));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            endAddTask(recordedList);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(EVENT_FORMAT_INCORRECT);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(CORRECT_EVENT_FORMAT);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static int getTaskIndex(String commandDetails) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return Integer.parseInt(commandDetails)-1;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void setTaskAsDone(ArrayList\u003cTodo\u003e recordedList, int index) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        recordedList.get(index).setAsDone();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(COMPLETED_TASK);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printTask(recordedList, (index));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void completeTask(ArrayList\u003cTodo\u003e recordedList, String commandDetails) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            int index \u003d getTaskIndex(commandDetails);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            setTaskAsDone(recordedList, index);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(INVALID_INDEX);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(INDEX_BEYOND_LIST);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(INVALID_INDEX);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void removeTaskFromList(ArrayList\u003cTodo\u003e recordedList, int index) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        Todo targetedTask \u003d recordedList.remove(index);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(DELETED_TASK);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printTask(targetedTask);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printTaskTally(recordedList);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void deleteTask(ArrayList\u003cTodo\u003e recordedList, String commandDetails) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            int index \u003d getTaskIndex(commandDetails);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            removeTaskFromList(recordedList, index);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(INVALID_INDEX);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(INDEX_BEYOND_LIST);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(INVALID_INDEX);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void bidGoodbye() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        System.out.println(GOODBYE);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void processCommand(ArrayList\u003cTodo\u003e recordedList, String commandType, String commandDetails) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        switch(commandType) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            addTodoToList(recordedList, commandDetails);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            addDeadlineToList(recordedList, commandDetails);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            addEventToList(recordedList, commandDetails);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            printList(recordedList);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            completeTask(recordedList, commandDetails);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            deleteTask(recordedList, commandDetails);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            bidGoodbye();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(INVALID_COMMAND);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static boolean directoryExists() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return (dir.exists() \u0026\u0026 dir.isDirectory());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void createDirectory() {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        File dir \u003d new File (\"data\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        dir.mkdir();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static boolean savedDataExists() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        File savedData \u003d new File(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return savedData.exists();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void createSavedData() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        File dukeFile \u003d new File (\"Duke.txt\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            dukeFile.createNewFile();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(TEXT_FILE_CREATION_FAILED);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void emptyFile() throws IOException {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        fw.write(\"\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void writeTask(Todo task) throws IOException {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/Duke.txt\", true);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        fw.write(task.toSaveFormat() + System.lineSeparator());"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void writeList(ArrayList\u003cTodo\u003e recordedList) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            emptyFile();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            for (Todo task : recordedList) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                writeTask(task);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            System.out.println(SAVE_FAILED);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void updateSavedData(ArrayList\u003cTodo\u003e recordedList) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if(!directoryExists()) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            createDirectory();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if (!savedDataExists()) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            createSavedData();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        writeList(recordedList);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void serveUser() {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        ArrayList\u003cTodo\u003e recordedList \u003d createTaskListFromSavedData();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        String command, commandType, commandDetails \u003d \"\";"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            command \u003d getCommand();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            commandType \u003d extractCommandType(command.trim());"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            if (requireCommandDetails(commandType)) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                    commandDetails \u003d extractCommandDetails(command.trim());"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                    handleEmptyCommandDetails(commandType);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Darticune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            printDivider();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            processCommand(recordedList, commandType, commandDetails);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            updateSavedData(recordedList);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            printDivider();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } while (!isBye(commandType));"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        serveUser();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Darticune": 332
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Darticune"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Darticune"
        },
        "content": "public class Deadline extends Todo{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public Deadline(String details, String completeBy, String taskType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        super(details, completeBy, taskType);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public Deadline (String taskType, String state, String description, String timeline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        super(taskType, state, description,timeline);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public String getTimeline() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return (\" (by: \" + timeline + \")\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return super.toSaveFormat() + SEPARATOR + timeline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Darticune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Darticune": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Darticune"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Darticune"
        },
        "content": "public class Event extends Todo{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public Event(String details, String duration, String taskType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        super(details, duration, taskType);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public Event (String taskType, String state, String description, String timeline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        super(taskType, state, description,timeline);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public String getTimeline() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return (\" (at: \" + timeline + \")\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return super.toSaveFormat() + SEPARATOR + timeline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Darticune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Darticune": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Darticune"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Darticune"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return (isDone ? TICK_SYMBOL : CROSS_SYMBOL);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Darticune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Darticune": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Darticune"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Darticune"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    protected String timeline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public Todo(String description, String blank, String taskType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        timeline \u003d blank;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public Todo(String taskType, String state, String description, String timeline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if(state.equals(\"1\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            this.setAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        this.timeline \u003d timeline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public String getTimeline() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return timeline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        String payload \u003d taskType + SEPARATOR;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            payload +\u003d \"1\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            payload +\u003d \"0\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        payload +\u003d SEPARATOR + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return payload;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Darticune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Darticune": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Darticune"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Darticune"
        },
        "content": "todo read a book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Darticune"
        },
        "content": "deadline return book /by Friday 2359"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Darticune"
        },
        "content": "event go to library /at Friday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Darticune"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Darticune"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Darticune"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Darticune"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Darticune"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": "rubbish"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Darticune"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Darticune": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Darticune"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "Darticune": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Darticune"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Darticune"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Darticune"
        },
        "content": "#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 35,
      "Darticune": 3
    }
  }
]
