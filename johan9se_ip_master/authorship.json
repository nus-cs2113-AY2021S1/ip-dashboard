[
  {
    "path": "data/list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": " T | true | this"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": " T | false | that"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": " D | false | thing | tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": " E | false | stuff | 6pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": " T | false | thiss"
      }
    ],
    "authorContributionMap": {
      "johan9se": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final String COMMAND_EXIT_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        assert false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        ui.printGuideMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        storage.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        String inputLine;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            inputLine \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printLineBreak();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            tasks.accessTaskList(inputLine);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                storage.writeToFile(storage.filePath, storage.formatList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } while (!inputLine.equals(COMMAND_EXIT_WORD));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        new Duke(\"taskList.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 36,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final String COMMAND_LIST_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final String COMMAND_TODO_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final String COMMAND_EVENT_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final String COMMAND_DELETE_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final String COMMAND_DONE_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final String COMMAND_EXIT_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static String[] splitCommandWordAndArgs (String rawUserInput) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        final String[] split \u003d rawUserInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        if (split[0].matches(\"todo|deadline|event\") \u0026\u0026 split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            throw new DukeException(split[0]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return split.length \u003d\u003d 2 ? split : new String[] { split[0] , \"\" };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void parseCommand(String userInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            final String[] commandAndParams \u003d splitCommandWordAndArgs(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            final String command \u003d commandAndParams[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            final String commandArgs \u003d commandAndParams[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            case COMMAND_TODO_WORD:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                TaskList.addNewTodo(commandArgs, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            case COMMAND_DEADLINE_WORD:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                TaskList.addNewDeadline(commandArgs, true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            case COMMAND_EVENT_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                TaskList.addNewEvent(commandArgs, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            case COMMAND_LIST_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                TaskList.listItems();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            case COMMAND_DONE_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                TaskList.markTaskAsDone(commandArgs);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                TaskList.printDoneMessage(commandArgs);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            case COMMAND_DELETE_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                TaskList.deleteItem(commandArgs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            case COMMAND_EXIT_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                ui.printGoodbye();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                ui.printErrorMessage(Ui.DONT_UNDERSTAND_MESSAGE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                ui.printGuideMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } catch (NumberFormatException | NullPointerException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printErrorMessage(Ui.GENERAL_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printErrorMessage(Ui.INVALID_COMMAND_MESSAGE, e.command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johan9se"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 63
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import duke.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected static File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void load() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            readFromFile(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void readFromFile(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        int taskCount \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            processListFromFile(s.nextLine(), taskCount);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void processListFromFile(String taskLine, int listNumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        String[] args \u003d taskLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        String type \u003d args[0].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(args[1].trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        String description \u003d args[2].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        case ToDo.TODO_MARKER:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            TaskList.addNewTodo(description, false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        case Deadline.DEADLINE_MARKER:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            TaskList.addNewDeadline(description + \"\\\\  \" + args[3], false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        case Event.EVENT_MARKER:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            TaskList.addNewEvent(description + \"\\\\  \" + args[3], false);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            TaskList.taskList.get(listNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String formatList() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        StringBuilder text \u003d new StringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        for (int i \u003d 0; i\u003c TaskList.itemsInList; i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            text.append(TaskList.taskList.get(i).formatString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return text.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johan9se"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 78
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import duke.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected static int itemsInList \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        taskList \u003d  new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void accessTaskList(String inputCommand) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        Parser.parseCommand(inputCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void addNewListItem(Task item) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        taskList.add(item);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        itemsInList++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void addNewTodo(String args, boolean isNew) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        Task todo \u003d new ToDo(args);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        addNewListItem(todo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        if (isNew) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            echoNewlyAddedItem(todo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void addNewDeadline(String args, boolean isNew) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            String description \u003d splitDescriptionAndDateTime(args)[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            String byDateTime \u003d splitDescriptionAndDateTime(args)[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            Task deadline \u003d new Deadline(description, byDateTime);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            addNewListItem(deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            if (isNew) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                echoNewlyAddedItem(deadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printErrorMessage(Ui.MISSING_DATETIME_MESSAGE, \"deadline\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printErrorMessage(Ui.MISSING_DETAILS_MESSAGE, \"deadline\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void addNewEvent(String args, boolean isNew) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            String description \u003d splitDescriptionAndDateTime(args)[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            String atDateTime \u003d splitDescriptionAndDateTime(args)[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            Task event \u003d new Event(description, atDateTime);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            addNewListItem(event);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            if (isNew) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                echoNewlyAddedItem(event);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printErrorMessage(Ui.MISSING_DATETIME_MESSAGE, \"event\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printErrorMessage(Ui.MISSING_DETAILS_MESSAGE, \"event\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void echoNewlyAddedItem(Task item) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t   \" + item.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.printf(\"\\t Now you have \" + itemsInList + \" task%s in the list.\\n\" + Ui.LINE_BREAK +\"\\n\", (itemsInList \u003e1 ? \"s\":\"\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void deleteItem(String listNumber) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        int taskID \u003d Integer.parseInt(listNumber) - 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        if (0 \u003c\u003d taskID \u0026\u0026 taskID \u003c itemsInList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            System.out.println(\"\\t Okiedokie! This task has been removed:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            System.out.println(\"\\t   \" + taskList.remove(taskID).toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            itemsInList--;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            System.out.printf(\"\\t Now you have \" + itemsInList + \" task%s in the list.\\n\", (itemsInList \u003d\u003d1 ? \"s\":\"\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printLineBreak();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printErrorMessage(Ui.GENERAL_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static String[] splitDescriptionAndDateTime (String args) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        String description \u003d args.substring(0, args.indexOf(\"\\\\\")).trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        String dateTime \u003d args.substring(args.indexOf(\"\\\\\")+3).trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        String[] details \u003d {description, dateTime};"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        if (description.isEmpty() || dateTime.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void listItems() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        if (itemsInList \u003e 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            for (int i \u003d 0; i\u003c itemsInList; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                System.out.printf(\"\\t %d. %s\\n\", i+1, taskList.get(i).toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            System.out.println(\"\\t Your list is empty! Start adding tasks now :)\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        ui.printLineBreak();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void markTaskAsDone(String listNumber) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        int taskID \u003d Integer.parseInt(listNumber) - 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        if (0 \u003c\u003d taskID \u0026\u0026 taskID \u003c itemsInList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            taskList.get(taskID).markAsDone();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "johan9se"
        },
        "content": "            ui.printErrorMessage(Ui.GENERAL_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static void printDoneMessage(String listNumber) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        int taskID \u003d Integer.parseInt(listNumber) - 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t   \" + taskList.get(taskID).toString());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        ui.printLineBreak();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "johan9se"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 126
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    private static final String LOGO \u003d \"\\t   .            *        .\\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                                        \"\\t *    .     * .     *\\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                                        \"\\t  .         ___  .        *\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                                        \"\\t   *      _[___]_   .\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                                        \"\\t *  .      (\u0027v\u0027) v *    *\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                                        \"\\t        \u003e--( . )/     .     .\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                                        \"\\t .    *   (  :  )   *\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": "                                        \"\\t .. . ...  \u0027--`-` ... *  .\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    static final String GENERAL_ERROR_MESSAGE \u003d \"\\t Oops! Something went wrong. Please try again.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    static final String INVALID_COMMAND_MESSAGE \u003d \"\\t Ohno! The description of a \u0027%s\u0027 cannot be empty :(\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    static final String DONT_UNDERSTAND_MESSAGE \u003d \"\\t Uhm........I\u0027m sorry I do not understand what that means.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    static final String MISSING_DATETIME_MESSAGE \u003d \"\\t Please provide a date/time for this %s description!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    static final String MISSING_DETAILS_MESSAGE \u003d \"\\t Please provide all the details for this %s!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    static final String LINE_BREAK \u003d \"\\t_________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void printLineBreak() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        printLineBreak();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t Hi! I\u0027m Olaf!\\n\\t What can I do for you?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        printLineBreak();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t Byebye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        printLineBreak();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void printGuideMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t Here are the commands you can use:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t todo {description}........................ to add a new task\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t deadline {description} \\\\by {date time}.... to add a new task that needs to be done by a specific date/time\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t event {description} \\\\at {date time}....... to add a new task that starts and ends at a specific date/time\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t list...................................... to see your entire to-do list\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t delete [item num]........................... to remove item off the list\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t done [item num]........................... to check off something you have completed\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.println(\"\\t bye....................................... see you later alligator!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        printLineBreak();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void printErrorMessage(String message, String... args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        System.out.printf(message + \"\\n\" + LINE_BREAK + \"\\n\", args);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johan9se"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 59
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static final String DEADLINE_MARKER \u003d \"D\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return \" \" + DEADLINE_MARKER + \" \" + super.formatString() + \" | \" + by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return \"[\" + DEADLINE_MARKER + \"]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johan9se"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 23
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public DukeException(String command){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 14
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static final String EVENT_MARKER \u003d \"E\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return \" \" + EVENT_MARKER + \" \" + super.formatString() + \" | \" + at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return \"[\" + EVENT_MARKER + \"]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johan9se"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 23
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return \"| \" + this.isDone + \" | \"+ this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \"+ this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johan9se"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 28
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public static final String TODO_MARKER \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return \" \" + TODO_MARKER + \" \" + super.formatString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johan9se"
        },
        "content": "        return \"[\" + TODO_MARKER + \"]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johan9se"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johan9se": 19
    }
  },
  {
    "path": "src/main/java/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": " T | false | this"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": " T | false | that"
      }
    ],
    "authorContributionMap": {
      "johan9se": 2
    }
  },
  {
    "path": "taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": " E | false | CS2113 lecture | Friday 18 September 2020 from 4pm to 6pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": " T | true | this"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": " T | false | this"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": " D | true | thing | tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": " T | true | thing"
      }
    ],
    "authorContributionMap": {
      "johan9se": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johan9se"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johan9se"
        },
        "content": "todo CG2027 homework"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johan9se"
        },
        "content": "todo ST2334 tutorial"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johan9se"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johan9se"
        },
        "content": "done"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johan9se"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johan9se"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johan9se"
        },
        "content": "deadline assignment 2 \\by sunday 2359"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johan9se"
        },
        "content": "event \\at 1pm wednesday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": "event section dinner \\at 6pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johan9se"
        },
        "content": "delete"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johan9se"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johan9se"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johan9se"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johan9se"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "johan9se": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johan9se"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java  ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johan9se"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "johan9se": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johan9se"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "johan9se": 1,
      "-": 37
    }
  }
]
