[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### Duke manages your tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "You can add, delete, complete or find any tasks in your list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Duke supports three types of task: Todo, Deadline and Event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### Duke loads and saves your tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Duke automatically saves your current task list and loads it the next time you enter the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "You would not lose you tasks when you exit the program"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "## Start program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Navigate to the directory storing ip.jar and enter this command:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    java -jar ip.jar"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     ____        _        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Hello! I\u0027m Duke ☺"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Please enter a task:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "If ? appears instead of ☺, exit the program by entering `bye` and follow these steps:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "1. Change font in terminal to NSimSun"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "2. Enter this command in terminal: `ch65001`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "3. Run the program again with this command: `java -Dfile.encoding\u003dutf-8 -jar ip.jar`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### To add a todo task to the list: **`todo`**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Adds a todo task with description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "`todo` followed by `\u003cdescription\u003e`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    todo Physics Homework"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    1. [T][✗] Physics Homework"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Please enter a task:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### To add a deadline task to the list: **`deadline`**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Adds a deadline task with description, and a due date in the format"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "`deadline` followed by `\u003cdescription\u003e` then delimiter `/ by` and due date `YYYY-MM-DD`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    deadline Math Tutorial / by 2020-09-28"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    2. [D][✗] Math Tutorial (by: Sep 28 2020)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Please enter a task:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### To add an event task to the list: **`event`**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Adds an event task with description and date of event"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "`event` followed by `\u003cdescription\u003e` then delimiter `/ at` and date of event `YYYY-MM-DD`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    event Math Workshop / at 2020-08-12"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    3. [E][✗] Math Workshop (at: Aug 12 2020)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Please enter a task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### To list out all tasks containing a keyword: **`find`**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "List out all tasks that matches the keyword entered"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "`find` followed by `\u003ckeyword\u003e`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    find Math"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    2. [D][✗] Math Tutorial (by: Sep 28 2020)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    3. [E][✗] Math Workshop (at: Aug 12 2020)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Please enter a task:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### To list all tasks:**`list`**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Lists all tasks currently in task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    list"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Here are the tasks in your list"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    1. [T][✗] Physics Homework"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    2. [D][✗] Math Tutorial (by: Sep 28 2020)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    3. [E][✗] Math Workshop (at: Aug 12 2020)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Please enter a task:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### To delete a task from the list: **`delete`**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Deletes a task from the list"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "`delete` followed by `\u003cindex\u003e`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    delete 2"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    2. [D][✗] Math Tutorial (by: Sep 28 2020)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Please enter a task:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### To mark a task in the list as completed: **`done`**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Marks a task as completed by changing the status icon"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "`done` followed by `\u003cindex\u003e`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    done 1"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    [T][✓] Physics Homework"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Please enter a task:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### To exit Duke program: **`bye`**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Exits the program"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    bye"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Process finished with exit code 0"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "brandontoh": 156
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Instruction;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.ErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.MessagePrinter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import userRelated.InputParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import userRelated.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static Instruction instruction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            taskManager \u003d new TaskManager(storage.loadSavedFile());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * Asks for user input, parse the input, executes the commands then finally saves the tasks into a file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @throws IOException If the path to save the file cannot be found"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String userInput \u003d ui.askForInput();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                instruction \u003d InputParser.setInstructionEnumType(userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                ErrorMessage.checkTypeOutOfBoundsException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                description \u003d InputParser.splitInput(userInput, instruction);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                ErrorMessage.splitInputOutOfBoundsException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            if (instruction.isCommand()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                    taskManager.executeCommand(description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                    ErrorMessage.executeCommandIndexOutOfBound();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } else if (instruction.isTask()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                Task task \u003d TaskManager.createTask(instruction, description);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                taskManager.addToList(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            storage.saveFile(taskManager.getTaskList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            if (instruction \u003d\u003d Instruction.LIST || instruction \u003d\u003d Instruction.DONE || instruction \u003d\u003d Instruction.DELETE"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                    || instruction \u003d\u003d Instruction.FIND) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            MessagePrinter.printSingleTask(taskManager, TaskManager.getTaskCount() - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            MessagePrinter.printNoOfTasks(taskManager);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 78,
      "-": 3
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 4
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import userRelated.InputParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static final String DELIMITER \u003d \"/\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getFormattedDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return InputParser.getFormattedDescription(description, DELIMITER);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 19
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import userRelated.InputParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static final String DELIMITER \u003d \"/\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getFormattedDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return InputParser.getFormattedDescription(description, DELIMITER);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 19
    }
  },
  {
    "path": "src/main/java/task/Instruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * Enum class for the different type of instructions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * Also categorize the instructions into either command or task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * Further categorize the instructions into either one part or two part instructions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public enum Instruction {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    LIST (true, false, true, false),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    BYE (true, false, true, false),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    DONE (true, false,  false, true),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    TODO (false, true,  false, true),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    DEADLINE (false, true,  false, true),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    EVENT (false, true,  false, true),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    DELETE (true, false, false, true),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    FIND (true, true,  false, true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final boolean isCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final boolean isTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final boolean isOnePartInstruction;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final boolean isTwoPartInstruction;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Instruction(boolean isCommand, boolean isTask, boolean isOnePartInstruction, boolean isTwoPartInstruction) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isCommand \u003d isCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isTask \u003d isTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isOnePartInstruction \u003d isOnePartInstruction;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isTwoPartInstruction \u003d isTwoPartInstruction;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public boolean isCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return isCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public boolean isTask() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return isTask;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public boolean isOnePartInstruction() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return isOnePartInstruction;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public boolean isTwoPartInstruction() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return isTwoPartInstruction;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 46
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.MessagePrinter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * Represents a task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object consist of the description and completion status"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            return \"\\u2717\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return \"NIL\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getFormattedDescription(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void markAsCompleted() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        MessagePrinter.printMarkTaskAsDoneMessage(this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 46
    }
  },
  {
    "path": "src/main/java/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.ErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.MessagePrinter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import userRelated.InputParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * Manages all the tasks using an ArrayList and modifying it"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public TaskManager() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String filePath \u003d Storage.getFilePath();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String[] directoryAndFileNames \u003d filePath.split(\"/\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String fileName \u003d directoryAndFileNames[directoryAndFileNames.length -1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String directoryName \u003d filePath.substring(0, filePath.length() - fileName.length() - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        File d \u003d new File(directoryName);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        d.mkdir();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        File f \u003d new File(fileName);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public TaskManager(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        TaskManager.taskList \u003d taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static int getTaskCount() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void addToList(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        MessagePrinter.printAddedTaskMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void markAsCompleted(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        task.markAsCompleted();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * Returns a Task which is upcasted from either Todo, Deadline or Event"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @param instruction Type of instruction (Todo, Deadline or Event)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @param description User description of the task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @return task Task created based on instruction type"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static Task createTask(Instruction instruction, String description) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        switch (instruction) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            task \u003d new Deadline(description);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            task \u003d new Event(description);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            task \u003d new Task(description);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * Deletes a task from taskList"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @param index Index of the task to be removed based on taskList"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void deleteFromList(int index) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e getTaskCount()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            MessagePrinter.printInvalidTaskCount();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            taskList.remove(index - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * Executes the action according to type of instruction"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @param description User description of the action"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void executeCommand(String description) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        switch (InputParser.getInstruction()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            MessagePrinter.printExitMessage();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            MessagePrinter.printList(this);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                this.markAsCompleted(Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                ErrorMessage.executeCommandNullException(description);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                ErrorMessage.executeCommandNumberFormatException(description);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            if (Integer.parseInt(description) \u003e getTaskCount()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            MessagePrinter.printRemovedTaskMessage();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            MessagePrinter.printSingleTask(this, Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            this.deleteFromList(Integer.parseInt(description));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            MessagePrinter.printNoOfTasks(this);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            for(int i\u003d0; i\u003ctaskList.size(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                if (taskList.get(i).getFormattedDescription().contains(description)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                    MessagePrinter.printSingleTask(this, i);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            ErrorMessage.unexpectedError();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 141
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 11
    }
  },
  {
    "path": "src/main/java/text/ErrorMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * Prints out the error messages that appeared in the project"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class ErrorMessage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void unexpectedError() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Something unexpected occurred ... Exiting ... \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void executeCommandNullException(String enteredTaskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Invalid task number: \" + enteredTaskNum);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Current total tasks: \" + TaskManager.getTaskCount());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void executeCommandNumberFormatException(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Invalid task number: \" + description +\"\\nThis is NOT a number\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void checkTypeOutOfBoundsException() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void splitInputOutOfBoundsException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void uiLoadingError() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Creating new \\\"duke.txt\\\" file ...\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void executeCommandIndexOutOfBound() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Invalid index\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 37
    }
  },
  {
    "path": "src/main/java/text/MessagePrinter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * Prints out the messages that are used in the project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class MessagePrinter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\u263A\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printSingleTask(TaskManager list, int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String typeOfTask \u003d list.getTask(index).getTypeOfTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String statusIcon \u003d  list.getTask(index).getStatusIcon();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String description \u003d list.getTask(index).getFormattedDescription();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(index + 1 + \". [\" + typeOfTask + \"][\" + statusIcon + \"] \" + description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printNoOfTasks(TaskManager list) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Now you have \" + TaskManager.getTaskCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printList(TaskManager list) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskManager.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            printSingleTask(list, i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printRemovedTaskMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printInvalidTaskCount() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Invalid task number\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printAddedTaskMessage() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void askToEnterTaskMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Please enter a task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printMarkTaskAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"[\" + task.getTypeOfTask() + \"][\" + task.getStatusIcon() + \"] \" + task.getFormattedDescription());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "brandontoh": 68
    }
  },
  {
    "path": "src/main/java/text/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * Saves the tasks into a file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " * Loads the tasks from a file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Storage.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * Saves tasks in taskList to a file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @param taskList List of tasks added by user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @throws IOException If file cannot be found"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void saveFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            fw.write(t.getTypeOfTask() + \" | \" + t.getStatusIcon() + \" | \" + t.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * Loads the tasks from a file to taskList"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @return List of tasks loaded from the file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @throws IOException If file cannot be found"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @throws DukeException If scanner is unable to scan the file provided"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public ArrayList\u003cTask\u003e loadSavedFile() throws IOException, DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String[] inputFromFile \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String taskType \u003d inputFromFile[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String completionStatus \u003d inputFromFile[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String description \u003d inputFromFile[2];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            Task taskToBeAdded;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            switch(taskType) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                taskToBeAdded \u003d new ToDo(description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                taskToBeAdded \u003d new Deadline(description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                taskToBeAdded \u003d new Event(description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                taskToBeAdded \u003d new Task(description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            if (completionStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                taskToBeAdded.setDone(true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            taskList.add(taskToBeAdded);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static String getFilePath() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 83
    }
  },
  {
    "path": "src/main/java/userRelated/InputParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package userRelated;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Instruction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static Instruction instruction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * Returns a formatted description of a task which would be displayed in user console when required"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @param description User description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @param delimiter Delimiter that differentiates main description and date"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @return A formatted description for displaying on console"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static String getFormattedDescription(String description, String delimiter) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String[] slicedDescription \u003d description.split(delimiter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String conciseDescription \u003d slicedDescription[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String[] prepositionCombinedWithDate \u003d slicedDescription[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String preposition \u003d prepositionCombinedWithDate[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String unformattedDate \u003d prepositionCombinedWithDate[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(unformattedDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (!matcher.find()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            return conciseDescription + \"(\" + preposition + \": \" + unformattedDate + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            LocalDate ld \u003d LocalDate.parse(matcher.group(0));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String formattedDate \u003d dtf.format(ld);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            return conciseDescription + \"(\" + preposition + \": \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } catch (DateTimeException d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            return conciseDescription + \"(\" + preposition + \": \" + \"UNKNOWN\" + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * Returns description of a task after removing the first part of user input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @param input Actual user input without any filtering"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @param instruction Type of instruction"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @return Description of task with irrelevant information removed"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     * @throws DukeException If an instruction with two parts is interpreted as one part"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static String splitInput(String input, Instruction instruction) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String[] slicedInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (instruction.isOnePartInstruction()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            description \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } else if (instruction.isTwoPartInstruction()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                description \u003d slicedInput[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            description \u003d input;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static Instruction setInstructionEnumType(String input) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String[] slicedInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        switch(slicedInput[0]) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Instruction.LIST;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Instruction.BYE;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Instruction.DONE;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Instruction.TODO;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Instruction.DEADLINE;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Instruction.EVENT;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Instruction.DELETE;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Instruction.FIND;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return instruction;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static Instruction getInstruction() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return instruction;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 106
    }
  },
  {
    "path": "src/main/java/userRelated/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package userRelated;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.ErrorMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.MessagePrinter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        MessagePrinter.printWelcomeMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String askForInput() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        MessagePrinter.askToEnterTaskMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        ErrorMessage.uiLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "event have fun / at 12 pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "deadline physics homework / by 8 jan"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "brandontoh": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/exception/*.java ../src/main/java/task/*.java ../src/main/java/text/*.java ../src/main/java/userRelated/*.java ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "brandontoh": 2
    }
  }
]
