[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.ErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import text.Print;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static Command instruction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static final TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Print.printWelcomeMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String userInput \u003d askForInput();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                checkTypeOfInstruction(userInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                splitInput(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                ErrorMessage.checkTypeOutOfBoundsException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                splitInput(userInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                ErrorMessage.splitInputOutOfBoundsException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            if (instruction.isCommand()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                executeCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } else if (instruction.isTask()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                Task task \u003d taskManager.createTask(instruction, description);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                taskManager.addToList(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            if (instruction \u003d\u003d Command.LIST || instruction \u003d\u003d Command.DONE) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            Print.printSingleTask(taskManager, TaskManager.getTaskCount()-1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            Print.printNoOfTasks(taskManager);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static String askForInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Please enter a task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void checkTypeOfInstruction(String input) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String[] slicedInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        switch(slicedInput[0]) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Command.LIST;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Command.BYE;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Command.DONE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Command.TODO;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Command.DEADLINE;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            instruction \u003d Command.EVENT;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void splitInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String[] slicedInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (instruction.isOnePartInstruction()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            description \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } else if (instruction.isTwoPartInstruction()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                description \u003d slicedInput[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            description \u003d input;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void executeCommand() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        switch (instruction) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            Print.printExitMessage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            Print.printList(taskManager);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                taskManager.markAsCompleted(Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                ErrorMessage.executeCommandNullException(description);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                ErrorMessage.executeCommandNumberFormatException(description);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            ErrorMessage.unexpectedError();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 122,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 2
    }
  },
  {
    "path": "src/main/java/task/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    LIST (true, false, true, false),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    BYE (true, false, true, false),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    DONE (true, false,  false, true),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    TODO (false, true,  false, true),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    DEADLINE (false, true,  false, true),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    EVENT (false, true,  false, true),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    NONE (false, true,  false, false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final boolean isCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final boolean isTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final boolean isOnePartInstruction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private final boolean isTwoPartInstruction;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    Command(boolean isCommand, boolean isTask, boolean isOnePartInstruction, boolean isTwoPartInstruction) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isCommand \u003d isCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isTask \u003d isTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isOnePartInstruction \u003d isOnePartInstruction;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isTwoPartInstruction \u003d isTwoPartInstruction;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public boolean isCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return isCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public boolean isTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return isTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public boolean isOnePartInstruction() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return isOnePartInstruction;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public boolean isTwoPartInstruction() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return isTwoPartInstruction;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 40
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    private static final String DELIMINATOR \u003d \"/ by\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getFormattedDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String[] slicedDescription \u003d description.split(DELIMINATOR);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String what \u003d slicedDescription[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String when \u003d slicedDescription[1].trim();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String[] slicedWhen \u003d when.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        when \u003d slicedWhen[0] + \": \" + slicedWhen[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return what + \"(\" + when + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 22
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getFormattedDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (description.contains(\"/ at\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String[] slicedDescription \u003d description.split(\"/ at\", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String what \u003d slicedDescription[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String when \u003d slicedDescription[1].trim();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String[] slicedWhen \u003d when.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            when \u003d slicedWhen[0] + \": \" + slicedWhen[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            return what + \"(\" + when + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 23
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return \"NIL\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getFormattedDescription(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (description.contains(\"/\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String[] slicedDescription \u003d description.split(\"/\", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String what \u003d slicedDescription[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String when \u003d slicedDescription[1].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            String[] slicedWhen \u003d when.split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            when \u003d slicedWhen[0] + \": \" + slicedWhen[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            return what + \"(\" + when + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void markAsCompleted() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        if (!isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            System.out.println(\"What!?!?! I\u0027ve already marked this task as done:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"[\" + getTypeOfTask() + \"][\" + getStatusIcon() + \"] \" + getFormattedDescription());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 45
    }
  },
  {
    "path": "src/main/java/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    static protected Task[] list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    static protected int taskCount;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        list \u003d new Task[100];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        taskCount \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Task[] getList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static int getTaskCount() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return list[index];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void addToList(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        list[taskCount] \u003d task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void markAsCompleted(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Task task \u003d list[index];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        task.markAsCompleted();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Task createTask(Command instruction, String description) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        switch (instruction) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            task \u003d new Deadline(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            task \u003d new Event(description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            task \u003d new Task(description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 53
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 13
    }
  },
  {
    "path": "src/main/java/text/ErrorMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class ErrorMessage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void unexpectedError() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Something unexpected occurred ... Exiting ... \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void executeCommandNullException(String enteredTaskNum) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Invalid task number: \" + enteredTaskNum);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Current total tasks: \" + TaskManager.getTaskCount());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void executeCommandNumberFormatException(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Invalid task number: \" + description +\"\\nThis is NOT a number\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void checkTypeOutOfBoundsException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void splitInputOutOfBoundsException() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 26
    }
  },
  {
    "path": "src/main/java/text/Print.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import task.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Print {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printSingleTask(TaskManager list, int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String typeOfTask \u003d list.getTask(index).getTypeOfTask();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String statusIcon \u003d  list.getTask(index).getStatusIcon();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String description \u003d list.getTask(index).getFormattedDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(index + 1 + \". [\" + typeOfTask + \"][\" + statusIcon + \"] \" + description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printNoOfTasks(TaskManager list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Now you have \" + TaskManager.getTaskCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public static void printList(TaskManager list) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskManager.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            printSingleTask(list, i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "brandontoh": 42
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "event have fun / at 12 pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "deadline physics homework / by 8 jan"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "brandontoh": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "brandontoh": 2
    }
  }
]
