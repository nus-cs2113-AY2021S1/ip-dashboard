[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "# Duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "yokemin": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "### Feature 1: Add todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "Add a todo-type task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "#### Usage: `todo todoDescription`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_Requirements:_"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `todoDescription` cannot be empty"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `todo` keyword must be in non-capitalised"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Expected outcome:__"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- adds a todo-type task with `todoDescription` as task description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Example of usage:__"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- input: `todo CS2113 Week 1 Repl.it exercises`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- outcome: adds `[T]`-type task `CS2113 Week 1 Repl.it exercises` to the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "### Feature 2: Add deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": "Add a deadline-type task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "#### Usage: `deadline deadlineDescription /by date time`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_Requirements:_"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `deadlineDescription` cannot be empty"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `deadline` keyword must be in non-capitalised"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `/by` delimiter is necessary"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `date` is necessary; must be in `yyyy-MM-dd` format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `time` is _optional_; must be in `HH:mm` format (hour is in 24 hours format)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Expected outcome:__"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- adds a deadline-type task with:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    1. `deadlineDescription` as task description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    2. `date` and `time` (if applicable) in brackets `(by: date time)`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Example of usage:__"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- input: `deadline do CS2113 luminus quiz /by 2020-08-08 23:59`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- outcome: adds `[D]`-type task `do CS2113 luminus quiz` `(by: Aug 08 2020 23:59)` to the list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yokemin"
        },
        "content": "### Feature 3: Add event"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yokemin"
        },
        "content": "Add a event-type task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yokemin"
        },
        "content": "#### Usage: `event eventDescription /at inputString`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_Requirements:_"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `eventDescription` cannot be empty"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `event` keyword must be in non-capitalised"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `/at` delimiter is necessary"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `inputString` is necessary"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Expected outcome:__"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- adds a event-type task with:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    1. `eventDescription` as task description"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    2. `inputString` (if applicable) in brackets `(at: inputString)`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Example of usage:__"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- input: `event CS2113 exam /at school tmr`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- outcome: adds `[E]`-type task `CS2113 exam` `(at: school tmr)` to the list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yokemin"
        },
        "content": "### Feature 4: List tasks"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yokemin"
        },
        "content": "#### Usage: `list`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_Requirements:_"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `list` keyword must be in non-capitalised"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Expected outcome:__"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- prints out all tasks in the list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Example of usage:__"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- input: `list`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- outcome: lists out all tasks (todo, deadline, event)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yokemin"
        },
        "content": "### Feature 5: Mark Done"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yokemin"
        },
        "content": "Mark a task as done. "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yokemin"
        },
        "content": "Before being marked done, tasks are all marked as undone."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yokemin"
        },
        "content": "#### Usage: `done taskNo`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_Requirements:_"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `taskNo` cannot be empty; must be a valid task number"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `done` keyword must be in non-capitalised"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Expected outcome:__"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- marks `taskNo` task in list as done. "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Example of usage:__"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- input: `done 1`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- outcome: marks task 1 of list of tasks as done. "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    - Status icon for that particular task changes from `[cross]` to `[tick]`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yokemin"
        },
        "content": "### Feature 6: Delete Tasks"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yokemin"
        },
        "content": "Delete a task from current list of tasks."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yokemin"
        },
        "content": "#### Usage: `delete taskNo`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_Requirements:_"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `taskNo` cannot be empty; must be a valid task number"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `delete` keyword must be in non-capitalised"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Expected outcome:__"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `taskNo` task is removed from list of tasks"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Example of usage:__"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- input: `delete 1`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- outcome: task 1 in the `list` will be deleted."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yokemin"
        },
        "content": "### Feature 7: Find tasks"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yokemin"
        },
        "content": "Finds tasks given a keyword and prints a list of task containing that keyword."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yokemin"
        },
        "content": "#### Usage: `find keyword`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_Requirements:_"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `keyword` cannot be empty"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `find` keyword must be in non-capitalised"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Expected outcome:__"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- prints out a `list` of tasks that contains the `keyword`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- if none of the tasks in `list` contains `keyword` : message will be returned"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Example of usage:__"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- input: `find work`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- outcome: prints a `list` of all tasks with `work` in its description or in its delimiter argument"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_________"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yokemin"
        },
        "content": "### Feature 8: Bye"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yokemin"
        },
        "content": "Exits program"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yokemin"
        },
        "content": "#### Usage: `bye`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yokemin"
        },
        "content": "_Requirements:_"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- `bye` keyword must be in non-capitalised"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Expected outcome:__"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- prints goodbye message and exits program"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yokemin"
        },
        "content": "__Example of usage:__"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- input: `bye`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yokemin"
        },
        "content": "- outcome: `Bye. Hope to see you again soon!`"
      }
    ],
    "authorContributionMap": {
      "-": 11,
      "yokemin": 158
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Constructor for Duke class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param filePath Path of duke.txt file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            tasks.viewTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            ui.showLoadingError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Runs Duke program"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                String userInput \u003d Ui.getUserInput();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                Command command \u003d Parser.parseCommand(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                command.executeCommand(userInput, tasks, Path.of(Storage.fileName));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                isBye \u003d ui.sayBye(userInput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                ui.showErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 59
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void executeCommand(String userInput, TaskList tasks, Path filePath) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Task taskToAdd \u003d Parser.getTask(userInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Storage.updateFile(tasks, Path.of(Storage.fileName));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 20
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class ByeCommand extends  Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void executeCommand(String userInput, TaskList tasks, Path filePath) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 13
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public abstract void executeCommand(String userInput, TaskList tasks, Path filePath) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 12
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void executeCommand(String userInput, TaskList tasks, Path filePath) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int taskNo \u003d Parser.getTaskNo(userInput);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        tasks.deleteTask(taskNo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Storage.updateFile(tasks, Path.of(Storage.fileName));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 18
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void executeCommand(String userInput, TaskList tasks, Path filePath) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int taskNo \u003d Parser.getTaskNo(userInput);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        tasks.markTaskAsDone(taskNo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Storage.updateFile(tasks, Path.of(Storage.fileName));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 18
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import static duke.Duke.HORIZONTAL_LINE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String NO_TASK_FOUND_ERROR \u003d \"No tasks matches your keyword.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private void printRelatedTasks(ArrayList\u003cTask\u003e relatedTasks) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (relatedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(NO_TASK_FOUND_ERROR);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            for (Task t : relatedTasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                System.out.println(i + \": \" + t.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void executeCommand(String userInput, TaskList tasks, Path filePath) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        String keyword \u003d Parser.getKeyword(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        ArrayList\u003cTask\u003e relatedTasks \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        printRelatedTasks(relatedTasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void executeCommand(String userInput, TaskList tasks, Path filePath) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        tasks.viewTasks();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 14
    }
  },
  {
    "path": "src/main/java/duke/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import static duke.Duke.HORIZONTAL_LINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String NO_TASK_IN_LIST_ERROR \u003d \"There are no tasks in your list.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private final ArrayList\u003cTask\u003e arrayOfTasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Constructor for TaskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Instantiates new \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTasks\u003c/code\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Constructor for TaskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Assigns value to attribute arrayOfTasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param arrayOfTasks ArrayList of Tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arrayOfTasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.arrayOfTasks \u003d arrayOfTasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Gets ArrayList of Tasks in attribute arrayOfTasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return arrayOfTasks ArrayList of Tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public ArrayList\u003cTask\u003e getArrayOfTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return arrayOfTasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Gets size of ArrayList arrayOfTasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return integer number of tasks in arrayOfTasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public int getNoOfTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return arrayOfTasks.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Adds Task object into arrayOfTasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param task Task object to be added"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        printTaskAdded(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Returns Task object given its index"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param index index of target Task object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return task Task object with of specified index"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Task getTaskFromIndex(int index) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return arrayOfTasks.get(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private void printTaskAdded(Task taskAdded) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + taskAdded);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Now you have \" + getNoOfTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * prints items on current arrayOfTasks"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void viewTasks() throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // handle error case where no tasks in array"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (getNoOfTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(NO_TASK_IN_LIST_ERROR);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d getNoOfTasks(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                System.out.println(i + \". \" + getArrayOfTasks().get(i - 1));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * marks tasks as done"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param taskNo task number of task to be marked done"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void markTaskAsDone(int taskNo) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (taskNo \u003e getNoOfTasks()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"You only have \" + getNoOfTasks() + \" task(s)!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            getTaskFromIndex(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            printTaskDone(taskNo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private void printTaskDone(int taskNo) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Nice! I have marked this task as done:\" + getTaskFromIndex(taskNo - 1));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Delete tasks"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param taskNo task number of task to be deleted"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void deleteTask(int taskNo) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (taskNo \u003e getNoOfTasks()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"You only have \" + getNoOfTasks() + \" task(s)!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            printTaskDeleted(taskNo);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            arrayOfTasks.remove(taskNo - 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private void printTaskDeleted(int taskNo) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \" + System.lineSeparator() + getTaskFromIndex(taskNo - 1));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Now you have \" + (getNoOfTasks() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Given keyword, search for tasks with descriptions that contains the keyword"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param keyword String that is present in the task descriptions"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return relatedTasks ArrayList of tasks with descriptions that contains the keyword"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        ArrayList\u003cTask\u003e relatedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        for (Task t : arrayOfTasks) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            if (t.toString().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                relatedTasks.add(t);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return relatedTasks;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 142
    }
  },
  {
    "path": "src/main/java/duke/data/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 8
    }
  },
  {
    "path": "src/main/java/duke/data/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Deadline(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        super(description, date, time);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDateString() + getTimeString() + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 16
    }
  },
  {
    "path": "src/main/java/duke/data/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        super(description, null, null);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 16
    }
  },
  {
    "path": "src/main/java/duke/data/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Task(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // Getters"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return (isDone ? TICK_SYMBOL : CROSS_SYMBOL); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // Setters"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return getDate().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (getTime() \u003d\u003d null){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            return \" \" + getTime().toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 61
    }
  },
  {
    "path": "src/main/java/duke/data/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        super(description, null, null);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 13
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String TODO_ERROR \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String EVENT_ERROR \u003d \"☹ OOPS!!! The description of an event cannot be empty or is incomplete (/at).\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String DEADLINE_ERROR \u003d \"☹ OOPS!!! The description of a deadline cannot be empty or is incomplete (/by).\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String KEYWORD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String KEYWORD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String KEYWORD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String KEYWORD_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String KEYWORD_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String KEYWORD_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String KEYWORD_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String KEYWORD_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final int ADD_INDEX_TO_TODO \u003d 5;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final int ADD_INDEX_TO_EVENT \u003d 6;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final int ADD_INDEX_TO_DEADLINE \u003d 9;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final int ADD_INDEX_TO_FIND \u003d 5;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String TASK_NUM_INPUT_ERROR \u003d \"Invalid Input! Input format should have an integer!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String TASK_NUM_ZERO_ERROR \u003d \"Invalid Input! Integer cannot be 0!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String UNKNOWN_COMMAND_ERROR \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String DATETIME_FORMAT_ERROR \u003d \"Date and Time format should be \\\"YYYY-MM-DD HR:MIN\\\" (Time is optional)\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String INPUT_DATE_FORMAT \u003d \"yyyy-MM-dd\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String INPUT_TIME_FORMAT \u003d \"HH:mm\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final int LENGTH_OF_DATE \u003d 10;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static boolean invalidInput \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Deals with invalid user inputs"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param userInput returned by \u003ccode\u003egetUserInput()\u003c/code\u003e method in Ui class"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void handleErrorUserInputs(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        userInput \u003d userInput.toLowerCase().trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // check if todo description is empty"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.contains(KEYWORD_TODO) \u0026\u0026 !(userInput.contains(KEYWORD_EVENT)) \u0026\u0026 !(userInput.contains(KEYWORD_DEADLINE))) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            validateTodo(userInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // check if event description is empty"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_EVENT) \u0026\u0026 !(userInput.contains(KEYWORD_TODO)) \u0026\u0026 !(userInput.contains(KEYWORD_DEADLINE))) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            validateEvent(userInput);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // check if deadline description is empty"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_DEADLINE) \u0026\u0026 !(userInput.contains(KEYWORD_TODO)) \u0026\u0026 !(userInput.contains(KEYWORD_EVENT))) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            validateDeadline(userInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // check if keyword were used in userInput"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_LIST)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.contains(KEYWORD_BYE)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.contains(KEYWORD_DONE)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.contains(KEYWORD_DELETE)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.contains(KEYWORD_FIND)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // incorrect input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(UNKNOWN_COMMAND_ERROR);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void validateDeadline(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.substring(ADD_INDEX_TO_DEADLINE - 1).trim().isEmpty()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || !(userInput.contains(\"/by\"))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.substring(userInput.indexOf(\"/by\") + 3).trim().isEmpty() ) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(DEADLINE_ERROR);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void validateEvent(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.substring(ADD_INDEX_TO_EVENT - 1).trim().isEmpty()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || !(userInput.contains(\"/at\"))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.substring(userInput.indexOf(\"/at\") + 3).trim().isEmpty()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(EVENT_ERROR);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void validateTodo(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.substring(ADD_INDEX_TO_TODO - 1).trim().isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(TODO_ERROR);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Given user input, it parses through the input and determines the command to be executed."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param userInput returned by \u003ccode\u003egetUserInput()\u003c/code\u003e method in Ui class"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return Command Instantiates a command class that extends from abstract class Command"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static Command parseCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Command result;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.contains(KEYWORD_LIST)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            result \u003d new ListCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_DONE)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            result \u003d new DoneCommand();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_DELETE)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            result \u003d new DeleteCommand();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_FIND)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            result \u003d new FindCommand();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_BYE)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            result \u003d new ByeCommand();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (!userInput.contains(KEYWORD_BYE)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            result \u003d new AddCommand();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(\"Command Error!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * parses through \u003ccode\u003euserInput\u003c/code\u003e to instantiates Tasks to be added to the Arraylist of Tasks"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return taskToAdd Task object to be added"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static Task getTask(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Task taskToAdd \u003d null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.contains(KEYWORD_DEADLINE)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            taskToAdd \u003d getDeadline(userInput);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_EVENT)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            taskToAdd \u003d getEvent(userInput);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_TODO)){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            taskToAdd \u003d getTodo(userInput);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return taskToAdd;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static Todo getTodo(String userInput) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int descriptionIndex \u003d userInput.indexOf(\"todo\") + ADD_INDEX_TO_TODO;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // Create Todo"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return new Todo(userInput.substring(descriptionIndex));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static Event getEvent(String userInput) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int descriptionIndex \u003d userInput.indexOf(\"event\") + ADD_INDEX_TO_EVENT;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // Create Event"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return new Event(userInput.substring(descriptionIndex, byIndex-1), userInput.substring(byIndex + 4));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static Deadline getDeadline(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int descriptionIndex \u003d userInput.indexOf(\"deadline\") + ADD_INDEX_TO_DEADLINE;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // Create Deadline"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        String byDescription \u003d userInput.substring(byIndex + 4);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        LocalDate date \u003d parseDate(byDescription);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        LocalTime time \u003d parseTime(byDescription);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            return new Deadline(userInput.substring(descriptionIndex, byIndex-1), date, time);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(DEADLINE_ERROR);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Parses through \u003ccode\u003euserInput\u003c/code\u003e and determines the task number"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Only relevant to \u003ccode\u003edelete\u003c/code\u003e and \u003ccode\u003edone\u003c/code\u003e commands"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return taskNo task number"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @throws DukeException thrown when it catches \u003ccode\u003eNumberFormatException\u003c/code\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static int getTaskNo(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        userInput \u003d userInput.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int taskNo;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            taskNo \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            if (taskNo \u003d\u003d 0) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                throw new DukeException(TASK_NUM_ZERO_ERROR);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(TASK_NUM_INPUT_ERROR);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return taskNo;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static LocalDate parseDate(String description) throws DukeException{"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        //create dates from strings"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            description \u003d description.substring(0, LENGTH_OF_DATE);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            date \u003d LocalDate.parse(description, formatter);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(DATETIME_FORMAT_ERROR);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static LocalTime parseTime(String description) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        //create time from strings"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        LocalTime time;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(INPUT_TIME_FORMAT);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            int timeIndex \u003d description.indexOf(\" \");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            description \u003d description.substring(timeIndex + 1);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            time \u003d LocalTime.parse(description, formatter);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            time \u003d null;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static String getKeyword(String userInput) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int descriptionIndex \u003d userInput.indexOf(\"find\") + ADD_INDEX_TO_FIND;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return userInput.substring(descriptionIndex).trim().toLowerCase();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 226
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String UPDATE_FILE_ERROR \u003d \"Something went wrong when updating file.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String LOAD_FILE_ERROR \u003d \"Something went wrong when loading file.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String NO_FILE_ERROR \u003d \"File not found, new duke.txt file will be created.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String DATE_FORMAT_OF_FILE \u003d \"MMM dd yyyy\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final int LENGTH_OF_DATE \u003d 11;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String TIME_FORMAT_OF_FILE \u003d \"HH:mm\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static String fileName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        fileName \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Checks if duke.txt file exists."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * If it does not, a new duke.txt file will be created."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * If it does, it will process the list of tasks in the file and loads all tasks into the program"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @throws DukeException catches \u003ccode\u003eIOException\u003c/code\u003e and \u003ccode\u003eNoSuchFileException\u003c/code\u003e and throws new DukeException."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        ArrayList\u003cTask\u003e arrayOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Scanner s;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            s \u003d new Scanner(Path.of(fileName));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (NoSuchFileException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(NO_FILE_ERROR);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(LOAD_FILE_ERROR);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            String fileInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            String taskIcon \u003d fileInput.substring(0, 3);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            addTaskFromFile(fileInput, taskIcon, arrayOfTasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return arrayOfTasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Update file according to changes to made to list of tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param tasks Instance of TaskList class"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param filePath Path of duke.txt file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void updateFile(TaskList tasks, Path filePath) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            FileWriter fw \u003d new FileWriter(String.valueOf(filePath));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            for (Task t : tasks.getArrayOfTasks()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                fw.write(t.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            fw.write(\"There are a total of \" + tasks.getNoOfTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DukeException(UPDATE_FILE_ERROR);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Adds task from duke.txt file to the list of tasks in the program"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param fileInput duke.txt file scanned line by line"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param taskIcon indicates if a task is to be marked as done"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param arrayOfTasks Arraylist of Tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void addTaskFromFile(String fileInput, String taskIcon, ArrayList\u003cTask\u003e arrayOfTasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        switch (taskIcon) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        case \"[T]\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            addTodoFromFile(fileInput, arrayOfTasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        case \"[E]\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            addEventFromFile(fileInput, arrayOfTasks);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        case \"[D]\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            addDeadlineFromFile(fileInput, arrayOfTasks);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void addDeadlineFromFile(String fileInput, ArrayList\u003cTask\u003e arrayOfTasks) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int byIndex \u003d fileInput.indexOf(\"(by:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        String byDescription \u003d fileInput.substring(byIndex + 5, fileInput.indexOf(\")\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        LocalDate date \u003d formatDate(byDescription);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        LocalTime time \u003d formatTime(byDescription);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Deadline deadlineAdded \u003d new Deadline(fileInput.substring(7, byIndex), date, time);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(deadlineAdded);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (fileInput.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            arrayOfTasks.get(arrayOfTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static LocalDate formatDate(String description) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        description \u003d description.substring(0, LENGTH_OF_DATE);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT_OF_FILE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        date \u003d LocalDate.parse(description, formatter);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static LocalTime formatTime(String description) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        LocalTime time;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(TIME_FORMAT_OF_FILE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            description \u003d description.substring(LENGTH_OF_DATE + 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            time \u003d LocalTime.parse(description, formatter);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            time \u003d null;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void addEventFromFile(String fileInput, ArrayList\u003cTask\u003e arrayOfTasks) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int byIndex \u003d fileInput.indexOf(\"(at:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Event eventAdded \u003d new Event(fileInput.substring(7, byIndex), fileInput.substring(byIndex + 5, fileInput.indexOf(\")\")));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(eventAdded);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (fileInput.contains(Task.TICK_SYMBOL)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            arrayOfTasks.get(arrayOfTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void addTodoFromFile(String fileInput, ArrayList\u003cTask\u003e arrayOfTasks) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Todo todoAdded \u003d new Todo(fileInput.substring(7));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(todoAdded);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (fileInput.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            arrayOfTasks.get(arrayOfTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 154
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import static duke.Duke.HORIZONTAL_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import static duke.parser.Parser.KEYWORD_BYE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Greets user when program starts"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void greetUser(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * ends program when reader says \u0027bye\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param byeInput userInput"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return isBye boolean value, true if userInput contains \u0027bye\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public boolean sayBye(String byeInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (byeInput.toLowerCase().contains(KEYWORD_BYE)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Gets user input that will determine next command"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @return userInput"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @throws DukeException catches possible errors caused by invalid user inputs"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @see Parser"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static String getUserInput() throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // Get first user input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        String userInput \u003d scan.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Parser.handleErrorUserInputs(userInput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // Subsequent user inputs"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        while (Parser.invalidInput) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            userInput \u003d scan.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                Parser.handleErrorUserInputs(userInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                Parser.invalidInput \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Prints the error message for errors encountered when loading duke.txt file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param message Error message to be printed"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void showLoadingError(String message) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * Prints the error message for errors encountered when parsing user inputs or executing commands in the program"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     * @param message Error message to be printed"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yokemin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void showErrorMessage(String message) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 93
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "deadline return book /by 25 Jan"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "event project meeting /at 26 Jan"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yokemin": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "yokemin": 2
    }
  }
]
