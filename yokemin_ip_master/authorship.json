[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "# Duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "yokemin": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class DeadlineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 4
    }
  },
  {
    "path": "src/main/java/duke/command/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final int ADD_INDEX_TO_TODO \u003d 5;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final int ADD_INDEX_TO_EVENT \u003d 6;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final int ADD_INDEX_TO_DEADLINE \u003d 9;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String KEYWORD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String KEYWORD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String KEYWORD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String KEYWORD_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String KEYWORD_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String KEYWORD_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static final String KEYWORD_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static boolean invalidInput \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static ArrayList\u003cTask\u003e arrayOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // Greet user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.Duke\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // Load data from file in hard disk"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        String fileName \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            loadFile(fileName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (NoSuchFileException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // it automatically creates a new file in updateFile method"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yokemin"
        },
        "content": "//            File f \u003d new File(fileName); // create a File for the given file path"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yokemin"
        },
        "content": "//            filePath \u003d Paths.get(fileName);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"File not found, new duke.txt file created.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // Get 1st user input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        userInput \u003d getUserInput(scan);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // Clean text input, handle errors"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        while (invalidInput) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            userInput \u003d getUserInput(scan);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        while (sayBye(userInput) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            if (userInput.contains(KEYWORD_LIST)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                viewTasks(arrayOfTasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } else if (userInput.contains(KEYWORD_DONE)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                markTaskAsDone(userInput);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } else if (userInput.contains(KEYWORD_DELETE)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                deleteTask(userInput);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                addTaskToArray(userInput);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // Update file"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                updateFile(Path.of(fileName));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // Get new userInput"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            userInput \u003d getUserInput(scan);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // Clean text input, handle errors"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            while (invalidInput) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                userInput \u003d getUserInput(scan);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void loadFile(String fileName) throws NoSuchFileException, IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Scanner s \u003d new Scanner(Path.of(fileName)); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            String fileInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            if (fileInput.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                addTodoFromFile(fileInput);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } else if (fileInput.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                addEventFromFile(fileInput);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } else if (fileInput.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                addDeadlineFromFile(fileInput);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        viewTasks(arrayOfTasks);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void addDeadlineFromFile(String fileInput) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int byIndex \u003d fileInput.indexOf(\"(by:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Deadline deadlineAdded \u003d new Deadline(fileInput.substring(7, byIndex), fileInput.substring(byIndex + 5, fileInput.indexOf(\")\")));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(deadlineAdded);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (fileInput.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            arrayOfTasks.get(arrayOfTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void addEventFromFile(String fileInput) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int byIndex \u003d fileInput.indexOf(\"(at:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Event eventAdded \u003d new Event(fileInput.substring(7, byIndex), fileInput.substring(byIndex + 5, fileInput.indexOf(\")\")));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(eventAdded);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (fileInput.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            arrayOfTasks.get(arrayOfTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void addTodoFromFile(String fileInput) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Todo todoAdded \u003d new Todo(fileInput.substring(7));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(todoAdded);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (fileInput.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            arrayOfTasks.get(arrayOfTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // Update file according to changes to list of tasks"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void updateFile(Path filePath) throws IOException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        FileWriter fw \u003d new FileWriter(String.valueOf(filePath));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        for (Task t : arrayOfTasks) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            fw.write(t.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        fw.write(\"There are a total of \" + arrayOfTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    private static void deleteTask(String userInput) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        userInput \u003d userInput.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            int taskNo \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // handle error where task no is out of range"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            if (taskNo \u003e arrayOfTasks.size()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                System.out.println(\"You only have \" + arrayOfTasks.size() + \" task(s)!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \" + System.lineSeparator() + arrayOfTasks.get(taskNo - 1));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                arrayOfTasks.remove(taskNo - 1);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                System.out.println(\"Now you have \" + arrayOfTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Invalid Input! Input format should have an integer e.g. done 2\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Invalid Input! Integer cannot be 0!\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static String getUserInput(Scanner scan) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        userInput \u003d scan.nextLine();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            handleErrorUserInputs(userInput);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d true;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + KEYWORD_TODO + \" cannot be empty.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (EventException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d true;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + KEYWORD_EVENT + \" cannot be empty or is incomplete (/at).\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (DeadlineException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d true;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + KEYWORD_DEADLINE + \" cannot be empty or is incomplete (/by).\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void addTaskToArray(String userInput) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Task taskAdded \u003d null;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.contains(KEYWORD_DEADLINE)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            taskAdded \u003d addDeadlineToArray(userInput);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_EVENT)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            taskAdded \u003d addEventToArray(userInput);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_TODO)){"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            taskAdded \u003d addTodoToArray(userInput);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + taskAdded);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(\"Now you have \" + arrayOfTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static Todo addTodoToArray(String userInput) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int descriptionIndex \u003d userInput.indexOf(\"todo\") + ADD_INDEX_TO_TODO;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // add Todo to arraylist"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Todo todoAdded \u003d new Todo(userInput.substring(descriptionIndex));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(todoAdded);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return todoAdded;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static Event addEventToArray(String userInput) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int descriptionIndex \u003d userInput.indexOf(\"event\") + ADD_INDEX_TO_EVENT;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // add Event to arraylist"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Event eventAdded \u003d new Event(userInput.substring(descriptionIndex, byIndex-1), userInput.substring(byIndex + 4));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(eventAdded);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return eventAdded;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static Deadline addDeadlineToArray(String userInput) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int descriptionIndex \u003d userInput.indexOf(\"deadline\") + ADD_INDEX_TO_DEADLINE;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // add Deadline to arraylist"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        Deadline deadlineAdded \u003d new Deadline(userInput.substring(descriptionIndex, byIndex-1), userInput.substring(byIndex + 4));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        arrayOfTasks.add(deadlineAdded);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return deadlineAdded;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // marks tasks as done"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void markTaskAsDone(String userInput) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        userInput \u003d userInput.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            int taskNo \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // handle error where task no is out of range"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            if (taskNo \u003e arrayOfTasks.size()) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                System.out.println(\"You only have \" + arrayOfTasks.size() + \" task(s)!\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                arrayOfTasks.get(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                System.out.println(\"Nice! I have marked this task as done:\" + arrayOfTasks.get(taskNo - 1));"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Invalid Input! Input format should have an integer e.g. done 2\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Invalid Input! Integer cannot be 0!\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // prints items on current arrayOfTasks"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void viewTasks(ArrayList\u003cTask\u003e arrayOfTasks) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // handle error case where no tasks in array"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (arrayOfTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d arrayOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                System.out.println(i + \". \" + arrayOfTasks.get(i - 1));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // ends program when reader says \u0027bye\u0027"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static int sayBye(String byeInput) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (byeInput.toLowerCase().contains(KEYWORD_BYE)) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void handleErrorUserInputs(String userInput) throws TaskException, EventException, DeadlineException {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        userInput \u003d userInput.toLowerCase().trim();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        // check if todo description is empty"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.contains(KEYWORD_TODO) \u0026\u0026 !(userInput.contains(KEYWORD_EVENT)) \u0026\u0026 !(userInput.contains(KEYWORD_DEADLINE))) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            validateTodo(userInput);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // check if event description is empty"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_EVENT) \u0026\u0026 !(userInput.contains(KEYWORD_TODO)) \u0026\u0026 !(userInput.contains(KEYWORD_DEADLINE))) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            validateEvent(userInput);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // check if deadline description is empty"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_DEADLINE) \u0026\u0026 !(userInput.contains(KEYWORD_TODO)) \u0026\u0026 !(userInput.contains(KEYWORD_EVENT))) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            validateDeadline(userInput);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // check if keyword were used in userInput"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else if (userInput.contains(KEYWORD_LIST)"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.contains(KEYWORD_BYE)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.contains(KEYWORD_DONE)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.contains(KEYWORD_DELETE)) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d false;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            // incorrect input"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d true;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void validateDeadline(String userInput) throws DeadlineException {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.substring(ADD_INDEX_TO_DEADLINE - 1).trim().isEmpty()"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || !(userInput.contains(\"/by\"))"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.substring(userInput.indexOf(\"/by\") + 3).trim().isEmpty() ) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new DeadlineException();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d false;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void validateEvent(String userInput) throws EventException {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.substring(ADD_INDEX_TO_EVENT - 1).trim().isEmpty()"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || !(userInput.contains(\"/at\"))"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yokemin"
        },
        "content": "                || userInput.substring(userInput.indexOf(\"/at\") + 3).trim().isEmpty()) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new EventException();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d false;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public static void validateTodo(String userInput) throws TaskException {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        if (userInput.substring(ADD_INDEX_TO_TODO - 1).trim().isEmpty()) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            throw new TaskException();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yokemin"
        },
        "content": "            invalidInput \u003d false;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 328,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class EventException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 4
    }
  },
  {
    "path": "src/main/java/duke/command/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class TaskException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // Getters"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    // Setters"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yokemin"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yokemin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yokemin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yokemin": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yokemin"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yokemin"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yokemin"
        },
        "content": "deadline return book /by 25 Jan"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yokemin"
        },
        "content": "event project meeting /at 26 Jan"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yokemin"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yokemin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yokemin"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yokemin"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yokemin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yokemin": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yokemin"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yokemin"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "yokemin": 2
    }
  }
]
