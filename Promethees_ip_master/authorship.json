[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "T | 0 | hello"
      }
    ],
    "authorContributionMap": {
      "Promethees": 4
    }
  },
  {
    "path": "data/write.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "first line"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": "second line"
      }
    ],
    "authorContributionMap": {
      "Promethees": 2
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "E | 0 | jskajdf | 2020-09-12"
      }
    ],
    "authorContributionMap": {
      "Promethees": 1
    }
  },
  {
    "path": "src/main/java/Duke/Constants/constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public final class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     /*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Notes for the Exceptions:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        +Duke.Exceptions.ipException: Check if after \"todo, deadline, event\" command is an empty string or not. More specifically, check whether"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                                       \"/by\" or \"/at\" have been included in \"deadline\" or \"event\" yet"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        +Duke.Exceptions.ipException2: Check if available commands \"bye list todo deadline event done\" have been stated correctly or not."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Check if Duke.Task.Task and Time in \"deadline\" or \"event\" are empty strings or not"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        +Duke.Exceptions.ipException3: avoid increment of countTasks when invalid syntax is called"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "     public static final String DUKE \u003d  \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "             + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "             + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "             + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "             + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String PROMETHEES \u003d    \" ____  ____  ____  _      _____ _____  _     _____  _____  ____\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            +\"/  __\\\\/  __\\\\/  _ \\\\/ \\\\__/|/  __//__ __\\\\/ \\\\ /|/  __/ /  __/ / ___\\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            +\"|  \\\\/||  \\\\/|| / \\\\|| |\\\\/|||  \\\\    / \\\\  | |_|||  \\\\   |  \\\\   |    \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            +\"|  __/|    /| \\\\_/|| |  |||  /_   | |  | | |||  /_  |  /_  \\\\___ |\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            +\"\\\\_/   \\\\_/ \\\\_\\\\____/\\\\_/  \\\\|\\\\____\\\\  \\\\_/  \\\\_/ \\\\|\\\\____\\\\ \\\\____\\\\ \\\\____/\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String HORIZONTAL \u003d \"--------------------------------------\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String HELLO_GREET \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            \" My Child, I am Promethees, who had devoted his liver to liberate humanity from the Olympian\u0027s oppression\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    +\" Tell me, what can I do for you?\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String GOOD_BYE \u003d \" Mission accomplished!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String INSTRUCTION \u003d \"Invalid Command! Available Commands: bye, list, todo, deadline, event, done.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int TODO_INDEX \u003d 4;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int DEADLINE_INDEX \u003d 9;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int EVENT_INDEX \u003d 6;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int DONE_INDEX \u003d 5;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int REMOVE_INDEX \u003d 7;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final int FIND_INDEX \u003d 5;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String REJECT_TODO \u003d \"Invalid command for todo. Must be \\ntodo \u003cnameOfTodo\u003e; name\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String REJECT_DL \u003d \"Invalid command for deadline. Must be \\ndeadline \u003cnameOfEvent\u003e /by \u003ctime\u003e\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String REJECT_EV \u003d \"Invalid command for event. Must be \\nevent \u003cnameOfEvent\u003e /at \u003ctime\u003e\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String REJECT_DONE \u003d \"Invalid operation with done. Must be \\ndone \u003c(int)taskToBeDone\u003e, taskToBeDone must be greater than 0 and  equal or lesser than \";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String REJECT_REMOVE \u003d \"Invalid operation with remove. Must be \\nremove \u003c(int)taskToBeRemoved\u003e, taskToBeRemoved must be greater than 0 and equal or lesser than \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String REJECT_FIND \u003d \"There is something wrong with your find method, please check again. The syntax is \\nfind \u003cname of item\u003e\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String EMPTY_LIST \u003d \"This list is currently empty. You can use \\\"todo\\\", \\\"deadline\\\", \\\"event\\\" to add tasks\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String ADD_TASK \u003d \"\\tGot it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String DONE_TASK \u003d \"\\t Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String REMOVE_TASK \u003d \"\\tNoted! I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String NOTFOUND_ITEM \u003d \"\\tSorry, but we can\u0027t find this in our list\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String DIR \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final String REJECT_DATE \u003d \"\\tInvalid type for date, please follow the format YYYY-MM-DD\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 47
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static duke.constants.Constants.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static final Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static File previousList \u003d new File(DIR);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        ui.printWelcomeGreet();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int countTasks \u003d storage.convertFromFile(previousList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        while(countTasks !\u003d -1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int preCountTasks \u003d countTasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            countTasks \u003d parser.resolveCommand(line, countTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (countTasks \u003d\u003d -1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                storage.recordListToFile(previousList, preCountTasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else storage.recordListToFile(previousList, countTasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 31,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/ipException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class IpException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 7
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/ipException2.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class IpException2 extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 7
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/ipException3.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class IpException3 extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 7
    }
  },
  {
    "path": "src/main/java/Duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public Deadline (String deadline, String timeDL) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        description \u003d deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        time \u003d timeDL;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        type \u003d \"[D]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public Deadline() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        description \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        time \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        type \u003d \"[D]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTypeWOBrackets() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String type \u003d this.type.substring(1,2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int isDoneOneZero() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else return 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTimeWithSlash() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return \" | \" + this.time;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 57
    }
  },
  {
    "path": "src/main/java/Duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public Event (String event, String timeEV) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        description \u003d event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        time \u003d timeEV;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        type \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public Event() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        description \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        time \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTypeWOBrackets() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String type \u003d this.type.substring(1,2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int isDoneOneZero() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else return 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTimeWithSlash() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return \" | \" + this.time;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 55
    }
  },
  {
    "path": "src/main/java/Duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    //Generator, in the main file must you \"new\" modifier to create the objects"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract String getStatusIcon();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract String getDescription();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract void markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract String getTime();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract boolean isDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract String getTypeWOBrackets();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract int isDoneOneZero();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public abstract String getTimeWithSlash();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 27
    }
  },
  {
    "path": "src/main/java/Duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private int countTasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countTasks \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countTasks ++;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.tasks.get(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void remove(Task t) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        tasks.remove(t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int getCountTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.countTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public TaskList getAll() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 32
    }
  },
  {
    "path": "src/main/java/Duke/Task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public ToDo(String taskTodo) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        description \u003d taskTodo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        type \u003d \"[T]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        time \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public ToDo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        description \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        type \u003d \"[T]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        time \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTypeWOBrackets() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String type \u003d this.type.substring(1,2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public int isDoneOneZero() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else return 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public String getTimeWithSlash() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 56
    }
  },
  {
    "path": "src/main/java/Duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static duke.Duke.ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static duke.constants.Constants.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.exceptions.IpException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.exceptions.IpException2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.exceptions.IpException3;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static String parseCommand(String line, int countTasks) throws IpException3, IpException2 {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String command \u003d words[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                String newTodo \u003d analyseTodo(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                newTodo \u003d newTodo.trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                addTodos(countTasks, newTodo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (IpException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printRejectTodo();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new IpException3(); //Throw to this exception to avoid increment in countTasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                String DL \u003d analyseDL(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                String newDL \u003d extractFrom(DL,\"/by\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                String time \u003d extractTimeFrom(DL,\"/by\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    LocalDate dateCoverted \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    addDeadlines(countTasks, newDL, time);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    //System.out.println(dateCoverted);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    ui.printRejectDate();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    throw new IpException3();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (IpException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printRejectDeadline();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new IpException3(); //Throw to this exception to avoid increment in countTasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (IpException2 e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printRejectDeadline();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new IpException3();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                String EV \u003d analyseEV(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                String newEV \u003d extractFrom(EV,\"/at\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                String time \u003d extractTimeFrom(EV,\"/at\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    LocalDate dateCoverted \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    addEvents(countTasks, newEV, time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    ui.printRejectDate();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    throw new IpException3();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (IpException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printRejectEvent();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new IpException3(); //Throw to this exception to avoid increment in countTasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (IpException2 e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printRejectEvent();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new IpException3();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String taskToBeDone \u003d line.substring(line.indexOf(\"done \") + DONE_INDEX);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            boolean isInt \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int num \u003d countTasks + 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                num \u003d Integer.parseInt(taskToBeDone);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                isInt \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printRejectDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (isInt) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                if (num \u003c\u003d countTasks \u0026\u0026 num \u003e 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    markTaskDone(num - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    ui.printRejectDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"remove\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String taskToBeDone \u003d line.substring(line.indexOf(\"remove \") + REMOVE_INDEX);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int num;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                num \u003d Integer.parseInt(taskToBeDone);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printRejectRemove();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new IpException3();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (num \u003c\u003d countTasks \u0026\u0026 num \u003e 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                removeTask(num - 1, countTasks);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printRejectDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                throw new IpException3();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String taskToBeFound \u003d line.substring(line.indexOf(\"find \") + FIND_INDEX);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                find(taskToBeFound, countTasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (IpException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printRejectFind();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new IpException2();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static int resolveCommand(String line, int countTasks) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String command \u003d parseCommand(line, countTasks);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            else if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                printTasks(countTasks);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            else if (command.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                countTasks ++;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            else if (command.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                countTasks ++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            else if (command.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                countTasks ++;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            else if (command.equalsIgnoreCase(\"remove\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                countTasks --;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            else if (command.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return countTasks;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (IpException2 e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(INSTRUCTION);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return countTasks;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (IpException3 e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return countTasks;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return countTasks;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String analyseTodo(String line) throws IpException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (line.substring(TODO_INDEX).trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new IpException();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        else return line.substring(TODO_INDEX);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String analyseDL(String line) throws IpException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (line.indexOf(\"/by\") \u003d\u003d -1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new IpException();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        else return line.substring(DEADLINE_INDEX);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String analyseEV(String line) throws IpException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (line.indexOf(\"/at\") \u003d\u003d -1) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new IpException();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        else return line.substring(EVENT_INDEX);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String extractFrom(String line, String extractor) throws IpException2 {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String newTask \u003d line.substring(0, line.indexOf(extractor));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (newTask.trim().length() !\u003d 0) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return newTask.trim();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new IpException2();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static String extractTimeFrom(String line, String extractor) throws IpException2 {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        String newTime \u003d line.substring(line.indexOf(extractor) + extractor.length() + 1 );"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (newTime.trim().length() !\u003d 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return newTime.trim();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new IpException2();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void markTaskDone(int index) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\" + HORIZONTAL);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(DONE_TASK);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\\t\" + tasks.get(index).getStatusIcon() + \" \" + tasks.get(index).getDescription());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\" + HORIZONTAL);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void removeTask(int index, int countTasks) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\" + HORIZONTAL);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(REMOVE_TASK);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        printTaskInfo(index);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        tasks.remove(tasks.get(index));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.print(\"\\tNow you have \" + (countTasks - 1) + \" task\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (countTasks \u003e 1) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"s in the list.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\" in the list.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\" + HORIZONTAL);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void printTaskInfo(int index) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (tasks.get(index).getType() \u003d\u003d \"[D]\") {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            LocalDate dateCoverted \u003d LocalDate.parse(tasks.get(index).getTime());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"\\t\" + tasks.get(index).getType() + tasks.get(index).getStatusIcon() + \" \" + tasks.get(index).getDescription() + \" (by:\" + dateCoverted.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            //System.out.println(\"\\t\" + tasks.get(index).getType() + tasks.get(index).getStatusIcon() + \" \" + tasks.get(index).getDescription() + \" (by:\" + tasks.get(index).getTime() + \")\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (tasks.get(index).getType() \u003d\u003d \"[E]\") {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            LocalDate dateCoverted \u003d LocalDate.parse(tasks.get(index).getTime());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"\\t\" + tasks.get(index).getType() + tasks.get(index).getStatusIcon() + \" \" + tasks.get(index).getDescription() + \" (at:\" + dateCoverted.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            //System.out.println(\"\\t\" + tasks.get(index).getType() + tasks.get(index).getStatusIcon() + \" \" + tasks.get(index).getDescription() + \" (at:\" + tasks.get(index).getTime() + \")\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else if (tasks.get(index).getType() \u003d\u003d \"[T]\") {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"\\t\" + tasks.get(index).getType() + tasks.get(index).getStatusIcon() + \" \" + tasks.get(index).getDescription() + tasks.get(index).getTime());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void printTasks(int countTasks) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (countTasks \u003e 0) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"\\t\" + HORIZONTAL);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d countTasks; i++) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.print(\"\\t\" + i + \".\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                printTaskInfo(i-1);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"\\t\" + HORIZONTAL);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(EMPTY_LIST);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void addTodos(int countTasks, String line) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        tasks.add(new ToDo(line));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countTasks++;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(ADD_TASK);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(countTasks - 1).getType() + tasks.get(countTasks - 1).getStatusIcon() + \" \" + tasks.get(countTasks - 1).getDescription());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.print(\"\\tNow you have \" + countTasks + \" task\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (countTasks \u003e 1)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.print(\"s\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        else System.out.print(\"\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\" in the list.\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void addEvents(int countTasks, String line, String time) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        tasks.add(new Event(line,time));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countTasks++;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(ADD_TASK);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(countTasks - 1).getType() + tasks.get(countTasks - 1).getStatusIcon() + \" \" + tasks.get(countTasks - 1).getDescription() + \" at:\" + tasks.get(countTasks - 1).getTime());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.print(\"\\tNow you have \" + countTasks + \" task\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (countTasks \u003e 1)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.print(\"s\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        else System.out.print(\"\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\" in the list.\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void addDeadlines(int countTasks, String line, String time) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        tasks.add(new Deadline(line,time));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        countTasks++;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(ADD_TASK);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(countTasks - 1).getType() + tasks.get(countTasks - 1).getStatusIcon() + \" \" + tasks.get(countTasks - 1).getDescription() + \" by:\" + tasks.get(countTasks - 1).getTime());"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.print(\"\\tNow you have \" + countTasks + \" task\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (countTasks \u003e 1)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.print(\"s\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        else System.out.print(\"\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\" in the list.\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void find(String keyword, int countTasks) throws IpException {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        if (countTasks \u003e 0) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            for (int i \u003d 0; i \u003c countTasks; i++) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                if (tasks.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    System.out.print(\"\\t\" + (i + 1) + \".\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    printTaskInfo(i);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    count ++;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                ui.printNotFound();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else return;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            //System.out.println(EMPTY_LIST);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            throw new IpException();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 295
    }
  },
  {
    "path": "src/main/java/Duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static int convertFile(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        int numLine \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            String[] data \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            //System.out.println(data.length);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            for (int i \u003d 0; i \u003c data.length; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                data[i] \u003d data[i].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            if (data[0].equalsIgnoreCase(\"T\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                tasks.add(new ToDo(data[2]));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                if (data[1].equalsIgnoreCase(\"1\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    tasks.get(numLine).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else if (data[0].equalsIgnoreCase(\"E\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                tasks.add(new Event(data[2],data[3]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                if (data[1].equalsIgnoreCase(\"1\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    tasks.get(numLine).markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } else if (data[0].equalsIgnoreCase(\"D\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                tasks.add(new Deadline(data[2],data[3]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                if (data[1].equalsIgnoreCase(\"1\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                    tasks.get(numLine).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            numLine++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        return numLine;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static int convertFromFile(File f) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            return convertFile(f);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            //System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                System.out.println(\"duke.txt aka the data file created!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            } catch (IOException err) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                err.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Promethees"
        },
        "content": "                return 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    private static void recordFile(File f, int countTasks) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        for (int i \u003d 0; i \u003c countTasks; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            fw.write(tasks.get(i).getTypeWOBrackets() + \" | \" + tasks.get(i).isDoneOneZero() + \" | \" + tasks.get(i).getDescription() + tasks.get(i).getTimeWithSlash() + \"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public static void recordListToFile(File f, int countTasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            recordFile(f, countTasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Promethees"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 77
    }
  },
  {
    "path": "src/main/java/Duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static duke.constants.Constants.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    //public Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printWelcomeGreet() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(PROMETHEES);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(HORIZONTAL);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(HELLO_GREET);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(HORIZONTAL);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\" +HORIZONTAL);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\"+GOOD_BYE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(\"\\t\" +HORIZONTAL);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printNotFound() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(NOTFOUND_ITEM);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printRejectTodo() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(REJECT_TODO);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printRejectEvent() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(REJECT_EV);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printRejectDeadline() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(REJECT_DL);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printRejectDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(REJECT_DONE + tasks.getCountTasks());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printRejectRemove() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(REJECT_REMOVE + tasks.getCountTasks());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printRejectFind() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(REJECT_FIND);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    public void printRejectDate() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Promethees"
        },
        "content": "        System.out.println(REJECT_DATE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Promethees"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Promethees"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Promethees": 43
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Promethees"
        },
        "content": "todo Do this"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Promethees"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Promethees"
        },
        "content": "event Do that /at Wed 12:40am"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Promethees"
        },
        "content": "event Go to the main event /at Sat 15:10pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Promethees"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Promethees"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Promethees"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Promethees"
        },
        "content": "deadline We must study Chinese ! /by 2030"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Promethees"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Promethees"
        },
        "content": "deadline We will go to there / by 2040"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Promethees"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Promethees"
        },
        "content": "destroy all!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Promethees"
        },
        "content": "bye"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Promethees"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Promethees": 14
    }
  }
]
