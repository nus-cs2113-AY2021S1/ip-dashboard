[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 1,
      "-": 25
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Duke is a working todo-list for managing your tasks, using the Command Line Interface (CLI). "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [1. help](#1-help)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [2. todo](#2-todo)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [3. deadline](#3-deadline)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [4. event](#4-event)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [5. list](#5-list)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [6. done](#6-done)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [7. delete](#7-delete)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [8. due](#8-due)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [9. find](#9-find)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    + [10. bye](#10-bye)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "1. Ensure that you have java *11* installed in your computer"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "2. Download duke.jar to a folder"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "3. Navigate to the folder in command prompt and run it with `java -jar duke.jar`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "4. Type `help` to see a list of commands for Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Duke can do the following:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `help`: Provides a list of commands and their syntax"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `list`: List all tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `todo`: Add a todo to your task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `deadline`: Add a deadline to your task list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `event`: Add an event to your task list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `done`: Mark an existing task as done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `delete`: Deletes an existing task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `find`: Find tasks that contain the keyword"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `due`: Find tasks that are due on that date"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "* `bye`: Ends the program"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 1. help"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Prints all available commands and their syntax"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 2. todo"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Adds a task to the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`todo Study for test`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 3. deadline "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Adds a task with deadline to the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Deadline entered can be either as plain text or as a date in YYYY-MM-DD format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`deadline wash clothes /by today`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`deadline learn chicken recipe /by 2020-09-30`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 4. event"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Adds an event with time it occurs to the task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Time for the event entered can be either as plain text or as a date in YYYY-MM-DD format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`event watch movie with friends /at 2020-10-01`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`event meeting /at tommorow`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 5. list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "List out all tasks in the task list with their completion status and index."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 6. done"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Marks task on the list at the index entered as completed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`done 3`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 7. delete"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Deletes the task on the list at the index entered."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 8. due"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Returns all tasks that are due on date entered."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Date entered can be in plain text or YYYY-MM-DD format."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`due 2019-09-10`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`due today`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 9. find"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Find tasks that contains the keyword entered by user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`find books`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "### 10. bye"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Ends the program."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "Command | Format | Example"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "------- | ---------- | ------------"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "help | `help` | -"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "todo | `todo [task description]` | `todo cook`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "deadline | `deadline [task description] /by [date in string or YYYY-MM-DD]`| `deadline do homework /before tomorrow`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "event | `event [task description] /at [date in string or YYYY-MM-DD]` | `event Movie with friends /at 2020-01-10`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "list | `list` | -"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "done | `done [index of task in list]`  | `done 3`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "delete | `delete [index of task in list]` | `delete 3`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "due | `due [date in string or YYYY-MM-DD]` | `due today`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "find | `find [keyword]` | `find books`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "bye | `bye` | -"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 128,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            Ui.greet();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            list \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        String inputCommand\u003d\"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                inputCommand \u003d Parser.readCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                Command c \u003d Parser.runCommand(inputCommand,list);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                Ui.getError(inputCommand, e.error);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            } catch (Exception e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 33,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public DukeException(String error){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        this.error\u003derror;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 10
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static final Scanner IN \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static String input\u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Reads the next line that user inputs and returns it as a String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @return User input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static String readCommand(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        input \u003d IN.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Reads user commands and calls corresponding command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param list  ArrayList of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @return Command commands called by user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws DukeException if command is invalid"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws IOException if error occurs modifying the file to store data"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static Command runCommand(String input, TaskList list) throws DukeException, IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        String[] splitInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(splitInput.length\u003d\u003d1 \u0026\u0026 !input.equals(\"bye\") \u0026\u0026 !input.equals(\"list\") \u0026\u0026 !input.equals(\"help\")){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"format\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        switch(splitInput[0]) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return new ListCommand(list);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return new CompleteCommand(splitInput[1],list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return new AddTaskCommand(splitInput[0], splitInput[1],list);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return new DeleteCommand(splitInput[1], list);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"due\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return new DueDateCommand(splitInput[1],list);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return new FindCommand(splitInput[1], list);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return new NullCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 59
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public Storage(String input){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        filePath \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Adds task recorded in file to the task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws FileNotFoundException if no file is found at directory"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws DukeException if error occurs while creating Task classes"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void readFileContents () throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            String[] splitFileInput \u003d s.nextLine().split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            switch (splitFileInput[0]) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                Task newTask \u003d new Task(splitFileInput[2].trim());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                newTask.setDone(Boolean.parseBoolean(splitFileInput[1]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                TaskList.addFileContents(newTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                Task newDeadline \u003d new Deadline(splitFileInput[2].trim(), splitFileInput[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                newDeadline.setDone(Boolean.parseBoolean(splitFileInput[1]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                TaskList.addFileContents(newDeadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                Task newEvent \u003d new Event(splitFileInput[2].trim(), splitFileInput[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                newEvent.setDone(Boolean.parseBoolean(splitFileInput[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                TaskList.addFileContents(newEvent);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Appends task information to the file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param input Task to be recorded"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws IOException if appending to file failed"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void appendToFile (Task input) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        String fileInput \u003d input.toFileInput();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        fw.write(fileInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Overwrites the content of the file with the items in the list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param items list of all task stored"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param size number of items in the list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws IOException if writing to file failed"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void writeToFile (ArrayList \u003cTask\u003e items,int size) throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            String fileInput \u003d items.get(i).toFileInput();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            fw.write(fileInput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 79
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void greet(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        addLines(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void addLines(String input){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                input+"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void printLine(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void inValidCommad(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void leaveMsg(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        addLines(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Prints to the user what went wrong with the command they entered"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param error error occurred"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void getError(String input, String error){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        switch (error) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"format\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please enter a valid action after the command, eg: \" + input + \" {action}\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"invalid\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please enter a valid command, try using \\\"help\\\"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please input a valid deadline using the \\\"deadline {task} /by {time} \\\" format\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please input a valid event using the \\\"event {task} /at {time} \\\" format\\\");\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please input a valid todo using the \\\"todo {task}\\\" format\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Prints out all commands available to the program and their syntax"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void listAllCommands(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"Here are all the current available commands:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"    1. Add a new deadline: \\\"deadline [task description] /by [date in string or YYYY-MM-DD]\\\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"    2. Add a new event: \\\"event [task description] /at [date in string or YYYY-MM-DD]\\\"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"    3. Add a new todo: \\\"todo [task description]\\\" format\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"    4. List out all tasks: \\\"list\\\"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"    5. Mark out task as completed: \\\"done [index of task in list]\\\"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"    6. Delete task: \\\"delete [index of task in list]\\\"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"    7. List all task due on date: \\\"due [date in YYYY-MM-DD format]\\\"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"    8. Find item with key: \\\"find [key]\\\"\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"    9. End program: \\\"bye\\\"\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 71
    }
  },
  {
    "path": "src/main/java/duke/commands/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class AddTaskCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public AddTaskCommand(String type, String input, TaskList list) throws IOException, DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        switch(type){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            list.addTask(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            list.addDeadline(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            list.addEvent(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 7
    }
  },
  {
    "path": "src/main/java/duke/commands/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class CompleteCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public CompleteCommand(String s, TaskList list) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        list.completeTask(s);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 9
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public DeleteCommand(String s, TaskList list) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        list.deleteItem(s);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 11
    }
  },
  {
    "path": "src/main/java/duke/commands/DueDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class DueDateCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public DueDateCommand(String s, TaskList list) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            LocalDate due \u003d LocalDate.parse(s);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            list.printTasksDueByDate(due);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"Invalid date, please use YYYY-MM-DD format\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public ExitCommand(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        Ui.leaveMsg();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 15
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public FindCommand(String key, TaskList list) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        list.findTask(key);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 10
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public HelpCommand(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        Ui.listAllCommands();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 9
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public ListCommand(TaskList list){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        list.queryItems();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 9
    }
  },
  {
    "path": "src/main/java/duke/commands/NullCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class NullCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public NullCommand() throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        throw new DukeException(\"invalid\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 9
    }
  },
  {
    "path": "src/main/java/duke/list/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!by.equals(\"\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                Date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                isDate \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(isDate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return \"[D]\" + super.getDescription() + \" (by: \" + Date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return \"[D]\" + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toFileInput(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(isDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return \"D|\" + super.getInfo() + \"|\" + Date + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return \"D|\" + super.getInfo() + \"|\" + by + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 43
    }
  },
  {
    "path": "src/main/java/duke/list/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!at.equals(\"\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                Date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                isDate \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(isDate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return \"[E]\" + super.getDescription() + \" (at: \" + Date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return \"[E]\" + super.getDescription() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toFileInput(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(isDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return \"E|\" + super.getInfo() + \"|\" + Date + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            return \"E|\" + super.getInfo() + \"|\" + at + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 43
    }
  },
  {
    "path": "src/main/java/duke/list/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public boolean isDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected LocalDate Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public Task(String description) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!description.equals(\"\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void setDone(boolean done){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        this.isDone\u003ddone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toFileInput(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"T|\" + isDone + \"|\" + description + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String getInfo(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return isDone + \"|\" + description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 51
    }
  },
  {
    "path": "src/main/java/duke/list/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import static duke.Ui.printLine;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static ArrayList\u003cTask\u003e items;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static int size;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Constructor for TaskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Read in stored data in duke.txt and makes a new directory for duke.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * if it does not exist"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param inStorage Storage class that is linked to the file path of data"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public TaskList(Storage inStorage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        size \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        storage \u003d inStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            storage.readFileContents();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            Ui.addLines(\"no file found\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            if (dir.mkdirs()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                Ui.addLines(\"Successfully made directory to store data!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     *  Prints out all items inside the Task List"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void queryItems(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        for(int i\u003d0; i\u003csize; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(i+1 + \". \" + items.get(i));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Marks the isDone of item with corresponding index to be true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Warns user to retry if invalid index is provided"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param input String input of index"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void completeTask(String input){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            index\u003dInteger.parseInt(input)-1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            items.get(index).markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + items.get(index));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            storage.writeToFile(items,size);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"invalid index for item to complete, try again\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Adds a new Task to the Task List"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param item description of Task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws DukeException thrown in Task class"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws IOException If task appending to file fails"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void addTask(String item) throws DukeException, IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        Task newTask \u003d new Task(item.trim());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        items.add(newTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        storage.appendToFile(newTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        itemAddedMessage(newTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Adds a new deadline to the Task List"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param input description with deadline"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws DukeException If /by does not exist in input"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws IOException If deadline appending to file fails"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void addDeadline(String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!input.contains(\"/by\")){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        String[] deadlineInputs \u003d input.split(\"/by\",2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        Deadline newDeadline\u003d new Deadline(deadlineInputs[0].trim(),deadlineInputs[1].trim());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        items.add(newDeadline);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        storage.appendToFile(newDeadline);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        itemAddedMessage(newDeadline);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Adds a new event to the Task List"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param input description with time for event"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws DukeException If /at does not exist in input"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @throws IOException If event appending to file fails"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void addEvent(String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!input.contains(\"/at\")){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        String[] eventInputs \u003d input.split(\"/at\",2);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        Event newEvent\u003d new Event(eventInputs[0].trim(),eventInputs[1].trim());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        items.add(newEvent);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        storage.appendToFile(newEvent);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        itemAddedMessage(newEvent);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Adds item read from stored file duke.txt"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param item Task read from file"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void addFileContents(Task item){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        items.add(item);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Deletes the item with corresponding index from the Task List"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Warns user to retry if invalid index is provided"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param input String input of index"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void deleteItem(String input){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            index\u003dInteger.parseInt(input)-1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                            items.get(index) +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                            \"\\nNow you have \"+ --size + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            items.remove(index);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            storage.writeToFile(items,size);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"invalid index for item to delete, try again\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Prints message to inform user that task has been added"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * and how many items the list currently have"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param item Task added"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private void itemAddedMessage(Task item){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + item);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(size\u003e1) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"Now you have \" + size + \" task in the list.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Prints tasks with description that contains key"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param key Keyword user is looking for"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void findTask(String key) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            Task temp \u003d items.get(i);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            if (temp.description.contains(key)) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                System.out.println(count++ + \". \" + items.get(i));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Prints out tasks with due date corresponding to the user input due date"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * Only accepts YYYY-MM-DD format"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     * @param due User input due date"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void printTasksDueByDate(LocalDate due) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"Here are the tasks that are due on \"+ due +\" in your list:\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        for(int i\u003d0; i\u003csize; i++) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            Task item \u003d items.get(i);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            if(item.isDate \u0026\u0026 item.Date.equals(due)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                System.out.println(i + 1 + \". \" + items.get(i));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 203
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "T|false|borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "D|true|return book|Sunday"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "deadline return book /at Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "del data\\duke.txt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\list\\*.java ..\\src\\main\\java\\duke\\commands\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 3,
      "-": 18
    }
  }
]
