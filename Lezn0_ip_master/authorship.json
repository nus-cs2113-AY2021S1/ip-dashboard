[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 1,
      "-": 25
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.list.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static final List LIST \u003d new List();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static final Scanner IN \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void main(String[] args) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        String input\u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        addLines(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        runCommand(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static void runCommand(String input) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            List.readFileContents();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            input \u003d IN.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                String[] splitInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                if(splitInput.length\u003d\u003d1 \u0026\u0026 !input.equals(\"bye\") \u0026\u0026 !input.equals(\"list\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    throw new DukeException(\"format\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                switch(splitInput[0]) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    List.writeToFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    addLines(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    LIST.queryItems();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    LIST.completeTask(splitInput[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    LIST.addItem(splitInput[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    LIST.addDeadline(splitInput[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    LIST.addEvent(splitInput[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    LIST.deleteItem(splitInput[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    if (splitInput.length \u003d\u003d 2){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                        throw new DukeException(\"invalid\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                e.getError(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void addLines(String input){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                input+"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                \"\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 71,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    //format - wrong command format"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public DukeException(String error){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        this.error\u003derror;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void getError(String input){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        switch (error) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"format\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please enter a valid action after the command, eg: \" + input + \" {action}\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"invalid\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please enter a valid command\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please input a valid deadline using the \\\"deadline {task} /by {time} \\\" format\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please input a valid event using the \\\"event {task} /at {time} \\\" format\\\");\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            addLines(\"Please input a valid todo using the \\\"todo {task}\\\" format\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void addLines(String input){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                input+"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                \"\\n____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 36
    }
  },
  {
    "path": "src/main/java/duke/list/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!by.equals(\"\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"[D]\" + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toFileInput(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"D \" + super.getInfo() + \" \" + by + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 27
    }
  },
  {
    "path": "src/main/java/duke/list/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!at.equals(\"\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"[E]\" + super.getDescription() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toFileInput(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"E \" + super.getInfo() + \" \" + at + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 27
    }
  },
  {
    "path": "src/main/java/duke/list/List.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class List {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static ArrayList\u003cTask\u003e items;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static int size;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public List(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        size \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void queryItems(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        for(int i\u003d0; i\u003csize; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(i+1 + \". \" + items.get(i));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void completeTask(String input){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            index\u003dInteger.parseInt(input)-1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            items.get(index).markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + items.get(index));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"invalid index for item to complete, try again\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void addItem(String item) throws DukeException, IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        Task newTask \u003d new Task(item.trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        items.add(newTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        appendToFile(newTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        itemAddedMessage(newTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void addDeadline(String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!input.contains(\"/by\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        String[] deadlineInputs \u003d input.split(\"/by\",2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        Deadline newDeadline\u003d new Deadline(deadlineInputs[0].trim(),deadlineInputs[1].trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        items.add(newDeadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        appendToFile(newDeadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        itemAddedMessage(newDeadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void addEvent(String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!input.contains(\"/at\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        String[] eventInputs \u003d input.split(\"/at\",2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        Event newEvent\u003d new Event(eventInputs[0].trim(),eventInputs[1].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        items.add(newEvent);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        appendToFile(newEvent);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        itemAddedMessage(newEvent);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static void printLine(){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void readFileContents() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            File f \u003d new File(\"data/duke.txt\"); // create a File for the given file path"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                String[] splitFileInput \u003d s.nextLine().split(\" \", 4);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                switch (splitFileInput[0]) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    Task newTask \u003d new Task(splitFileInput[2].trim());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    newTask.isDone \u003d Boolean.parseBoolean(splitFileInput[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    items.add(newTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    Task newDeadline \u003d new Deadline(splitFileInput[2].trim(), splitFileInput[3]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    newDeadline.isDone \u003d Boolean.parseBoolean(splitFileInput[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    items.add(newDeadline);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    Task newEvent \u003d new Event(splitFileInput[2].trim(), splitFileInput[3]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    newEvent.isDone \u003d Boolean.parseBoolean(splitFileInput[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    items.add(newEvent);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                size++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            dir.mkdirs();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"no file found\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void deleteItem(String input){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            index\u003dInteger.parseInt(input)-1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                    \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                            items.get(index) +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "                            \"\\nNow you have \"+ --size + \" tasks in the list.\" );"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            items.remove(index);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"invalid index for item to delete, try again\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private static void appendToFile(Task input) throws IOException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/duke.txt\",true);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        String fileInput \u003d input.toFileInput();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        fw.write(fileInput);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public static void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        for(int i\u003d0; i\u003csize ;i++){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            String fileInput \u003d items.get(i).toFileInput();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            fw.write(fileInput);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    private void itemAddedMessage(Task item){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + item);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(size\u003e1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            System.out.println(\"Now you have \" + size + \" task in the list.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 159
    }
  },
  {
    "path": "src/main/java/duke/list/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "package duke.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public Task(String description) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        if(!description.equals(\"\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "            throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    public String toFileInput(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return \"T \" + isDone + \" \" + description + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lezn0"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    protected String getInfo(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "        return isDone + \" \" + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 43
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "deadline return book /at Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\list\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Lezn0": 2,
      "-": 19
    }
  }
]
