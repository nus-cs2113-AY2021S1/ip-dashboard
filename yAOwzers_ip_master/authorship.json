[
  {
    "path": "data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "T | 1 | event"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import response.ResponseResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Over seeing class of the Duke App."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs a model of Duke with a specified file path."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param filePath file path."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.parser \u003d new Parser(this.taskList, this.storage, this.ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public ResponseResult getResponse(String userInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            Command userCommand \u003d this.parser.parseCommand(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return new ResponseResult(false, userCommand.execute());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return new ResponseResult(true, this.ui.showDukeError(e));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Initialises Duke."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return welcome message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String initDuke() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            this.storage.loadTaskList(this.taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (DukeInvalidUserInputException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return this.ui.showDukeError(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return Ui.greet();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        System.out.println(initDuke());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            System.out.println(getResponse(userInput).getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        public static void main (String[]args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            new Duke(\"data.txt\").run();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 68,
      "-": 3
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Exits from Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public ByeCommand(Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return this.ui.showExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"ByeCommand\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 23
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Base class of a command in Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Command (Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Executes the given command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @throws DukeException when a certain constraint has not been met"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public abstract String execute() throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 22
    }
  },
  {
    "path": "src/main/java/command/CreateTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Abstract extension of the Command class for commands that"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * deal with creating tasks. Contains several methods that such"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * commands have in common."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public abstract class CreateTaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    CreateTaskCommand(TaskList taskList, Storage storage, Ui ui, String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Checks whether description is empty."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param description to check."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @throws DukeInvalidUserInputException when there description is empty."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected static void checkDescription(String description, String command) throws DukeInvalidUserInputException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"The description of \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    + command + \" must not be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Checks whether there is a follow up command in the String array."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param withoutCommandArray to check."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @throws DukeInvalidUserInputException when String array does not contain a follow up command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected static void checkFollowUpCommand(String[] withoutCommandArray, String followUpCommand)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throws DukeInvalidUserInputException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if (withoutCommandArray.length \u003c 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"It appears you are missing a \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    + \"follow up \u0027\" + followUpCommand + \"\u0027 command.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected String addTask(Task newTask) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.storage.saveTask(newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return this.ui.printAddMessage(newTask) + Ui.lineSeparator()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + this.ui.getNumberOfTaskMessage(this.taskList.getTotalTask());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 59
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeIllegalFollowUpCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Adds a Deadline task into the current task list of Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class DeadlineCommand extends CreateTaskCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs a deadline command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList of Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param storage of Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param ui of Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param userInput details of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public DeadlineCommand(TaskList taskList, Storage storage, Ui ui, String userInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(taskList, storage, ui, userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String execute() throws DukeInvalidUserInputException, DukeIllegalFollowUpCommandException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String userInputWithoutCommand \u003d this.userInput.substring(this.userInput.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String[] userInputWithoutCommandArr \u003d userInputWithoutCommand.split(\"/\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String description \u003d userInputWithoutCommandArr[0].trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            checkDescription(description, \"deadline\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            checkFollowUpCommand(userInputWithoutCommandArr, \"/by\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String followUpCommand \u003d Parser.parseFollowUpCommand(userInputWithoutCommandArr[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            if (followUpCommand.equals(\"by\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                String dateTime \u003d userInputWithoutCommand.substring(3);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//                checkDateTime(userInputWithoutCommandArr[1], \"deadline\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//                String dateTime \u003d userInputWithoutCommandArr[1]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//                        .substring(userInputWithoutCommandArr[1].indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                Deadline newTask \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return addTask(newTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                throw new DukeIllegalFollowUpCommandException(\"deadline\", followUpCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"Invalid date and time. \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    + \"The format should be.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"DeadlineCommand\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 56
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Deletes a specific task in the current task list of Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs a delete command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList of Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param storage of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param ui of Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param userInput details of command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public DeleteCommand(TaskList taskList, Storage storage, Ui ui, String userInput) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public DeleteCommand(Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        //Get number after done keyword"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String intSubstring \u003d userInput.substring(7);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            int indexNumber \u003d Integer.parseInt(intSubstring);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            Task deletedTask \u003d this.taskList.delete(indexNumber);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            this.storage.saveTaskList(this.taskList); //Overwrites current data.txt file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return this.ui.showDelete(deletedTask)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    + this.ui.getNumberOfTaskMessage(this.taskList.getTotalTask());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"Please enter a valid number!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"Sorry this does not exist!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"DeleteCommand\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 60
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Marks a specific task in the current task list of model.Duke as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs a done command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList of Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param storage of Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param ui of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param userInput details of command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public DoneCommand(TaskList taskList, Storage storage, String userInput, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String execute() throws DukeInvalidUserInputException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        //Get number after done keyword"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if (this.userInput.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"Description must not be empty!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String intSubstring \u003d this.userInput.substring(5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            int indexNumber \u003d Integer.parseInt(intSubstring);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            Task taskDone \u003d this.taskList.markDone(indexNumber);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            this.storage.saveTaskList(this.taskList); //Overwrites current data.txt file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return this.ui.showMarkDone(taskDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"Please enter a valid number.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"Sorry this does not exist!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"DoneCommand\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 55
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeIllegalFollowUpCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Adds an Event task into the current task list of Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class EventCommand extends CreateTaskCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs a event command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param storage of Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param ui of Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param userInput details of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public EventCommand(TaskList taskList, Storage storage, Ui ui, String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(taskList, storage, ui, userInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String execute() throws DukeInvalidUserInputException, DukeIllegalFollowUpCommandException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String userInputWithoutCommand \u003d this.userInput.substring(this.userInput.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String[] userInputWithoutCommandArr \u003d userInputWithoutCommand.split(\"/\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String description \u003d userInputWithoutCommandArr[0].trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            checkDescription(description, \"event\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            checkFollowUpCommand(userInputWithoutCommandArr, \"/at\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String followUpCommand \u003d Parser.parseFollowUpCommand(userInputWithoutCommandArr[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            if (followUpCommand.equals(\"at\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                String dateTime \u003d userInputWithoutCommand.substring(3);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//                checkDateTime(userInputWithoutCommandArr[1], \"event\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//                String dateTime \u003d userInputWithoutCommandArr[1]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//                        .substring(userInputWithoutCommandArr[1].indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                Event newTask \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return addTask(newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                throw new DukeIllegalFollowUpCommandException(\"event\", followUpCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"I\u0027m sorry to inform you that the \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    + \"description of an event must not be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"EventCommand\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 54
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Prints the task list currently stored in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs a list command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param ui of Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public ListCommand(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return this.ui.printTaskList(this.taskList.getTaskList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"ListCommand\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 32
    }
  },
  {
    "path": "src/main/java/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Adds a To_Do task into the current task list of Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class ToDoCommand extends CreateTaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs a to do command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList of Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param storage of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param ui of Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param userInput details of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public ToDoCommand(TaskList taskList, Storage storage, Ui ui, String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(taskList, storage, ui, userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String execute() throws DukeInvalidUserInputException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String description \u003d userInput.substring(5).trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            checkDescription(description, \"todo\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            ToDo newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return addTask(newTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"I\u0027m sorry to inform you that the \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    + \"description of a todo must not be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"ToDoCommand\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 41
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Parent class of all Duke Exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 10
    }
  },
  {
    "path": "src/main/java/exceptions/DukeIllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Signals that a given command is not recognised by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class DukeIllegalCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param command that is not recognised by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public DukeIllegalCommandException(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(\"I\u0027m terribly sorry to inform you that \u0027\" + command + \"\u0027 is an unrecognizable command.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 13
    }
  },
  {
    "path": "src/main/java/exceptions/DukeIllegalFollowUpCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Signals that a given follow up command is incorrect for a given command by model.Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class DukeIllegalFollowUpCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param command first command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param followUpCommand second command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public DukeIllegalFollowUpCommandException(String command, String followUpCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(\"My deepest apologies but \u0027\" + followUpCommand + \"\u0027 is an incorrect follow up command to a \u0027\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + command + \"\u0027 command.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 16
    }
  },
  {
    "path": "src/main/java/exceptions/DukeInvalidUserInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Signals that a given user input is invalid and does not fulfill certain constraints."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class DukeInvalidUserInputException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param msg that contains information related to the failed constraints."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public DukeInvalidUserInputException(String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 15
    }
  },
  {
    "path": "src/main/java/file/FileReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class FileReader {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 12
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeIllegalCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs a parser to parse user input commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList of Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param storage of Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param ui of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Parser(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Parses user input into a command for execution."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param userInput full user_input string to be parsed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return command based on userInput."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @throws DukeIllegalCommandException when an invalid command is detected."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Command parseCommand(String userInput) throws DukeIllegalCommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String[] userInputArr \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if (userInputArr.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeIllegalCommandException(\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String keyword \u003d userInputArr[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return new ListCommand(this.ui, this.taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return new DoneCommand(this.taskList, this.storage, userInput, this.ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return new ByeCommand(this.ui);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return new ToDoCommand(this.taskList, this.storage, this.ui, userInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return new EventCommand(this.taskList, this.storage, this.ui, userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return new DeadlineCommand(this.taskList, this.storage, this.ui, userInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return new DeleteCommand(this.taskList, this.storage, this.ui, userInput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                throw new DukeIllegalCommandException(keyword);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Parses user_input when there are commands that follow a \u0027/\u0027 into a command string."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param userInput full follow-up user_input string to be parsed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return string command keyword based on user_input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static String parseFollowUpCommand(String userInput) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String[] userInputArray \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return userInputArray[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 71
    }
  },
  {
    "path": "src/main/java/response/ResponseResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package response;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Links a command result message and whether the message is an"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * error message or not"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class ResponseResult {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        private boolean isError;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        private String message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "         * Constructs a response result which contains a boolean and a string."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "         * @param isError whether the command message is an error or not."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "         * @param message command result message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "         */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        public ResponseResult(boolean isError, String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            this.isError \u003d isError;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            this.message \u003d message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        public boolean isError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return isError;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        public String getMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 29
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Represents the storage of where Duke is loading information from and saving information to."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs the storage based on a filepath to a txt file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param filePath to txt file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Loads the data in the text file from the file path to an assigned task.TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList to load data to."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @throws DukeInvalidUserInputException if there are any invalid inputs in the file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * that are unable to be parsed into a Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void loadTaskList(TaskList taskList) throws DukeInvalidUserInputException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        File file \u003d new File(this.filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                Task loadTaskList \u003d Task.parse(s.nextLine());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                taskList.load(loadTaskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            // If file is not found, a new file will be created"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Saves the given task to the text file from the file path."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param task to be saved into text file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void saveTask(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            file.getParentFile().mkdir(); // create a directory"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            file.createNewFile(); // create .txt file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            // check whether the file exists"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            if (file.length() \u003e 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                FileWriter writeToFile \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                writeToFile.write(System.lineSeparator() + task.toTextFormat());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                writeToFile.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                FileWriter writeToFile \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                writeToFile.write(task.toTextFormat());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                writeToFile.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            System.out.println(Ui.printUnknownError());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Overwrites and saves an entire tasklist into the text file from the file path."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList to be saved into the text file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void saveTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            FileWriter overwriteFile \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            if (taskList.getTotalTask() \u003e 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                overwriteFile.write(taskList.getTask(0).toTextFormat());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                overwriteFile.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                for (int i \u003d 1; i \u003c taskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    saveTask(taskList.getTask(i));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                overwriteFile.write(\"\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                overwriteFile.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            System.out.println(Ui.printUnknownError());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * from previous code"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/*"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static void loadFile() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String output;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            System.out.println(\"Loaded from previous task list:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            output \u003d printFileContents(\"data.txt\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            toAppend \u003d true; // if there is an existing file"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String[] prevList;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            prevList \u003d output.split(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            for (String task : prevList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                String taskType \u003d task.substring(0, 1); // gets the first character"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                String isDoneInteger \u003d task.substring(2, 3);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                        Duke.inputTodo(task, isDoneInteger);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                        Duke.inputEvent(task, isDoneInteger);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                        Duke.inputDeadline(task, isDoneInteger);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            Ui.printTaskList();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Ui.lineSeparator();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 133
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * A specific type of task that contains a description of a task and a specific date and time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Constructs a deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param by of deadline task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @throws DukeInvalidUserInputException when date time is incorrect format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Deadline(String description, String by) throws DukeInvalidUserInputException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"[\" + getType() + \"]\" + super.printStatus() + \" \" + description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static String getType(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Converts the Deadline task into a string to be saved into a text file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return Deadline task in the form of a string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toTxtFormat() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"D | \" + super.toTextFormat() + \" | \" + description + \"|\" + by + System.lineSeparator();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Parses a given string array into a Deadline task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param txtArray to be parsed into a Deadline task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return Deadline task based on input string array."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @throws DukeInvalidUserInputException when an invalid date and time format is found in the input string array."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static Deadline parse(String[] txtArray) throws DukeInvalidUserInputException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String done \u003d txtArray[1].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String description \u003d txtArray[2].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String finalDateTime \u003d \"by\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//        String[] unFormattedDateTime \u003d txtArray[3].trim().split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//        String[] formattedDateTime \u003d formatDateTime(unFormattedDateTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//        String finalDateTime \u003d formattedDateTime[0] + \" \" + formattedDateTime[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, finalDateTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            deadline.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return getType() + \"|\" + super.isDoneInteger() + \"|\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + description + \"|\" + by + System.lineSeparator();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 66
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * A specific type of task that contains a description of a task and a specific date, start and end time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"[\" + getType() + \"]\" + super.printStatus()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + \" \" + description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Converts the Event task into a string to be saved into a text file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return Event task in the form of a string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toTextFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"E | \" + super.toTextFormat() + \" | \" + description + \" | \" + at + System.lineSeparator();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static String getType(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Parses a given string array into a Event task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param txtArray to be parsed into a Event task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return Event task based on input string array."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @throws DukeInvalidUserInputException when an invalid date and time format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     *     is found in the input string array."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static Event parse(String[] txtArray) throws DukeInvalidUserInputException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String done \u003d txtArray[1].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String description \u003d txtArray[2].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String finalDateTime \u003d \"at\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//        String[] unFormattedDateTime \u003d txtArray[3].trim().split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//        String[] formattedDateTime \u003d formatDateTime(unFormattedDateTime);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "//        String finalDateTime \u003d formattedDateTime[0] + \" \" + formattedDateTime[1] + \"-\" + formattedDateTime[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Event event \u003d new Event(description, finalDateTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            event.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return getType() + \"|\" + super.isDoneInteger() + \"|\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + description + \"|\" + at + System.lineSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 62
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeInvalidUserInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Base class of a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected String[] descriptionArray;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    protected static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Obtains status icon(either tick or cross symbol) based on the Task\u0027s isDone status."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return status icon string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return (isDone ? \"*\" : \" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static int getNumberOfTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return numberOfTasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String printStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String symbol \u003d getStatusIcon();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"[\" + symbol + \"]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return printStatus() + description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static void decrementNumberOfTask() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        numberOfTasks--;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static String getType() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public int isDoneInteger() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Parses a given string into a specific type of task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param txtFormat to be parsed into a task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return a specific task type based on the txtFormat."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @throws DukeInvalidUserInputException when txtFormat is of invalid format to be parsed into a task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static Task parse(String txtFormat) throws DukeInvalidUserInputException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        char firstLetter \u003d txtFormat.charAt(0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String[] txtArray \u003d txtFormat.split(\"\\\\|\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if (firstLetter \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return ToDo.parse(txtArray);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } else if (firstLetter \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return Deadline.parse(txtArray);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } else if (firstLetter \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return Event.parse(txtArray);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            throw new DukeInvalidUserInputException(\"Invalid Task type!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toTextFormat() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return (isDone ? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return printTask();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 95
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Represents an array list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Adds a task into the list and then generates and prints a success message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param task to be added into the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Adds a task into the list only."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Used when loading data from a storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param task to be added into the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void load(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Deletes a specific task based on the task\u0027s index in the task array list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * and then generates and prints a success message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param i index of task to be deleted."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Task delete(int i) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Task task \u003d this.taskList.get(i - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.taskList.remove(i - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Marks a specific task as done based on task\u0027s index in the task array list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * and then generates and prints a success message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param i index of task to be marked."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Task markDone(int i) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Task task \u003d this.taskList.get(i - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return this.taskList.get(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public int getTotalTask() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 70
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String printTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"[\" + getType() + \"]\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + super.printStatus() + \" \" + description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static String getType(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Converts the To_Do task into a string to be saved into a text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return To_Do task in the form of a string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toTextFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"T | \" + super.toTextFormat();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Parses a given string array into a To_Do task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param txtArray to be parsed into a To_Do task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return To_Do task based on input string array."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static ToDo parse(String[] txtArray) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        ToDo toDo \u003d new ToDo(txtArray[2].trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if (txtArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            toDo.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return toDo;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return printTask();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 50
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * User Interface of Duke which manages all text output"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private final Scanner userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Generates and prints greeting message upon launching of Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static String greet() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String hello \u003d \"Hello from\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String offer \u003d \"HOI there! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return hello + logo + offer + lineSeparator();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Generates and prints Duke error message upon catching them"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param e Duke exception"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String showDukeError(DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Prints each task in the input tasklist in a labelled and ordered list view."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Generates and prints a message when input tasklist is empty"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param taskList to be printed as an indexed list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * essentially showTaskList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String printTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            if (i \u003d\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                output \u003d output + (i + 1) + \". \" + taskList.get(i).printTask();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                output \u003d output + (i + 1) + \". \" + taskList.get(i).printTask() + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String getListMessage \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            String emptyListMessage \u003d \"Sorry, your tasks list seems to be empty!\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            if (taskList.size() \u003c 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return emptyListMessage;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                return getListMessage + lineSeparator() + output;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Prints a message which displays the total number of tasks in a tasklist."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param i the total number of task in a tasklist."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String getNumberOfTaskMessage(int i) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        //If there is only one task, then task will be singular"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        if(Task.getNumberOfTasks() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "           return \"Now you have \" + i + \" task in the list.\" + lineSeparator();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return \"Now you have \" + i + \" tasks in the list.\" + lineSeparator();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Generates and prints the exit message upon exiting Duke."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String showExit() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"GuuuudBYE. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Generates and prints the task that has been added to the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param newTask that is added to the tasklist."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String printAddMessage(Task newTask) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String addMessage \u003d \"Got it. I\u0027ve added this task:\\n  \" + newTask.printTask();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return addMessage + lineSeparator();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Generates and prints the done message when a task is being marked as done."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param task that is being marked as done."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String showMarkDone(Task task) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String markDoneMessage \u003d \"NOICE! I\u0027ve marked the following task as done:\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String taskDetails \u003d task.printTask();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return markDoneMessage + taskDetails + lineSeparator();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Generates and prints the delete message when a task is being deleted."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * @param task that is being deleted."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String showDelete(Task task) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String deleteMessage \u003d \"Okay sure, the following task has been deleted from your list:\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String taskDetails \u003d task.printTask();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return deleteMessage + taskDetails + lineSeparator();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     * Generates and prints the unknown error message upon encountering an unidentifiable error."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static String printUnknownError() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \" hmmm... error detected that is unknown.\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return this.userInput.nextLine();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static String lineSeparator() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"\\n-------------------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 132
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 4
    }
  }
]
