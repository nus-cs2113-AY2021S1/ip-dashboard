[
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "T|false|1|"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.manager.DateTimeManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.manager.IOManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.manager.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Print message with formatting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static void reply(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        System.out.println(message + System.lineSeparator() + Formatter.FORMAT_DASHES);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // types of command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private enum Commands {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COMMAND_INIT,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COMMAND_ADD,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COMMAND_LIST,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COMMAND_MARKDONE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COMMAND_DELETE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COMMAND_EXIT,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COMMAND_UNRECOGNIZE,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COMMAND_MISSING,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Set the type of user command based on input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static Commands userCommand \u003d Commands.COMMAND_INIT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // String for replying"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static String replyMessage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Boolean for exit app"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Create a task manager"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Set up to print default messages"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: Commands command, used in switch case to set the proper replyMessage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static void printDefaultMessage(Commands command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_INIT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            replyMessage \u003d Formatter.FORMAT_ONE_TAB + \"Hello! I\u0027m Jay. Today is \" + DateTimeManager.getDate() + \", \" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    DateTimeManager.getDay() + \". The \" + \"time now is \" + DateTimeManager.getTime() + \".\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    System.lineSeparator() + Formatter.FORMAT_ONE_TAB + \"What can I do for you?\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_EXIT:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            replyMessage \u003d Formatter.FORMAT_ONE_TAB + \"Bye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_MISSING:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            replyMessage \u003d Formatter.FORMAT_ONE_TAB + \"You did not enter anything, did you?\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_UNRECOGNIZE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            replyMessage \u003d Formatter.FORMAT_ONE_TAB + \"Sorry I don\u0027t know what that means... \u003e.\u003c\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            replyMessage \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        reply(replyMessage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Handles user input"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static void handleUserInput() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // String object to hold any user input or output message"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String message \u003d in.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Split the message to the command and the remaining message"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String[] splitMessage \u003d (message.split(\" \", 2));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String command \u003d splitMessage[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        switch (command.toUpperCase()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case \"LIST\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            userCommand \u003d Commands.COMMAND_LIST;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case \"DONE\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            userCommand \u003d Commands.COMMAND_MARKDONE;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case \"BYE\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            userCommand \u003d Commands.COMMAND_EXIT;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case \"TODO\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case \"EVENT\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case \"DEADLINE\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            userCommand \u003d Commands.COMMAND_ADD;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case \"DELETE\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            userCommand \u003d Commands.COMMAND_DELETE;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case \"\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            userCommand \u003d Commands.COMMAND_MISSING;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            userCommand \u003d Commands.COMMAND_UNRECOGNIZE;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Process according to the command"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        switch (userCommand) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_ADD:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            replyMessage \u003d taskManager.addTask(splitMessage, command);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            reply(replyMessage);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            replyMessage \u003d taskManager.listTask();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            reply(replyMessage);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_MARKDONE:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            replyMessage \u003d taskManager.markTaskDone(splitMessage);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            reply(replyMessage);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            replyMessage \u003d taskManager.deleteTask(splitMessage);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            reply(replyMessage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_EXIT:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            IOManager.saveTaskList(taskManager.getTaskList());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_UNRECOGNIZE:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_MISSING:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            printDefaultMessage(userCommand);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COMMAND_INIT:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        IOManager.loadTaskList(taskManager.getTaskList());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        printDefaultMessage(userCommand);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        while (!isExit);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        printDefaultMessage(userCommand);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 137,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/manager/DateTimeManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke.manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class DateTimeManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static String getDate() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return now.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static String getTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return now.format(DateTimeFormatter.ofPattern(\"HH.mm\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static String getDay() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return now.format(DateTimeFormatter.ofPattern(\"EEE\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 20
    }
  },
  {
    "path": "src/main/java/duke/manager/IOManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke.manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class IOManager {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final String FILE_DIR \u003d \"data\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Save all the tasks in the task list into a txt file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: List\u003cTask\u003e taskList, the List of task to be saved from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static void saveTaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Create a File for the given file path"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        File fileDir;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        FileWriter writer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        fileDir \u003d new File(FILE_DIR);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // If the directory does not exist, create it"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (!fileDir.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            fileDir.mkdir();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Try to create a file if it does not exist"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Write all the task into the file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            writer \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                writer.write(task.getTaskType() + Formatter.FILE_DELIMITER + task.getIsDone() + Formatter.FILE_DELIMITER"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        + task.getDescription() + Formatter.FILE_DELIMITER + task.getDateTime() + System.lineSeparator());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            ioException.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Load the saved task list from the txt file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: List\u003ctask\u003e taskList, the List of task to be loaded into"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static void loadTaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Create a File for the given file path"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Create a Scanner using the File as the source"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Duke.reply(\"Looking for existing file...\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Duke.reply(\"Found file, loading saved info...\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            String[] taskInfos;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            String taskType;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            boolean taskIsDone;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            String taskDescription;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            String taskDateTime;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                taskInfos \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                taskType \u003d taskInfos[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                taskIsDone \u003d Boolean.parseBoolean(taskInfos[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                taskDescription \u003d taskInfos[2];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                switch(taskType) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    task.setIsDone(taskIsDone);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    taskDateTime \u003d taskInfos[3];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    task \u003d new Event(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    task.setIsDone(taskIsDone);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    taskDateTime \u003d taskInfos[3];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    task \u003d new Deadline(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    task.setIsDone(taskIsDone);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    throw new IllegalStateException(\"Unexpected value: \" + taskType);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Duke.reply(\"Successfully loaded saved info!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Duke.reply(\"No saved file found!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (IllegalStateException exception) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Duke.reply(\"Unable to load saved info, file may be corrupted!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 103
    }
  },
  {
    "path": "src/main/java/duke/manager/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke.manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // User task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String returnMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Validate the info for adding task, ensures description and required keyword are present"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Return: String[], more specifically an array of size 2 with the index 0 as the description of"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // the task and index 1 as the date and time info for Deadline and Event"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: String[] message, the whole string of the original message, to be processed for Deadline and Event tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: String identifier, used to split the original message to obtain the date time info"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Throws: DukeException, throws all possible exception that may occur, missing info"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String[] validateTaskInfo(String[] message, String identifier) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String[] processedString \u003d new String[2];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String dateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            description \u003d message[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // if the message is empty, throw missing description exception"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (description.isEmpty() || description.isBlank()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                throw new DukeException(DukeException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            } else if (!identifier.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                // split message by identifier, if specified. Throw missing identifier if the string does not contain"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                // the identifier"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                if (!description.contains(identifier)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    throw new DukeException(DukeException.ExceptionType.EXCEPTION_MISSING_IDENTIFIER);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                // split message based on identifier"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                processedString \u003d message[1].split(identifier, 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                description \u003d processedString[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                dateTime \u003d processedString[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                // if missing description or datetime, throw respective exception"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                if (description.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    throw new DukeException(DukeException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                } else if (dateTime.isEmpty() || dateTime.isBlank()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    throw new DukeException(DukeException.ExceptionType.EXCEPTION_MISSING_DATETIME);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // extra handling in the the event that the message is empty and cannot be split"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            throw new DukeException(DukeException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return processedString;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Create new task and add to the task list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Return: String, a reply message for the method operation"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: String[] message, the whole string of the original message, to be passed into validateTaskInfo and"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // retrieve the specific info"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: String command, used in switch case to add the proper task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String addTask(String[] message, String command) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String[] taskInfo;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Task newTask \u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            returnMessage \u003d Formatter.FORMAT_ONE_TAB + \"Added \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // Create new task object based on the command type"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            switch (command.toUpperCase()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            case \"DEADLINE\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                taskInfo \u003d validateTaskInfo(message, \"/by\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                newTask \u003d new Deadline(taskInfo[0], taskInfo[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                returnMessage +\u003d \"a deadline task \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            case \"EVENT\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                taskInfo \u003d validateTaskInfo(message, \"/at\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                newTask \u003d new Event(taskInfo[0], taskInfo[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                returnMessage +\u003d \"an event \";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            case \"TODO\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                validateTaskInfo(message, \"\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                newTask \u003d new Todo(message[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                returnMessage +\u003d \"a todo task \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // add to the list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // print out the newly added task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            returnMessage +\u003d newTask + \"!\" + System.lineSeparator() + Formatter.FORMAT_TWO_TABS + \"Now you have \" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    taskList.size() + \" task(s) in the list!\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            returnMessage \u003d Formatter.FORMAT_ONE_TAB + e.getMessage();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return  returnMessage;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // List all the task in the taskList"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Return: String, a reply message for the method operation"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String listTask() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // print out default message if there are no task, else print the list of tasks"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            returnMessage \u003d Formatter.FORMAT_ONE_TAB + \"There are currently no task in the list! (*^▽^*)\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            returnMessage \u003d Formatter.FORMAT_ONE_TAB + \"Here is your list of task(s):\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            for (Task i : taskList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                returnMessage +\u003d System.lineSeparator() + Formatter.FORMAT_TWO_TABS + index + \".\" + i;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                ++index;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return returnMessage;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Common functionality for markTaskDone and deleteTask"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: boolean isMarkDone, true for marking task done; false for deleting task"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: String[] taskIndexString, contains the whole string of the original message. Index 1 is the task index"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private void markDoneOrDeleteTask(boolean isMarkDone, String[] taskIndexString) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Get the task index"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskIndexString[1]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Task task \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // mark task done or delete task depending on the option"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (isMarkDone) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                task.setIsDone(true);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                returnMessage \u003d Formatter.FORMAT_ONE_TAB + \"Completed task \" + taskIndex + \"!\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        Formatter.FORMAT_TWO_TABS + task;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                taskList.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                returnMessage \u003d Formatter.FORMAT_ONE_TAB + \"I have removed the task !\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        Formatter.FORMAT_TWO_TABS + task + System.lineSeparator() + Formatter.FORMAT_ONE_TAB +"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        \"Now you have \" + taskList.size() + \" task(s) in the list!\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            returnMessage \u003d Formatter.FORMAT_ONE_TAB + \"Invalid input, cannot convert to integer!\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            returnMessage \u003d Formatter.FORMAT_ONE_TAB + \"You did not enter any value!\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            returnMessage \u003d Formatter.FORMAT_ONE_TAB + \"Ops, you have entered an invalid task number! You have \" +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    taskList.size() + \" task(s)!\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Mark tasks that are done"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Return: String, a reply message for the method operation"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: String[] taskIndexString, the original message, to be passed into markDoneOrDelete to process"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String markTaskDone(String[] taskIndexString) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        markDoneOrDeleteTask(true, taskIndexString);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return returnMessage;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Delete specific task"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Return: String, a reply message for the method operation"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Param: String[] taskIndexString, the original message, to be passed into markDoneOrDelete to process"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String deleteTask(String[] taskIndexString) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        markDoneOrDeleteTask(false, taskIndexString);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return returnMessage;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 165
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setDateTime(String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return super.toString() + Formatter.encloseWithBrackets(\"By:\" + by, Formatter.bracketTypes.ROUND_BRACKET);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    String dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setDateTime(String dateTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return super.toString() + Formatter.encloseWithBrackets(\"At:\" + dateTime, Formatter.bracketTypes.ROUND_BRACKET);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import duke.util.Formatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.taskType \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setTaskType(String taskType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public abstract String getDateTime();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String message \u003d Formatter.encloseWithBrackets(taskType, Formatter.bracketTypes.SQUARE_BRACKET);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            message +\u003d Formatter.encloseWithBrackets(String.valueOf(Formatter.TICK), Formatter.bracketTypes.SQUARE_BRACKET);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            message +\u003d Formatter.encloseWithBrackets(String.valueOf(Formatter.CROSS),Formatter.bracketTypes.SQUARE_BRACKET);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        message +\u003d description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 13
    }
  },
  {
    "path": "src/main/java/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public enum ExceptionType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        EXCEPTION_MISSING_DESCRIPTION(\"You missed out on the description?! O.o\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        EXCEPTION_MISSING_IDENTIFIER(\"You missed out key identifier! (/by /at)\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        EXCEPTION_MISSING_DATETIME(\"You did not set a date/time ¯\\\\_(ツ)_/¯\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        private String exceptionMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        ExceptionType(String exceptionMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.exceptionMessage \u003d exceptionMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return exceptionMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public DukeException(ExceptionType exception) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        super(exception.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 24
    }
  },
  {
    "path": "src/main/java/duke/util/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Formatting"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public final static String FORMAT_DASHES \u003d \"----------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public final static String FORMAT_ONE_TAB \u003d \"    \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public final static String FORMAT_TWO_TABS \u003d \"        \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Characters for tick and cross"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public final static char TICK \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public final static char CROSS \u003d \u0027\\u2718\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public final static char FILE_DELIMITER \u003d \u0027|\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public enum bracketTypes {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        ROUND_BRACKET,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        SQUARE_BRACKET,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        CURLY_BRACKET,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static String encloseWithBrackets(String message, bracketTypes bracket) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        switch (bracket){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case ROUND_BRACKET:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            output \u003d \"(\" + message +\")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case CURLY_BRACKET:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            output \u003d \"{\" + message +\"}\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case SQUARE_BRACKET:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            output \u003d \"[\" + message +\"]\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "todo watch lecture"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "event test 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "event test 1 /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "event test 1 /at tmr"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "deadline test 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "deadline test 2 /by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "deadline test 2 /by tmr"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "done hi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java ..\\src\\main\\java\\duke\\manager\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\util\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 2,
      "-": 32
    }
  }
]
