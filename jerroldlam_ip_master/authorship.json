[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "# Duke personal assistant"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "This is a project for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Done by"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Display | Name | Github Profile"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "---|:---:|:---:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "![](https://avatars3.githubusercontent.com/u/60382285?s\u003d100) | Jerrold Lam  | [jerroldlam](https://github.com/jerroldlam \"Github User Profile\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 7,
      "-": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Table of contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    * [Starting the program](#starting-the-program)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    * [Adding task to track](#adding-task-to-track)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        * [Adding ToDo Task: ](#adding-todo-task) `ToDo`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        * [Adding Event Task: ](#adding-event-task) `Event`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        * [Adding Deadline Task: ](#adding-deadline-task) `Deadline`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    * [Setting a task as complete: ](#setting-a-task-as-complete) `Done`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    * [Requesting task list: ](#requesting-task-list) `List`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    * [Deleting a task in task list: ](#deleting-a-task-in-the-task-list) `Delete`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    * [Finding a task in task list: ](#finding-a-task-in-the-task-list) `Find`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    * [Exiting the program: ](#exiting-the-program) `Bye`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "* [End of user guide](#end-of-user-guide)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "The current version of Duke supports tracking of 3 unique types of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "They are `Event`, `Deadline` and `ToDo`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Other functions include `list`,`find` and `delete`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Overview**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|Feature name | Feature description"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|:---:|:---:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|Track `Events`| Tracks Events in your task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|Track `Deadline`| Tracks Deadline in your task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|Track `Todo`| Tracks Todo in your task list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|`done` Task | Marks the task as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|`List` | Prints out the your task list with all events"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|`find` keyword | Searches task list for the given keyword"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|`delete` index | Deletes Task at task index"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Duke is also able to save and load previously created task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Note :** Commands entered in Duke will be read as case-insensitive. "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Starting the program"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "When starting the program, _Duke_ will attempt to locate a file called `tasklist.txt` and attempt to load previously saved task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if successful :**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Loading Text File........"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Loaded Tasks Successfully from tasklist.txt"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if unsuccessful :**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Loading Text File........"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "tasklist.txt does not exist!"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Adding task to track"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Overview**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "| Task type to add | Format of command | Example command "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|:---:|:---:|:---:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|ToDo | `Todo` _[Task name]_ | `Todo CS2113 Tutorial` "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|Event | `Event` _[Event name]_ /at _[Event Time]_ | `Event BlackPink concert /at Saturday 13 September`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|Deadline| `Deadline` _[Deadline name]_ /by _[YYYY-MM-DD]_ | `Deadline CS2113 iP /by 2020-09-18`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Note:** Not following the format will result in an error which will be prompted by Duke."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Note:** Tasks created will automatically be initialised as undone."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "#### Adding ToDo task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Format :** `ToDo` {Task Name}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Example :** Todo CS2113 Tutorial"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Duke will attempt to add a task of type `ToDo` with the name of {Task Name} into the task list. "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if successful :**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Todo CS2113 Tutorial"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "New task added:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "\t[T][✗] CS2113 Tutorial"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "I\u0027ll keep track of it for you!"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "#### Adding Event task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Format :** `Event` {Event Name} /at {Event Details}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Example :** Event BlackPink concert /at Saturday 13 September"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Duke will attempt to add a task of type `Event` with the name of {Event Name} and details of {Event Details} into the task list. "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if successful :**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Event BlackPink concert /at Saturday 13 September"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "New task added:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "\t[E][✗] BlackPink concert (at: Saturday 13 September)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "I\u0027ll keep track of it for you!"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "#### Adding Deadline task"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Format :** `Deadline` {Deadline Name} /by {Deadline Details}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Note :** Deadline Details should be of the format YYYY-MM-DD "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Example :** Deadline CS2113 iP /by 2020-09-18"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Duke will attempt to add a task of type `Deadline` with the name of {Deadline Name} and details of {Deadline Details} into the task list. "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if successful :**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Deadline CS2113 iP /by 2020-09-18"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "New task added:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "\t[D][✗] CS2113 iP (by: Sep 18 2020)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "I\u0027ll keep track of it for you!"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Setting a task as complete"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "To mark a task as completed, type `done` followed by the integer of the task index to be completed."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Format :** `Done` {task number}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Duke will check if the task number exists in your task list, then set the task as completed. When marked as completed, the `✗` will be replaced by a `✓`. Duke will echo back the task marked as completed to acknowledge successful completion. "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if successful :**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Oh jolly! You finally completed this:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "\t[E][✓] BlackPink concert (at: Saturday 13 September)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if unsuccessful :**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "There\u0027s no such task to finish! Check your list!"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Requesting task list"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "To request for task list, type `list` when prompted. "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome example if there is at least one task your task list :**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "list"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Here is your current task list!"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "You have 2 tasks on your list!"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "You have completed 0 of them."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Hope you are on target!"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "1. [T][✗] CS2113 Tutorial"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "2. [E][✓] BlackPink concert (at: Saturday 13 September)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "3. [D][✗] CS2113 iP (by: Sep 18 2020)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if there are no tasks in your task list :**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "list"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "You have no tasks yet!"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Deleting a task in the task list"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "To delete a task from the task list, type `delete` followed by the task number to delete."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Format :** `delete` {Task Number}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Duke will check if the task number entered exists. If it exists, Duke will echo the task and remove it from the task list. If the task does not exist, Duke will show the user an error message."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Example :** `delete 1` , will delete task number 1 from task list."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if task to be deleted exists :** "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "OK! I have removed this task for you:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "\t[T][✗] CS2113 Tutorial"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "You have 2 tasks on your list!"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if task to be deleted does not exist :** "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "There\u0027s no such task to finish! Check your list!"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Finding a task in the task list"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "To find tasks with a keyword, type `find` followed by the keyword."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Format :** `find` {keyword}"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Duke will iterate thought the task list to find tasks that contain the keyword. Prints out tasks that contain the keyword."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Example :** `find concert`  will print out all tasks and their indexes, if the task name contains the keyword `concert`."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if there is a matching task(s) :**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "find concert"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "1. [E][✓] BlackPink concert (at: Saturday 13 September)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "There are 1 tasks that fit your search!"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if there is no matching task :**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "find potato"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "There are 0 tasks that fit your search!"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Exiting the program"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "To exit the program, type `bye` when prompted."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "While exiting the program, Duke will save a copy of your task list as `tasklist.txt` in the root folder."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if successful :**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "bye"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Task list saved successfully as tasklist.txt"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "----------------------------------------------------"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Bye."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "I\u0027m going back to sleep."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "------------Duke has gone back to sleep--------------"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "**Outcome if unsuccessful :**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "bye"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "ERROR SAVING TASKS"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Bye."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "I\u0027m going back to sleep."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "------------Duke has gone back to sleep--------------"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "```"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## End of user guide"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 254,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.CommandParser.userEnteredBye;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.CommandParser.userEnteredDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.CommandParser.userEnteredList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.CommandParser.userEnteredFind;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.CommandParser.userEnteredDelete;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.CommandParser.userEnteredTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.Ui.showWelcomeMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.Ui.showExitMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.Ui.showHelpMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.Ui.printErrorMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.function.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * Represents the main Duke program which contains task tracking capabilities"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static final String ERROR_INVALID_COMMAND \u003d \"INVALID COMMAND ENTERED\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        TaskList userTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        showWelcomeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        userTaskList.loadTaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            showHelpMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            if (userEnteredBye(userInput)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } else if (userEnteredList(userInput)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                userTaskList.printTaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } else if (userEnteredDone(userInput)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                userTaskList.setTaskComplete(userInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } else if (userEnteredDelete(userInput)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                userTaskList.deleteTask(userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } else if (userEnteredFind(userInput)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                userTaskList.findTask(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } else if (userEnteredTask(userInput)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                userTaskList.addTask(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                printErrorMessage(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        userTaskList.saveTaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        showExitMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 50,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/function/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke.function;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Returns true if user input requests for the \"bye\" command,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else return false."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput string of userInput"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static boolean userEnteredBye(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return userInput.equalsIgnoreCase(BYE_COMMAND);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Returns true if user input requests for the \"list\" command,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else return false."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput string of userInput"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static boolean userEnteredList(String userInput) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return userInput.equalsIgnoreCase(LIST_COMMAND);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Returns true if user input requests for the \"done\" command,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else return false."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static boolean userEnteredDone(String userInput) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return userInput.toLowerCase().startsWith(DONE_COMMAND);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Returns true if user input requests for the \"delete\" command,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else returns false."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static boolean userEnteredDelete(String userInput) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return userInput.toLowerCase().startsWith(DELETE_COMMAND);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Returns true if user input requests for the \"find\" command,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else returns false."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static boolean userEnteredFind (String userInput) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return(userInput.toLowerCase().startsWith(FIND_COMMAND));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Returns true if user input requests for the add tasks command,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else returns false."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static boolean userEnteredTask (String userInput) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return (userInput.toLowerCase().startsWith(DEADLINE_COMMAND) ||"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                userInput.toLowerCase().startsWith(EVENT_COMMAND) ||"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                userInput.toLowerCase().startsWith(TODO_COMMAND));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 80
    }
  },
  {
    "path": "src/main/java/duke/function/FileIO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke.function;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.Ui.printErrorMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class FileIO {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final int TASK_TYPE_INDEX \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final int COMPLETION_INDEX \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final int DESCRIPTION_INDEX \u003d 2;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final int DETAILS_INDEX \u003d 3;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final int FULL_DETAILS \u003d 4;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String ERROR_DATE_FORMAT \u003d \"The date format should be in YYYY-MM-DD, which are all integers.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String ERROR_LOADING_TEXT_FILE \u003d \"List Loading terminated.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String EVENT_SYMBOL \u003d \"[E]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String TODO_SYMBOL \u003d \"[T]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String DEADLINE_SYMBOL \u003d \"[D]\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String TEXT_DIVIDER \u003d \" | \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String NEW_LINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String TEXT_DIVIDER_REGEX \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public FileIO (String fileName) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setFileName(fileName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getFileName() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return fileName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setFileName(String fileName) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Saves taskListArray to text file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param taskArrayList ArrayList of Tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void saveAsTextFile (ArrayList\u003cTask\u003e taskArrayList) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fileName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String inputToWrite \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        for (Task task : taskArrayList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            inputToWrite +\u003d getTaskAsText(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        fw.write(inputToWrite);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Takes in Task and formats it into a readable format for text file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param task task to be formatted"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return taskLine to be written"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getTaskAsText(Task task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String taskLine \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        taskLine +\u003d task.getTaskSymbol() + TEXT_DIVIDER;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        taskLine +\u003d (task.isTaskDone()) ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        taskLine +\u003d TEXT_DIVIDER;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        taskLine +\u003d task.getTaskName();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (!task.getTaskType().equals(TaskType.TODO)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            taskLine +\u003d TEXT_DIVIDER;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            taskLine +\u003d task.getDetails();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        taskLine +\u003d NEW_LINE;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return taskLine;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Loads text file of fileName to populate taskArrayList"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return taskArrayList arraylist of laoded tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @throws FileNotFoundException thrown when no file with fileName is found"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTextFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        File inputFile \u003d new File(fileName);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(inputFile);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String inputLine;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String[] processedLine;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String isDone;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String timeDetails \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        Task newTaskToAdd \u003d null;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                inputLine \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                processedLine \u003d inputLine.split(TEXT_DIVIDER_REGEX);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                taskType \u003d processedLine[TASK_TYPE_INDEX];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                isDone \u003d processedLine[COMPLETION_INDEX];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                description \u003d processedLine[DESCRIPTION_INDEX];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                if (processedLine.length \u003d\u003d FULL_DETAILS) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    timeDetails \u003d processedLine[DETAILS_INDEX];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case TODO_SYMBOL:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    newTaskToAdd \u003d new ToDo(description);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case EVENT_SYMBOL:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    newTaskToAdd \u003d new Event(description, timeDetails);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case DEADLINE_SYMBOL:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    LocalDate deadlineDate \u003d LocalDate.parse(timeDetails);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    newTaskToAdd \u003d new Deadline(description, deadlineDate);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    //Task Type Error"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    newTaskToAdd.setTaskDone(true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                taskArrayList.add(newTaskToAdd);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            return taskArrayList;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(ERROR_DATE_FORMAT);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(ERROR_LOADING_TEXT_FILE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 140
    }
  },
  {
    "path": "src/main/java/duke/function/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke.function;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import duke.model.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import static duke.function.Ui.printErrorMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final int TASK_COUNT_INDEX \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final int TASK_COMPLETED_INDEX \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String ERROR_NO_TASK \u003d \"You have no tasks yet!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String ERROR_ADDING_TASK \u003d \"Error adding task. I only have todo, deadline and event.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String ERROR_NO_SUCH_TASK \u003d \"There\u0027s no such task to finish! Check your list!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String ERROR_NO_INTEGER_DONE \u003d \"Please put an integer after done.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String ERROR_NO_DETAILS \u003d \"The details entered are wrong!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String ERROR_DATE_FORMAT \u003d \"The date format should be in YYYY-MM-DD, which are all integers.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String ERROR_SAVING_TEXT \u003d \"ERROR SAVING TASKS\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String COMPLETE_TASK_MESSAGE \u003d \"Oh jolly! You finally completed this:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String DELETE_TASK_MESSAGE \u003d \"OK! I have removed this task for you:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String LOADING_FILE_MESSAGE \u003d \"Loading Text File........\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String EVENT_MARKER \u003d \"/at\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String DEADLINE_MARKER \u003d \"/by\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String DIVIDER_LINE \u003d \"----------------------------------------------------\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private FileIO textFile \u003d new FileIO(\"tasklist.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private int totalNumberOfTasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private int numberOfCompletedTasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setTotalNumberOfTasks(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setNumberOfCompleteTasks(0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public int getTotalNumberOfTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return totalNumberOfTasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setTotalNumberOfTasks(int totalNumberOfTasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.totalNumberOfTasks \u003d totalNumberOfTasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public int getNumberOfCompleteTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return numberOfCompletedTasks; }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setNumberOfCompleteTasks(int numberOfCompletedTasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.numberOfCompletedTasks \u003d numberOfCompletedTasks;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Prints current state of task list with the tasks and completeness."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * If task list is empty, it will inform the user of an empty task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void printTaskList() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (taskListNotEmpty(taskArrayList)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printTaskListHeader();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printTaskListBody();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(ERROR_NO_TASK);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Checks if taskArrayList is empty"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param taskArrayList ArrayList of user\u0027s tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return boolean of whether it is not empty"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private boolean taskListNotEmpty (ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return !(taskArrayList.isEmpty());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Prints the content of the task list with respective list index, task symbol, done symbol"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * and description."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void printTaskListBody() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        for (int listIndex \u003d 1; listIndex \u003c\u003d taskArrayList.size(); listIndex++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            Task currentTask \u003d taskArrayList.get(listIndex - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            System.out.print(listIndex + \". \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            System.out.println(currentTask.toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Prints header of the task list with total number of tasks and number of completed tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void printTaskListHeader() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Here is your current task list!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"You have \" + getTotalNumberOfTasks() + \" task\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                + ((getTotalNumberOfTasks()\u003e1)? \"s\" : \"\") + \" on your list!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"You have completed \" + getNumberOfCompleteTasks() +\" of them.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Hope you are on target!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Takes a string of userInput and determines the TaskType intended."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Creates an instance of the new TaskType,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * then, add the instance of the new task into taskArrayList."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput name of new task."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void addTask(String userInput) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            TaskType newTaskType \u003d getInputTaskType(userInput);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            Task newEntry;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            if (taskTypeIsValid(newTaskType)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                switch (newTaskType) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    String eventName \u003d getInputTaskName(userInput);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    String period \u003d getInputDetails(userInput,EVENT_MARKER);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    newEntry \u003d new Event(eventName, period);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    String deadlineName \u003d getInputTaskName(userInput);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    String deadlineBy \u003d getInputDetails(userInput,DEADLINE_MARKER);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    LocalDate deadlineDate \u003d LocalDate.parse(deadlineBy);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    newEntry \u003d new Deadline(deadlineName, deadlineDate);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    int nameStartPoint \u003d userInput.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    String toDoName \u003d userInput.substring(nameStartPoint);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    newEntry \u003d new ToDo(toDoName);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    printErrorMessage(ERROR_ADDING_TASK);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                taskArrayList.add(newEntry);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                printAddTaskSuccessfully(newEntry);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                printErrorMessage(ERROR_ADDING_TASK);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(ERROR_NO_DETAILS);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(ERROR_DATE_FORMAT);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Checks if task type is valid"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param type type to be checked"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return boolean of validity"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private boolean taskTypeIsValid (TaskType type) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return !(type \u003d\u003d null);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Prints a confirmation message of adding a newEntry successfully by echoing the entry of the task."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param newEntry object of Task or its subclasses."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void printAddTaskSuccessfully(Task newEntry) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setTotalNumberOfTasks(getTotalNumberOfTasks()+1);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"New task added:\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"\\t\" + newEntry.toString());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"I\u0027ll keep track of it for you!\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Takes a string of userInput in the format of \"done X\", where X is an integer marking the task index"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * of the task that the user wants to indicate as done. Find the corresponding index from int X and"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * sets the task\u0027s boolean isDone to be true."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput user\u0027s input in the format \"done x\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setTaskComplete(String userInput) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String userInputNumber \u003d userInput.substring(userInput.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            int taskNumberCompleted \u003d Integer.parseInt(userInputNumber);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            Task currentTask \u003d taskArrayList.get(taskNumberCompleted - 1);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            currentTask.setTaskDone(true);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            setNumberOfCompleteTasks(getNumberOfCompleteTasks() + 1);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printCompleteTaskSuccessfully(currentTask);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(ERROR_NO_INTEGER_DONE);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(ERROR_NO_SUCH_TASK);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Prints a confirmation message of successfully setting a task as complete"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * and echoes the task."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param currentTask Task that was completed"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void printCompleteTaskSuccessfully(Task currentTask) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(COMPLETE_TASK_MESSAGE);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"\\t\" + currentTask.toString());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Takes a string of userInput and returns an enumeration TaskType corresponding to the userInput."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Returns null if userInput does not match any TaskType."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * userInput is case-insensitive."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput of one word from the user"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return TaskType of userInput"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private TaskType getTaskType (String userInput) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        TaskType currentTaskType;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        switch (userInput.toUpperCase()) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"TODO\" :"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            currentTaskType \u003d  TaskType.TODO;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"DEADLINE\" :"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            currentTaskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"EVENT\" :"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            currentTaskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            currentTaskType \u003d null;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return currentTaskType;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Processes the userInput and returns the TaskType of the userInput"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput of any length where the first word is the TaskType intended"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return TaskType of userInput"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private TaskType getInputTaskType (String userInput) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String[] inputTaskType \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return (getTaskType(inputTaskType[0]));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Process userInput and returns intended taskName"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput user\u0027s input"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return String taskName - name of task"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private String getInputTaskName (String userInput) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int nameStartPoint \u003d userInput.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int nameEndPoint \u003d userInput.indexOf(\"/\") - 1;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return userInput.substring(nameStartPoint,nameEndPoint);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Process userInput and returns intended details"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput user\u0027s input"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return String details - details of task to be attached"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private String getInputDetails (String userInput, String splitter) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int nameEndPoint \u003d userInput.indexOf(splitter);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String roughDetails \u003d userInput.substring(nameEndPoint);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int detailStartPoint \u003d roughDetails.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return roughDetails.substring(detailStartPoint);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Deletes a task of the user\u0027s input"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput input of user"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void deleteTask (String userInput) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String userInputNumber \u003d userInput.substring(userInput.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            int taskNumberToRemove \u003d Integer.parseInt(userInputNumber);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            Task taskToDelete \u003d taskArrayList.get(taskNumberToRemove - 1);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            taskArrayList.remove(taskNumberToRemove - 1);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            if (taskToDelete.isTaskDone()) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                setNumberOfCompleteTasks(getNumberOfCompleteTasks() - 1);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            setTotalNumberOfTasks(getTotalNumberOfTasks() - 1);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printDeleteTaskSuccessfully(taskToDelete);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(ERROR_NO_INTEGER_DONE);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(ERROR_NO_SUCH_TASK);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Acknowledges successful deletion of task by echoing task deleted"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param taskToDelete task that was deleted"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void printDeleteTaskSuccessfully(Task taskToDelete) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DELETE_TASK_MESSAGE);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"\\t\" + taskToDelete.toString());"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"You have \" + getTotalNumberOfTasks() + \" task\""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                + ((getTotalNumberOfTasks() \u003e 1) ? \"s\" : \"\") + \" on your list!\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Saves current task list into text file"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void saveTaskList() {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            textFile.saveAsTextFile(taskArrayList);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printSaveTextFileSuccessfully();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(ERROR_SAVING_TEXT);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Loads task list from text file"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void loadTaskList() {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            System.out.println(LOADING_FILE_MESSAGE);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            taskArrayList \u003d textFile.loadTextFile();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printLoadTextFileSuccessfully();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            populateTaskListStatistics();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printErrorMessage(textFile.getFileName() + \" does not exist!\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Iterates through the task list and populates total number of tasks"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * and number of completed tasks"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void populateTaskListStatistics() {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int[] taskListStatistics;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        taskListStatistics \u003d getTaskListStatistics(taskArrayList);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setTotalNumberOfTasks(taskListStatistics[0]);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setNumberOfCompleteTasks(taskListStatistics[1]);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Computes total number of tasks and total number of completed tasks"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param taskArrayList ArrayList of tasks to be computed"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return Integer array where index 0 represents total task count"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *          and index 1 represents completed task count"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private int[] getTaskListStatistics (ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int[] result \u003d {0,0};"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        for (Task t : taskArrayList) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            result[TASK_COUNT_INDEX] +\u003d 1;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            if (t.isTaskDone()) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                result[TASK_COMPLETED_INDEX] +\u003d 1;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Acknowledges successful saving of text file"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void printSaveTextFileSuccessfully () {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Task list saved successfully as \" + textFile.getFileName());"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Acknowledges successful loading of text file"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void printLoadTextFileSuccessfully () {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Loaded Tasks Successfully from \" + textFile.getFileName());"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Searches task list for matching user input and prints out all corresponding tasks and their indexes"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param userInput input from user"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void findTask(String userInput) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int taskNameStartPoint \u003d userInput.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String taskName \u003d userInput.substring(taskNameStartPoint);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        searchTaskList(taskName);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Prints out all tasks which contains taskName"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param taskName name of task to be searched"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void searchTaskList(String taskName) {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int numberOfMatchingTasks \u003d 0;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        for (int index \u003d 0; index \u003c taskArrayList.size(); index++) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            Task currentTask \u003d taskArrayList.get(index);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            if (currentTask.getTaskName().contains(taskName)) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                System.out.println( (index+1) + \". \" + currentTask.toString());"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                numberOfMatchingTasks++;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"There are \" + numberOfMatchingTasks + \" tasks that fit your search!\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 413
    }
  },
  {
    "path": "src/main/java/duke/function/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke.function;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Prints welcome message for User during entry."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static void showWelcomeMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"--------------------Waking Duke up-------------------\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Hello...\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"You have woken me up...\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"----------------------------------------------------\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Prints exit message for User during exit."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static void showExitMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"----------------------------------------------------\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Bye.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"I\u0027m going back to sleep.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"------------Duke has gone back to sleep--------------\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Prints error message for User."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param errorMessage message to print out for User."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static void printErrorMessage(String errorMessage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Shows the user list of available commands for Duke"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static void showHelpMessage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Here are some commands that Duke can understand:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"\\tevent {event name} /at {timing}\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"\\ttodo {todo name}\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"\\tdeadline {deadline name} /by {date} ,date should be in YYYY-MM-DD format\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"\\tlist\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"\\tbye\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"----------------------------------------------------\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 49
    }
  },
  {
    "path": "src/main/java/duke/model/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * Represent a subclass of Task, called Deadline. It extends task by storing the deadline of the task in a LocalDate"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * format."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String DEADLINE_SYMBOL \u003d \"[D]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private LocalDate deadlineBy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public Deadline(String taskName,LocalDate deadlineBy) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setDeadlineBy(deadlineBy);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public LocalDate getDeadlineBy() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return deadlineBy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getTaskSymbol() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return DEADLINE_SYMBOL;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return getDeadlineBy().toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setDeadlineBy(LocalDate deadlineBy) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.deadlineBy \u003d deadlineBy;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return DEADLINE_SYMBOL + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                getDeadlineBy().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 47
    }
  },
  {
    "path": "src/main/java/duke/model/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * Represent a subclass of Task, called Event. It extends task by storing the period of the task in a String"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * format."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String EVENT_SYMBOL \u003d \"[E]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private String period;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public Event(String taskName,String period) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setPeriod(period);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getPeriod() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return period;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getTaskSymbol() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return EVENT_SYMBOL;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return TaskType.EVENT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return getPeriod();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setPeriod(String period) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.period \u003d period;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return EVENT_SYMBOL + super.toString() + \" (at: \" + getPeriod() + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 43
    }
  },
  {
    "path": "src/main/java/duke/model/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * Represents a task to be stored. This object can store the name of the task as a string and the completion status"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * of the task as a boolean. A true boolean result indicates the task is completed, while a false boolean result"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * indicates an incomplete task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String DONE_SYMBOL \u003d \"[✓]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String UNDONE_SYMBOL \u003d \"[✗]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private boolean taskDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setTaskName(taskName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setTaskDone(false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public abstract String getTaskSymbol();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public abstract TaskType getTaskType();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public abstract String getDetails();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getDoneSymbol() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (this.isTaskDone()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            return DONE_SYMBOL;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            return UNDONE_SYMBOL;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public boolean isTaskDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return taskDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setTaskDone(boolean taskDone) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.taskDone \u003d taskDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return getDoneSymbol() + \" \" +  getTaskName();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 53
    }
  },
  {
    "path": "src/main/java/duke/model/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * Enumerators of valid task types that can be stored in the task array list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    TODO,DEADLINE,EVENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 8
    }
  },
  {
    "path": "src/main/java/duke/model/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " * Represents a subclass of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final String TODO_SYMBOL \u003d \"[T]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getTaskSymbol() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return TODO_SYMBOL;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return TaskType.TODO;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return TODO_SYMBOL + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\function\\*.java ..\\src\\main\\java\\duke\\model\\*.java ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 3,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "if ! javac  -cp ../bin -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/function/*.java ../src/main/java/duke/model/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 1,
      "-": 37
    }
  }
]
