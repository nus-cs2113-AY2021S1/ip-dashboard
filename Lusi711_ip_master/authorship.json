[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[D][✓] return book | Jun 6 2020, 11:59 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[E][✘] project meeting | Aug 6 2020, 2:00 AM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[T][✘] borrow book"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[1. Introduction](#1-introduction) \u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[2. Quick start](#2-quick-start) \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[3. Features](#3-features) \u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.1. Adding a todo](#31-adding-todos---todo) \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.2. Adding a deadline](#32-adding-deadlines-deadline) \u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3. Adding an event](#33-adding-events-event) \u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4. Listing tasks](#34-listing-all-tasks-list) \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.5. Marking a task as done](#35-marking-a-task-as-done-done) \u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.6. Finding tasks by keyword](#36-finding-tasks-by-keyword-find) \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.7. Finding tasks by date](#37-finding-tasks-by-date-get) \u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.8. Deleting a task](#38-deleting-a-task-delete) \u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.9. Exiting the program](#39-exiting-the-program-bye) \u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[4. Command summary](#4-command-summary) \u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[5. Troubleshooting](#5-troubleshooting)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "# 1. Introduction"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Welcome to the *Duke User Guide*! Duke is a desktop app for managing tasks,deadlines and events, optimized for use via a Command Line Interface (CLI). \u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "This user guide gives you detailed instructions on the Duke installation process and available features."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "# 2. Quick Start"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "1. Ensure that you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "2. Download the latest `ip.jar`."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "3. Copy the file to the folder you want to use as the *home folder* for your Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "4. Open a command window in that folder."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "5. Run the command `java -jar ip,jar` to start the app. "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "6. If the setup is correct, you should see a greeting message as follows:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Hello from"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     ____        _        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    |  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    |____/ \\__,_|_|\\_\\\\___"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Hello! I\u0027m Duke."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "5. Type the command below the separation line and press Enter to execute it."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "6. Refer to the [Features](#3-features) below for details of each command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "# 3. Features "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Notes about command format:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* Words in `\u003cUPPER-CASE\u003e` are the parameters supplied by the user. "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "e.g. in `todo \u003cDESCRIPTION\u003e`, `DESCRIPTION` is a parameter."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3.1. Adding ToDos - `todo`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Adds a task without any date/time attached to it. \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `todo \u003cDESCRIPTION\u003e`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The task is assumed to be not done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e todo read book"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        [T][✘] read book"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Now you have 1 task in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3.2. Adding deadlines: `deadline`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Adds a task that need to be done before a specific date and time. \u003cbr\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `deadline \u003cDESCRIPTION\u003e \\by \u003cDATE\u003e \u003cTIME\u003e`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* Enter `DATE` in the format: `YYYY-MM-DD`."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* Enter `TIME` in the 24-hour format: `HHmm` e.g. 11:59 pm is expressed as `2359`."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e deadline return book /by 2020-06-06 2359"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        [D][✘] return book (by: Jun 6 2020, 11:59 PM)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3.3. Adding events: `event`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Adds a task that starts at a specific time. \u003cbr\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `event \u003cDESCRIPTION\u003e \\by \u003cDATE\u003e \u003cSTART_TIME\u003e`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The `DATE` must be in the format: `YYYY-MM-DD\u0027."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The `START_TIME` must be in the 24-hour format: `HHmm` e.g. 11:59 pm is expressed as `2359`."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e event project meeting /at 2020-08-06 1400"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        [E][✘] project meeting (at: Aug 6 2020, 02:00 PM)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3.4. Listing all tasks: `list`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Shows a list of all the tasks in task list in order of input. \u003cbr\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e list"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    1. [T][✘] read book"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    2. [D][✘] return book (by: Jun 6 2020, 11:59 PM)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    3. [E][✘] project meeting (at: Aug 6 2020, 02:00 PM)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3.5. Marking a task as done: `done`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Marks a specified task as done. \u003cbr\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `done \u003cINDEX\u003e`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* Marks the task in the specified `INDEX` as done. "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The index refers to the index number shown in the task list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The index **must be a positive integer** 1,2,3..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e Example"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e done 1"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "      [T][✓] read book"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3.6. Finding tasks by keyword: `find`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Find all tasks with description that matches the given keyword. \u003cbr\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `find \u003cKEYWORD\u003e`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* Searches for tasks with description that matches the specified `KEYWORD`."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The search is case-insensitive e.g. `book` will match `Book`."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The search matches only the description."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The search matches only full words e.g. `book` will not match `books`."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e Example"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e find book"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    1. [T][✓] read book"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    2. [D][✘] return book (by: Jun 6 2020, 11:59 PM)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3.7. Viewing tasks by date: `view`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Find deadlines/events that are due/occur on the given date."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `get \u003cDATE\u003e`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* Searches for tasks with deadline/start time which matches the specified `DATE`."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `DATE` must be in the format : `YYYY-MM-DD` e.g. `2020-09-28` means 28th September 2020."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e Example"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e view 2020-08-06"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    1. [E][✘] project meeting (at: Aug 6 2020, 02:00 PM)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3.8. Deleting a task: `delete`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Deletes an **existing** task from the list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* Deletes the task in the specified `INDEX`. "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The index refers to the index number shown in the complete task list."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* The index **must be a positive integer** 1,2,3..."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e Example"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e delete 3"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        [E][✘] project meeting (at: Aug 6 2020, 02:00 PM)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3.9. Exiting the program: `bye`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Exits the program and saves the task list data automatically in the hard disk. \u003cbr\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* If you exit the program successfully, you should see a farewell message as follows:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------------------------------------------------------------------"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "# 4. Command Summary"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Actions | Format, Examples"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------- | ----------------"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Add Todo| `todo DESCRIPTION`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Add deadline | `deadline DESCRIPTION \\by DATE TIME`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Add event | `event DESCRIPTION \\by DATE TIME`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "List | `list`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Mark as done | `done INDEX`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Find by keyword | `find KEYWORD`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Find by date | `view DATE`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Delete | `delete`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Exit | `bye`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "# 5. Troubleshooting"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Q. The status icons of my tasks are not showing in the terminal. e.g. "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[T][?] read book"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "A. The console of your Computer does not support the Code Page. "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "1. Type `chcp 65001` whenever you open a new command window to run the app."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "2. Type `java -Dfile.encoding\u003dUTF-8 -jar ip.jar` whenever you start the application."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "The table below shows the possible error messages you may see, the possible reasons and ways to deal with them."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Message | Possible reason | What to do now"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "------- | --------------- | --------------"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(``` | You typed a command that does not exist in features. | Refer to [Features](#3-features) to learn the proper formatting."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```OOPS!!! Please enter a valid description.``` | You may have missed typing the task description or index. | Refer to [Features](#3-features) to learn the proper formatting."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```OOPS!!! Please enter a valid index``` | The task index you entered does not exist on the task list. | Reenter the command with a valid index."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```OOPS!!! There are no tasks in the list to execute command: ``` | The task list is empty. |"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```OOPS!!! Please provide a specific time after \"``` | There is a missing date/time when adding a deadline/event. | Refer to [Features](#3-features) to learn the proper formatting."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```OOPS!!! Please input the date and time in the correct format(YYYY-MM-DD HHmm): ``` | The date/time input does not follow the required format strictly. | Refer to [Features](#3-features) to learn the proper formatting."
      }
    ],
    "authorContributionMap": {
      "Lusi711": 203,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_DECODE_FAILURE_FORMAT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_MISSING_FILEPATH;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Initializes the application and starts the interaction with the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param args arguments supplied by the user at program launch"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Class constructor to set up the required objects and loads up the data from the storage file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param filePath the file path of the saved copy of the task list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            storage.createFile(ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ioe) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_DECODE_FAILURE_FORMAT + filePath, ioe.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (NullPointerException npe) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_MISSING_FILEPATH, npe.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (DateTimeParseException dpe) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_DECODE_FAILURE_FORMAT + filePath, dpe.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_DECODE_FAILURE_FORMAT + filePath, de.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Prints welcome message"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Prints the Goodbye message and exits."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Command c \u003d new Parser().parse(fullCommand);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            isExit \u003d ExitCommand.isExit(c);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 98,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Signals any error specific to the application"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 7
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 17
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_EMPTY_LIST;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_MISSING_INDEX;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Deletes a task identified using its last displayed index from the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"\\tNoted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final int targetIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Sets up the index of the task to delete"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param index index of the task to delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        targetIndex \u003d index - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Deletes a task identified using its last displayed index and prints a confirmatory message"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores the tasks input by the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int numberOfTasks \u003d tasks.getNumberOfTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Task deletedTask \u003d tasks.deleteTask(targetIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_SUCCESS, \"\\t  \" + deletedTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (IndexOutOfBoundsException ioe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (numberOfTasks \u003e 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                ui.showFeedbackMessage(MESSAGE_MISSING_INDEX + \" between 1 and \" + numberOfTasks + \": \" + (targetIndex + 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                ui.showFeedbackMessage(MESSAGE_EMPTY_LIST + COMMAND_WORD);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(\"\\tNow you have \" + numberOfTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(\"\\tNow you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 57
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_EMPTY_LIST;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_MISSING_INDEX;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Indicates a task identified using its last displayed index as done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"\\tNice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final int targetIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Sets up the index of the task to be marked as done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param index index of the task to be marked as done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        targetIndex \u003d index - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Marks a task identified using its last displayed index as done and prints a confirmatory message"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores the tasks input by the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int numberOfTasks \u003d tasks.getNumberOfTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Task doneTask \u003d tasks.markAsDone(targetIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_SUCCESS, \"\\t \" + doneTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (tasks.getNumberOfTasks() \u003e 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                ui.showFeedbackMessage(MESSAGE_MISSING_INDEX + \" between 1 and \" + numberOfTasks + \": \" + (targetIndex + 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                ui.showFeedbackMessage(MESSAGE_EMPTY_LIST + COMMAND_WORD);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 51
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Saves the data from the task list into a storage file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores all the tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        storage.save(tasks, ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Returns whether the user has keyed the exit command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param command command input by the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return whether the user has keyed the exit command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 35
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_TASKS_LISTED;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Finds and lists all tasks in task list with description that contains the keyword input by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Keyword matching is case sensitive."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Sets the specific keyword to search for"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param keyword for searching"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Finds and lists all tasks in task list with description that contains the specified keyword"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores all the task data"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d getTasksWithDescriptionContainingKeyword(tasks, keyword);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui.showTaskList(MESSAGE_TASKS_LISTED, tasksFound);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Retrieves all tasks in the task list with description that contains the specified keyword"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the task list that stores all the task data"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param keyword for searching"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return list of tasks found"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private ArrayList\u003cTask\u003e getTasksWithDescriptionContainingKeyword(TaskList tasks, String keyword) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Set\u003cString\u003e wordsInDescription \u003d new HashSet\u003c\u003e(getWordsInDescription(task.getDescription()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (wordsInDescription.contains(keyword)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                matchedTasks.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return matchedTasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Retrieves a listing of every word in the description, in order."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private List\u003cString\u003e getWordsInDescription(String description) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return Arrays.asList(description.toLowerCase().split(\" \"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 72
    }
  },
  {
    "path": "src/main/java/duke/command/FindDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_TASKS_LISTED;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Finds and lists all deadlines and events in task list occurring on a specific date input by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class FindDateCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Sets the specific date to search for"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param date for searching"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public FindDateCommand(String date) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Finds and lists all deadlines and events in task list which occur on {@code date}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores all the task data"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d getTasksWithTimeEqualsDate(tasks, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui.showTaskList(MESSAGE_TASKS_LISTED, tasksFound);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Retrieves all deadlines/events in the task list which occur on specific {@code date}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks the TaskList that stores all the task data"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param date  for searching"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return the list of tasks found"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private ArrayList\u003cTask\u003e getTasksWithTimeEqualsDate(TaskList tasks, String date) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String formattedTime;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                formattedTime \u003d ((Deadline) task).getBy().format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                formattedTime \u003d ((Event) task).getAt().format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (formattedTime.equals(date)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                matchedTasks.add(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return matchedTasks;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 70
    }
  },
  {
    "path": "src/main/java/duke/command/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Represents an incorrect command. Upon execution, produces some feedback to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Class constructor that receives the feedback message to output to the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param feedbackToUser feedback message to output to the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public IncorrectCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Prints the feedback message based on the type of error in the command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores all the tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui.showFeedbackMessage(feedbackToUser);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_DISPLAY_LIST;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Lists all tasks in the task list to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Displays all tasks in the task list with index numbers"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores the tasks input by the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui.showTaskList(MESSAGE_DISPLAY_LIST, tasks.getTasks());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 27
    }
  },
  {
    "path": "src/main/java/duke/command/addTask/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command.addTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Adds a task with a specific deadline to the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"\\tGot it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final Deadline toAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Class constructor to set up a deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param by          deadline of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public AddDeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.toAdd \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Adds a task with a specific deadline to the task list and prints a confirmatory message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores the tasks input by the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int numberOfTasks \u003d tasks.getNumberOfTasks();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.addNewTask(toAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui.showFeedbackMessage(MESSAGE_SUCCESS, \"\\t  \" + toAdd);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(\"\\tNow you have \" + numberOfTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(\"\\tNow you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 47
    }
  },
  {
    "path": "src/main/java/duke/command/addTask/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command.addTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Adds an event to the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"\\tGot it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final Event toAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Class constructor to set up an event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param description description of the event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param at          start time of the event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public AddEventCommand(String description, String at) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.toAdd \u003d new Event(description, at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Adds an event to the task list and prints a confirmatory message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores the tasks input by the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int numberOfTasks \u003d tasks.getNumberOfTasks();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.addNewTask(toAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui.showFeedbackMessage(MESSAGE_SUCCESS, \"\\t  \" + toAdd);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(\"\\tNow you have \" + numberOfTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(\"\\tNow you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 47
    }
  },
  {
    "path": "src/main/java/duke/command/addTask/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command.addTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Adds a task to the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"\\tGot it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final ToDo toAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Class constructor to set up a task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public AddToDoCommand(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.toAdd \u003d new ToDo(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Adds a task to the task list and prints a confirmatory message"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks   the TaskList that stores the tasks input by the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui      the interface that interacts with the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param storage the file used to store task list data"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int numberOfTasks \u003d tasks.getNumberOfTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.addNewTask(toAdd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ui.showFeedbackMessage(MESSAGE_SUCCESS, \"\\t  \" + toAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(\"\\tNow you have \" + numberOfTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(\"\\tNow you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 46
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.FindDateCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.IncorrectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.addTask.AddDeadlineCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.addTask.AddEventCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.addTask.AddToDoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_TIMING_DESCRIPTION;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_MISSING_DESCRIPTION;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_MISSING_TIMING_DESCRIPTION;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Command parse(String userInput) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String[] command \u003d userInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (command[0].equals(ListCommand.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else if (command[0].equals(ExitCommand.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            switch (command[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case AddToDoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new AddToDoCommand(command[1].trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return prepareAddDeadlineCommand(command[1].trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return prepareAddEventCommand(command[1].trim());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return prepareDelete(command[1].trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return prepareDone(command[1].trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return prepareFind(command[1].trim());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case FindDateCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return prepareFindDate(command[1].trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new IncorrectCommand(MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException abe) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new IncorrectCommand(MESSAGE_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Parses arguments in the context of the add deadline command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Command prepareAddDeadlineCommand(String args) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String[] parts \u003d args.split(\"/by\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new AddDeadlineCommand(parts[0].trim(), parts[1].trim());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new IncorrectCommand(MESSAGE_MISSING_TIMING_DESCRIPTION + \"/by.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (DateTimeParseException dpe) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new IncorrectCommand(MESSAGE_INVALID_TIMING_DESCRIPTION + parts[1].trim());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Parses arguments in the context of the add event command."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Command prepareAddEventCommand(String args) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String[] parts \u003d args.split(\"/at\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new AddEventCommand(parts[0].trim(), parts[1].trim());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new IncorrectCommand(MESSAGE_MISSING_TIMING_DESCRIPTION + \"/at.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (DateTimeParseException dpe) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new IncorrectCommand(MESSAGE_INVALID_TIMING_DESCRIPTION + parts[1].trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Parses arguments in the context of the delete task command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Command prepareDelete(String args) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int targetIndex \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new DeleteCommand(targetIndex);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new IncorrectCommand(MESSAGE_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Parses arguments in the context of the done task command."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Command prepareDone(String args) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int targetIndex \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new DoneCommand(targetIndex);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new IncorrectCommand(MESSAGE_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Parses arguments in the context of the find task command based on description."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Command prepareFind(String args) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return new FindCommand(args.trim().toLowerCase());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Parses arguments in the context of the find task command based on date."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Command prepareFindDate(String args) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return new FindDateCommand(args.trim());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 150
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Represents the file used to store address book data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String MESSAGE_IOEXCEPTION \u003d \"\\tSomething went wrong.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String MESSAGE_MISSING_FILEPATH \u003d \"\\tNo file name is provided.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Sets up the filepath for the storage file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param filePath path of the storage file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Creates a new storage file with the input filepath"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui the interface that interacts with the user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void createFile(Ui ui) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            File folder \u003d new File(filePath.substring(0, filePath.indexOf(\"/\")));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            folder.mkdirs();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (NullPointerException npe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_MISSING_FILEPATH, npe.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (NullPointerException npe) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_IOEXCEPTION, npe.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_MISSING_FILEPATH, ioe.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Loads the {@code ArrayList\u003cTask\u003e} data from this storage file, and then returns it."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Returns an empty {@code ArrayList\u003cTask\u003e} if the file does not exist, or is not a regular file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return ArrayList\u003cTask\u003e data from this storage file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @throws FileNotFoundException if the file is not found."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @throws DukeException         if there were errors reading and/or converting data from file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d TaskListDecoder.decodeTaskList(s);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Saves the {@code TaskList} data to the storage file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param taskList TaskList that stores the tasks input by the user"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param ui       the interface that interacts with the user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void save(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            for (String output : encodedTaskList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                fw.write(output + \"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            ui.showFeedbackMessage(MESSAGE_IOEXCEPTION, ioe.getMessage());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 91
    }
  },
  {
    "path": "src/main/java/duke/storage/TaskListDecoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Decodes the storage data file into an {@code ArrayList\u003cTask\u003e} object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class TaskListDecoder {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String CHECKMARK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String TODO_DESCRIPTOR \u003d \"[T]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DEADLINE_DESCRIPTOR \u003d \"[D]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String EVENT_DESCRIPTOR \u003d \"[E]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DATETIME_ENCODED_FORMAT \u003d \"MMM d yyyy, h:mm a\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-d HHmm\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Decodes sentence strings in file into a {@code ArrayList\u003cTask\u003e} containing the decoded tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param s the Scanner object which parses strings from the file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return {@code ArrayList\u003cTask\u003e} data decoded from this file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @throws DukeException if there were errors reading and/or converting data from file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static ArrayList\u003cTask\u003e decodeTaskList(Scanner s) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String[] parts \u003d s.nextLine().split(\"] \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (parts[0].startsWith(TODO_DESCRIPTOR)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                tasks.add(decodeToDoFromString(parts[0].trim(), parts[1].trim()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else if (parts[0].startsWith(DEADLINE_DESCRIPTOR)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                tasks.add(decodeDeadlineFromString(parts[0].trim(), parts[1].trim(), \"\\\\| \"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else if (parts[0].startsWith(EVENT_DESCRIPTOR)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                tasks.add(decodeEventFromString(parts[0].trim(), parts[1].trim(), \"\\\\| \"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Decodes a string into an {@code Event} if indicated"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param isDone      string that represents whether the task was done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param description description of the event with the start time"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param regex       delimiter between text description and start time"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return {@code Event} object created from string"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static Task decodeEventFromString(String isDone, String description, String regex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String[] parts \u003d description.split(regex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        LocalDateTime by \u003d LocalDateTime.parse(parts[1].trim(), DateTimeFormatter.ofPattern(DATETIME_ENCODED_FORMAT));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Task event \u003d new Event(parts[0].trim(), by.format(DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (isDone.contains(CHECKMARK)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            event.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Decodes a string into a {@code Deadline} if indicated"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param isDone      string that represents whether the task was done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param description description of the task with the deadline"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param regex       delimiter between text description and deadline"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return {@code Deadline} object created from string"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static Task decodeDeadlineFromString(String isDone, String description, String regex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String[] parts \u003d description.split(regex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        LocalDateTime by \u003d LocalDateTime.parse(parts[1].trim(), DateTimeFormatter.ofPattern(DATETIME_ENCODED_FORMAT));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Task deadline \u003d new Deadline(parts[0].trim(), by.format(DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT)));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (isDone.contains(CHECKMARK)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            deadline.markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Decodes a string into a {@code ToDo} object if indicated"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param isDone      string that represents whether the task was done"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return {@code ToDo} object created from string"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static Task decodeToDoFromString(String isDone, String description) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Task todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (isDone.contains(CHECKMARK)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            todo.markAsDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 105
    }
  },
  {
    "path": "src/main/java/duke/storage/TaskListEncoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Encodes the {@code TaskList} object into a data file for storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class TaskListEncoder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Encodes all the {@code Task} in the {@code toSave} into a list of decodable and readable string presentation"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * for storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static List\u003cString\u003e encodeTaskList(TaskList toSave) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d toSave.getTasks();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            encodedTaskList.add(task.encodeToFile());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return encodedTaskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Represents a task with a specific deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DESCRIPTOR \u003d \"[D]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-d HHmm\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DATETIME_ENCODED_FORMAT \u003d \"MMM d yyyy, h:mm a\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Constructor that sets up the text description and deadline of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param description text description of task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param by          deadline of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return DESCRIPTOR + super.toString() + \" (by: \" + formatTimeToString() + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Converts the deadline to a presentable string format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String formatTimeToString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return by.format(DateTimeFormatter.ofPattern(DATETIME_ENCODED_FORMAT));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Converts the object to an encoded, readable string format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String encodeToFile() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return DESCRIPTOR + super.encodeToFile() + \" | \" + formatTimeToString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Represents an event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DESCRIPTOR \u003d \"[E]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-d HHmm\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DATETIME_ENCODED_FORMAT \u003d \"MMM d yyyy, h:mm a\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Constructor that sets up the text description and start time of the event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param description text description of event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param at          start time of event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public LocalDateTime getAt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return DESCRIPTOR + super.toString() + \" (at: \" + formatTimeToString() + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Converts the deadline to a presentable string format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String formatTimeToString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return at.format(DateTimeFormatter.ofPattern(DATETIME_ENCODED_FORMAT));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String encodeToFile() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return DESCRIPTOR + super.encodeToFile() + \" | \" + formatTimeToString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Represents a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected String TICK \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected String CROSS \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Constructor that sets up the text description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param description text description of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Marks the task as done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Converts the object to a presentable string format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Converts the object to an encoded, readable string format"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String encodeToFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 52
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Represents the entire task list. Contains the data of the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Creates an empty task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Constructs a task list with the given data"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param tasks {@code ArrayList\u003cTask\u003e} object that stores data from storage file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Adds a new {@code Task} object to the task list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param task new task object input by user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void addNewTask(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Deletes a task identified using its last displayed index from the task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param targetIndex last displayed index of task to delete"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @throws IndexOutOfBoundsException if index is beyond the number of tasks in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Task deleteTask(int targetIndex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Task deletedTask \u003d tasks.get(targetIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.remove(deletedTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Sets up the index of the task to be marked as done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @param targetIndex last displayed index of task to be marked as done"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return Task object that is marked done"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @throws IndexOutOfBoundsException if index is beyond the number of tasks in the list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Task markAsDone(int targetIndex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.get(targetIndex).markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return tasks.get(targetIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 68
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Represents a task that has no specific deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DESCRIPTOR \u003d \"[T]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return DESCRIPTOR + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String encodeToFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return DESCRIPTOR + super.encodeToFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 23
    }
  },
  {
    "path": "src/main/java/duke/ui/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_DECODE_FAILURE_FORMAT \u003d \"\\tOh no! Failed to load the file: \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_MISSING_FILEPATH \u003d \"\\tNo file name is provided.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_MISSING_DESCRIPTION \u003d \"\\tOOPS!!! The description cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_MISSING_INDEX \u003d \"\\tOOPS!!! Please enter a valid index \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_EMPTY_LIST \u003d \"\\tOOPS!!! There are no tasks in the list to execute command: \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_MISSING_TIMING_DESCRIPTION \u003d \"\\tOOPS!!! Please provide a specific time after \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_INVALID_TIMING_DESCRIPTION \u003d \"\\tOOPS!!! Please input the date and time in the correct format(YYYY-MM-DD HHmm): \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"\\tBye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_DISPLAY_LIST \u003d \"\\tHere are the tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_TASKS_LISTED \u003d \"\\tHere are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"\\tHello! I\u0027m Duke.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String MESSAGE_ENQUIRY \u003d \"\\tWhat can I do for you?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 22
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_GOODBYE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_ENQUIRY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static duke.ui.Messages.MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String DIVIDER \u003d \"------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String LOGO \u003d \" \\t____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            + \"\\t|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            + \"\\t| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            + \"\\t| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Reads the text entered by the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * @return command (full line) entered by the user"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        showToUser(DIVIDER, \"\\tHello from\", LOGO, MESSAGE_WELCOME, MESSAGE_ENQUIRY, DIVIDER);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Generates and prints the goodbye message upon termination of the application"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        showToUser(DIVIDER, MESSAGE_GOODBYE, DIVIDER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Generates and prints all {@code Task} in the given {@code ArrayList\u003cTask\u003e}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void showTaskList(String message, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        showToUser(message);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int taskIndex \u003d tasks.indexOf(task) + 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            showToUser(\"\\t\" + taskIndex + \". \" + task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Prints feedback message to the user"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void showFeedbackMessage(String... feedbackToUser) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        showToUser(feedbackToUser);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Prints divider to distinguish input and different outputs"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        showToUser(DIVIDER);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     * Shows message(s) to the user"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void showToUser(String... message) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            out.println(m);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 94
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "deadline return book /by 2020-06-06 2359"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "event project meeting /at 2020-08-06 1400"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "find book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/command/*.java ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 1,
      "-": 37
    }
  }
]
