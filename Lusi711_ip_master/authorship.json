[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[D][✓] return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[E][✘] project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[T][✓] borrow book"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.command.FileProcessing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String INDENTLINE \u003d \"----------------------------------------------------------\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static boolean isChanged \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    //Prints greeting message when opening the application"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static void enterGreet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(INDENTLINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(INDENTLINE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    //Prints farewell message after command \u003d \u0027bye\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static void farewellGreet() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(INDENTLINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(INDENTLINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected static void addToDo(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.add(new ToDo(input));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected static void addDeadline(String input, String delimiter) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String[] description \u003d input.split(delimiter);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.add(new Deadline(description[0].trim(), description[1].trim()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected static void addEvent(String input, String delimiter) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String[] description \u003d input.split(delimiter);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.add(new Event(description[0].trim(), description[1].trim()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    //Adds Task instance to tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static void addList(CommandType commandType, String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String regex;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case COMMAND_TODO:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            addToDo(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                addDeadline(input, regex \u003d \" /by\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                System.out.println(\"OOPS!!! There must be a description after /by.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                addEvent(input, regex \u003d \" /at \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                System.out.println(\"OOPS!!! There must be a description after /at.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        isChanged \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"  \" + tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (tasks.size() \u003e 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    //Changes isDone of specified Task as True"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static void markAsDone(String input) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            taskIndex \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(\"OOPS!!! Please list a task number to be marked done: \" + input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            tasks.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(\"OOPS!!! There are only \" + tasks.size() + \" tasks on the list.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        isChanged \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"  \" + tasks.get(taskIndex - 1));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static void removeTask(String input) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            taskIndex \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(\"OOPS!!! Please list a task number to be deleted: \" + input);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Task deletedTask \u003d tasks.get(taskIndex - 1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(\"OOPS!!! There are only \" + tasks.size() + \" tasks on the list\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"  \" + tasks.get(taskIndex - 1));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tasks.remove(tasks.get(taskIndex - 1));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        isChanged \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (tasks.size() \u003e 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    //Prints the tasks array"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static void displayList() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println((tasks.indexOf(task) + 1) + \". \" + task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    //Processes command-line input"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static void executeCommand() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String[] command \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            //Identify the specific command by user"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CommandType commandType \u003d CommandType.COMMAND_UNKNOWN;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(INDENTLINE);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                commandType \u003d readCommandType(command[0]);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                System.out.println(INDENTLINE);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case COMMAND_LIST:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                displayList();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case COMMAND_DONE:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    markAsDone(command[1]);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    System.out.println(\"OOPS!!! Please provide a valid index number for: \" + command[0]);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case COMMAND_DELETE:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    removeTask(command[1]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    System.out.println(\"OOPS!!! Please provide a valid index number for: \" + command[0]);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case COMMAND_BYE:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    addList(commandType, command[1].trim());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    System.out.println(\"OOPS!!! The description of a \" + command[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(INDENTLINE);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static CommandType readCommandType(String command) throws DukeException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case (\"bye\"):"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return CommandType.COMMAND_BYE;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return CommandType.COMMAND_LIST;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return CommandType.COMMAND_TODO;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return CommandType.COMMAND_DEADLINE;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return CommandType.COMMAND_EVENT;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case (\"done\"):"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return CommandType.COMMAND_DONE;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case (\"delete\"):"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return CommandType.COMMAND_DELETE;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        FileProcessing file \u003d new FileProcessing();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        //Greets the user upon entering"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        enterGreet();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        //Reads file content to load tasks"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            file.readFileContents(tasks);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            file.createFile();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        //Executes command-line input of user"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        executeCommand();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        //Save tasks to text file if there are any changes made"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (isChanged) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                file.writeToFile(tasks);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        //Displays exit message"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        farewellGreet();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 231,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 5
    }
  },
  {
    "path": "src/main/java/duke/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    COMMAND_BYE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    COMMAND_LIST,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    COMMAND_DONE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    COMMAND_TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    COMMAND_DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    COMMAND_EVENT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    COMMAND_DELETE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    COMMAND_UNKNOWN"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 12
    }
  },
  {
    "path": "src/main/java/duke/command/FileProcessing.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class FileProcessing extends Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public FileProcessing() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        File folder \u003d new File(filePath.substring(0, 4));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        folder.mkdirs();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            folder.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(\"Something went wrong. \" + e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void readFileContents(ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String[] sentence \u003d s.nextLine().split(\"] \",2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (sentence[0].startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                Duke.addToDo(sentence[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else if (sentence[0].startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                Duke.addDeadline(sentence[1], \"\\\\| \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else if (sentence[0].startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                Duke.addEvent(sentence[1],\"\\\\| \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            //Mark task as done if indicated in the text"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (sentence[0].contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            fw.write(task.toFile()+\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String descriptor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.descriptor \u003d \"[D]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return descriptor + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return descriptor + super.toFile() + \" | \" + by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String descriptor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.descriptor \u003d \"[E]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return descriptor + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return descriptor + super.toFile() + \" | \" + at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 28
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String descriptor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.descriptor \u003d \"[T]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return descriptor + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return descriptor + super.toFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "delete 3"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/command/*.java ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 1,
      "-": 37
    }
  }
]
