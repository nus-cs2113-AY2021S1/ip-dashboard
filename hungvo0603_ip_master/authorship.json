[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.ErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static Command commandType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static final int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void addDeadlineTask (Task[] tasks, String command, String delimiter) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String description \u003d getDeadlineAndEventDescription(command, delimiter);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String time \u003d getDeadlineAndEventTime(command, delimiter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int taskCount \u003d Task.getNumberOfTask();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            Task t \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            tasks[taskCount] \u003d t;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printAddMessage(tasks[taskCount]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            Task.incrementNumberOfTask();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printDeadlineSyntaxCommandMessage(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void addEventTask (Task[] tasks, String command, String delimiter) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String description \u003d getDeadlineAndEventDescription(command, delimiter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String time \u003d getDeadlineAndEventTime(command, delimiter);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int taskCount \u003d Task.getNumberOfTask();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            Task t \u003d new Event(description, time);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            tasks[taskCount] \u003d t;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printAddMessage(tasks[taskCount]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            Task.incrementNumberOfTask();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printEventSyntaxCommandMessage(command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void addTodoTask (String command, Task[] tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String description \u003d getTodoDescription(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            Task t \u003d new Todo(description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int taskCount \u003d Task.getNumberOfTask();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            tasks[taskCount] \u003d t;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printAddMessage(tasks[taskCount]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            Task.incrementNumberOfTask();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printTodoSyntaxCommandMessage(command);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String getDeadlineAndEventTime (String command, String delimiter) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] descriptions \u003d command.split(delimiter, 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (descriptions.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (descriptions[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return descriptions[1].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String getDeadlineAndEventDescription (String command, String delimiter) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] words \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (words.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (words[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (!words[1].trim().contains(delimiter)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String description \u003d words[1].split(delimiter, 2)[0].trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String getTodoDescription (String command) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] slicedCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (slicedCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (slicedCommand[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return slicedCommand[1].trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String getInput() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.print(\"Hung: \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        while (inputLine.trim().isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printNullCommandErrorMessage();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.print(\"Hung: \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            getCommandType(inputLine);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printCommandTypeErrorMessage();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return inputLine;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void getCommandType (String command) throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] slicedInput \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        switch (slicedInput[0].toLowerCase().trim()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.LIST;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.BYE;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.TODO;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.DEADLINE;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.EVENT;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.DONE;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.ERROR;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Hello! I\u0027m !bot\\nWhat are your orders?\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.print(\"!bot: \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"~~Dead is like a wind, always by my side~~\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printAddMessage (Task task) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int taskCount \u003d Task.getNumberOfTask() + 1;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot:\\nAdded: \" + task.toString());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (taskCount \u003c\u003d 1) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(\"You now have \" + taskCount + \" duke.task in the list.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(\"You now have \" + taskCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printSetTaskDoneMessage (Task task) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot:\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve mark this duke.task as done:\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.printf(\" %s\\n\", task.toString());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printTaskList (Task[] tasks) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int taskCount \u003d Task.getNumberOfTask();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot:\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(\"There is no duke.task in the list for now.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        for (int i \u003d 1; i \u003c taskCount + 1; i \u003d i + 1) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.printf(\"%d. %s\\n\", i, tasks[i - 1].toString());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void setTaskAsDone (String command, Task[] tasks) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(command.substring(5)) - 1;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            tasks[taskNumber].setDone();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printSetTaskDoneMessage(tasks[taskNumber]);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printNumberFormatErrorMessage();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printOutOfBoundsErrorMessage();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void executeCommands (Task[] tasks) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        command \u003d getInput();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        while (commandType !\u003d Command.BYE) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                printTaskList(tasks);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                setTaskAsDone(command, tasks);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                addTodoTask(command, tasks);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                addDeadlineTask(tasks, command, \"/by\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                addEventTask(tasks, command, \"/at\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            command \u003d getInput();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void main (String[] args) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        Task[] tasks \u003d new Task[MAX_TASKS];"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        executeCommands(tasks);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        printGoodbyeMessage();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 242,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    ERROR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/ErrorMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class ErrorMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printDeadlineSyntaxCommandMessage(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot: invalid duke.command: \" + command);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"sample: deadline deadlineDescription /by deadlineTime\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printEventSyntaxCommandMessage(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot: invalid duke.command: \" + command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"sample: event eventDescription /at eventTime\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printTodoSyntaxCommandMessage(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot: invalid duke.command: \" + command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"sample: todo todoDescription\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printCommandTypeErrorMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot: invalid duke.command type\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"commands: todo, event, deadline, done, list, bye\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printNullCommandErrorMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot: duke.command.Command cannot be empty! Please try another duke.command!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printOutOfBoundsErrorMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"duke.task.Task number is not valid\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printNumberFormatErrorMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot: duke.task number should be an integer\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Deadline (String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected static int numberOfTask \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static int getNumberOfTask() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return numberOfTask;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void incrementNumberOfTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        numberOfTask++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return (this.isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "todo iP"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "deadline tP /by before tutorial at Wed 11pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "event CS2113T project meeting /at Wed 4pm on Zoom"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 2,
      "-": 19
    }
  }
]
