[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 1,
      "-": 25
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "# !bot User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[1. Introduction](#1-introduction) \u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[2. Quick start](#2-quick-start) \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[3. Features](#3-features) \u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.1 Adding a task](#31-adding-a-task-todo-deadline-event) \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.2 Listing tasks](#32-listing-tasks-list) \u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3 Marking task as done](#33-marking-a-task-as-done-done) \u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4 Finding tasks](#34-finding-tasks-find) \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.5 Deleting a task](#35-deleting-a-task-delete) \u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.6 Exiting](#36-exiting-bye) \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "[4. Command summary](#4-command-summary)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "!bot is a **command-line (CLI) task list manager program** that helps the absent-minded "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "user to track their to-do, deadline and event tasks. !bot can be used by users that can"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "type fast. !bot can also save your task list to a text file when you exit the program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "and load it the next time you enter the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## 2. Quick start"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "1. Ensure that you have `Java 11` or above installed in your computer."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "2. Download the iP.jar file here."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "3. Copy the .jar file to your preferable home folder for !bot."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "4. Launch the .jar file in the !bot home folder by using `java -jar iP.jar` command on "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Command Prompt (Windows) or on Terminal (MacOS). If the setup is correct, you should see"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "something like this:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    ![Greetings](greetings.PNG)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "In command syntax, there will be parameters in CAPITAL. Those will be provided by the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* DESCRIPTION: a string representing the content of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* DATE: a string representing the date of Deadline and Event tasks. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The format should be dd/MM/YYYY where"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * `dd` is the day,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * `MM` is the month,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * `YYYY` is the year"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Example: 06/03/2001 represents to 6th Mar 2001."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* TIME: a string representing the time of Deadline and Event tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "The format should be HHMM where"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * `HH` is the hour,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * `MM` is the minute"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Example: 2300 represents 11:00 PM"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* INDEX: an integer representing the index of the task in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* KEYWORD: a string representing the words to be searched in the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 3.1 Adding a task: `todo`, `deadline`, `event`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Tell !bot to add a new task to its database. There are three types of task you can add:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* **`todo`**: add a to-do to the list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Syntax: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Example of usage: `todo CS2113T iP README.md`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Expected output: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    ![Add Todo Task](addTodo.PNG)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* **`deadline`**: add a deadline to the list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Syntax: `deadline DESCRIPTION /by DATE TIME`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Example of usage: `deadline CS2113T iP /by 02/10/2020 2359`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Expected output:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    ![Add Deadline Task](addDeadline.PNG)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* **`event`**: add an event to the list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Syntax: `event DESCRIPTION /at DATE TIME`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Example of usage: `event Birthday party /at 27/10/2020 1830`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  * Expected output:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    ![Add Event Task](addEvent.PNG)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 3.2 Listing tasks: `list`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "List all the tasks that the user has in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Syntax: `list`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Expected output:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  ![List Command](list.PNG)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 3.3 Marking a task as done: `done`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Mark a task as done when the user has finished the task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Syntax: `done INDEX`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Example of usage: `done 1`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Expected output:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  ![Done Command](done.PNG)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 3.4 Finding tasks: `find`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Find all the tasks which contains a specific keyword."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Syntax: `find KEYWORD`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Example of usage: `find CS2113T`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Expected output:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  ![Find Command](find.PNG)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 3.5 Deleting a task: `delete`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Delete a task in a specific index."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Syntax: `delete INDEX`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Example of usage: `delete 1`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Expected output:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  ![Delete Command](delete.PNG)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "### 3.6 Exiting: `bye`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Stop !bot and save all the tasks to hard disk."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Syntax: `bye`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "* Expected output:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "  ![Bye Command](bye.PNG)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "## 4. Command summary"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Following is the summary of all available features in !bot program."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Feature       | Syntax and Example"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "------------- | ---------------------------"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Add to list   | - `todo DESCRIPTION`\u003cbr\u003eExample: todo exam\u003cbr\u003e\u003cbr\u003e- `deadline DESCRIPTION /by DATE TIME`\u003cbr\u003eExample: deadline assignment /by 02/10/2020 2359\u003cbr\u003e\u003cbr\u003e- `event DESCRIPTION /at DATE TIME`\u003cbr\u003eExample: event party /at 27/10/2020 1900 "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "List tasks    | `list`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Mark as done  | `done INDEX`\u003cbr\u003eexample: done 1"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Delete a task | `delete INDEX`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Find tasks    | `find KEYWORD`\u003cbr\u003eexample: find CS2113T "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "Exit          | `bye`   "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 112,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.command.Execution;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.ui.TextUI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void main (String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        Storage.loadTasks();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        TextUI.printWelcomeMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        Execution.executeCommands();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        TextUI.printGoodbyeMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        Storage.saveTasks();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 14,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.ErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " * An enumeration for commands and methods dealing with commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    ERROR;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static Command commandType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Get input command from the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return command that user input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String getCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.print(\"!man: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        while (inputLine.trim().isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printNullCommandErrorMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.print(\"!man: \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            getCommandType(inputLine);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printCommandTypeErrorMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return inputLine;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Get command type of the command"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Including: list, bye, deadline, event, done, delete, find, todo"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command the line that the user input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws DukeException when the command doesn\u0027t fall into any type"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void getCommandType (String command) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] slicedInput \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        switch (slicedInput[0].toLowerCase().trim()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.LIST;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.BYE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.TODO;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.DEADLINE;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.EVENT;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.DONE;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.FIND;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.DELETE;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            commandType \u003d Command.ERROR;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 89
    }
  },
  {
    "path": "src/main/java/duke/command/Execution.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Execution {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Continuously get commands from the user and execute them"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void executeCommands () {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        command \u003d Command.getCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        while (Command.commandType !\u003d Command.BYE) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            switch (Command.commandType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                TaskList.printTaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                TaskList.setTaskAsDone(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                TaskList.addTodoTaskFromInput(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                TaskList.addDeadlineTaskFromInput(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                TaskList.addEventTaskFromInput(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                TaskList.printFoundTask(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                TaskList.deleteTask(command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            command \u003d Command.getCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 44
    }
  },
  {
    "path": "src/main/java/duke/constants/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String INPUT_DATE_FORMAT \u003d \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String OUTPUT_DATE_FORMAT \u003d \"MMM dd yyyy\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String OUTPUT_TIME_FORMAT \u003d \"hh:mm a\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String TICK_ICON \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String CROSS_ICON \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String LINE_DIVIDER \u003d \"|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String BOT_INVALID_COMMAND \u003d \"!bot: invalid command: \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String SAMPLE_DEADLINE_COMMAND \u003d \"sample: deadline deadlineDescription /by DD/MM/YYYY HHMM\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String SAMPLE_EVENT_COMMAND \u003d \"sample: event eventDescription /at DD/MM/YYYY HHMM\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String SAMPLE_TODO_COMMAND \u003d \"sample: todo todoDescription\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String SAMPLE_FIND_COMMAND \u003d \"sample: find grass\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"commands: todo, event, deadline, done, list, find, delete, bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String NULL_COMMAND_ERROR \u003d \"!bot: command cannot be empty! Please try another command!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String INVALID_TASK_NUMBER_ERROR \u003d \"Task number is not valid\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String TASK_NUMBER_FORMAT_ERROR \u003d \"Task number should be an integer\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String GREETING_MESSAGE \u003d \"!bot:\\nHello! I\u0027m !bot\\nWhat are your orders?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String GOODBYE_MESSAGE \u003d \"!bot: ~~Dead is like a wind, always by my side~~\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String MARK_AS_DONE_MESSAGE \u003d \"!bot: Nice! I\u0027ve mark this task as done:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String REMOVE_TASK_MESSAGE \u003d \"!bot: Noted. I\u0027ve removed this tasks\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String BOT_INVALID_INPUT \u003d \"!bot: invalid input\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String CANNOT_WRITE_TO_FILE \u003d \"!bot: CANNOT WRITE TO FILE\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String ERROR \u003d \"!bot: ERROR\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String CREATE_DIRECTORY_MESSAGE \u003d \"!bot: A directory has just been created: data\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String CREATE_FILE_MESSAGE \u003d \"!bot: initialize saving file...\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String PARSE_DATETIME_ERROR_MESSAGE \u003d \"!bot: unable to parse date or time\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String DATETIME_FORMAT_ERROR_MESSAGE \u003d \"!bot: date/time format is invalid\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String NO_TASK_MESSAGE \u003d \"There is no task in the list for now.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String NO_TASK_FOUND \u003d \"!bot: No matching task found in your list\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String ONE_TASK_FOUND \u003d \"!bot: There is one matching task in your list\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 33
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/ErrorMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class ErrorMessage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printDeadlineSyntaxCommandMessage(String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.BOT_INVALID_COMMAND + command);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.SAMPLE_DEADLINE_COMMAND);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printEventSyntaxCommandMessage(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.BOT_INVALID_COMMAND + command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.SAMPLE_EVENT_COMMAND);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printTodoSyntaxCommandMessage(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.BOT_INVALID_COMMAND + command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.SAMPLE_TODO_COMMAND);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printFindSyntaxCommandMessage(String command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.BOT_INVALID_COMMAND + command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.SAMPLE_FIND_COMMAND);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printInvalidInputMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.BOT_INVALID_INPUT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printDateTimeFormatErrorMessage() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.DATETIME_FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printCommandTypeErrorMessage() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.BOT_INVALID_COMMAND);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.COMMAND_LIST);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printNullCommandErrorMessage() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.NULL_COMMAND_ERROR);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printOutOfBoundsErrorMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.INVALID_TASK_NUMBER_ERROR);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printNumberFormatErrorMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.TASK_NUMBER_FORMAT_ERROR);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 73
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.ErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Slice the command to get date and time of Deadline and Event tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command Command of deadline and event to be sliced"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param delimiter /at for Event task, /by for Deadline task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return date and time of Deadline or Event task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws DukeException When the command is poorly constructed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String getDeadlineAndEventDateAndTime(String command, String delimiter) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] descriptions \u003d command.split(delimiter, 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (descriptions.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (descriptions[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return descriptions[1].trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Get date for Deadline and Event tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param dateAndTime String contains date and time"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return LocalDate of the date"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws DukeException When command is poorly constructed"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws DateTimeParseException when string of date cannot be parsed to LocalDate type"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static LocalDate getDeadlineAndEventDate(String dateAndTime) throws DukeException, DateTimeParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] str \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (str.length !\u003d 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return LocalDate.parse(str[0], DateTimeFormatter.ofPattern(Constants.INPUT_DATE_FORMAT));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Get time for Deadline and Event tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param dateAndTime String contains date and time"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return LocalTime of time in hour:minute"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws DukeException When the command is poorly constructed"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws StringIndexOutOfBoundsException When date or time is missing"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static LocalTime getDeadlineAndEventTime(String dateAndTime) throws DukeException, StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] str \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (str.length !\u003d 2) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int time \u003d Integer.parseInt(str[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (time \u003c 0 || time \u003e 2359) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printNumberFormatErrorMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String hour \u003d str[1].substring(0, 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String minute \u003d str[1].substring(2, 4);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String time \u003d hour + \":\" + minute;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return LocalTime.parse(time);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Slice the command to get description of Deadline and Event tasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command Command of deadline and event to be sliced"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param delimiter /at for Event task, /by for Deadline task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return description of Deadline or Event task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws DukeException When description is missing or command is poorly constructed"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String getDeadlineAndEventDescription (String command, String delimiter) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] words \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (words.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (words[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (!words[1].trim().contains(delimiter)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String description \u003d words[1].split(delimiter, 2)[0].trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Slice the command to get a Todo task description"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command command to be sliced"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return String illustrate to-do description"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws DukeException When command is poorly constructed"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static String getTodoAndFindDescription(String command) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String[] slicedCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (slicedCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (slicedCommand[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return slicedCommand[1].trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 121
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.ErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Create the path when the path is missing"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Load the data from file if file is already created"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void loadTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        File directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (directory.mkdir()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.CREATE_DIRECTORY_MESSAGE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(\"!bot: saving directory: \" + FILE_PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                readDataFromFile(s);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                ErrorMessage.printOutOfBoundsErrorMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(Constants.PARSE_DATETIME_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.CREATE_FILE_MESSAGE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Take in the data from a storage file line by line"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Proceed data and put them into the list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param s Global Scanner"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws IndexOutOfBoundsException On error data in file"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void readDataFromFile (Scanner s) throws IndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String[] readings \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            for (int i \u003d 0; i \u003c readings.length; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                readings[i] \u003d readings[i].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            switch(readings[0]) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                TaskList.writeTodoTaskToList(readings[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    LocalDate deadlineDate \u003d Parser.getDeadlineAndEventDate(readings[3]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    LocalTime deadlineTime \u003d Parser.getDeadlineAndEventTime(readings[3]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    TaskList.writeDeadlineTaskToList(readings[2], deadlineDate, deadlineTime);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    ErrorMessage.printInvalidInputMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    LocalDate eventDate \u003d Parser.getDeadlineAndEventDate(readings[3]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    LocalTime eventTime \u003d Parser.getDeadlineAndEventTime(readings[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    TaskList.writeEventTaskToList(readings[2], eventDate, eventTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    ErrorMessage.printInvalidInputMessage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (readings[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                TaskList.tasks.get(TaskList.getNumberOfTasks() - 1).setDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Construct a string to be written in storage file when the user stops the program"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void saveTasks() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        for (Task t : TaskList.tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            if (t instanceof Todo) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                textToAdd \u003d textToAdd.concat(\"T | \" + t.isDone() + \" | \" + t.getDescription()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                textToAdd \u003d textToAdd.concat(\"D | \" + t.isDone() + \" | \" + t.getDescription()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + \" | \" + ((Deadline) t).getTime() +  System.lineSeparator());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                textToAdd \u003d textToAdd.concat(\"E | \" + t.isDone() + \" | \" + t.getDescription()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                        + \" | \" + ((Event) t).getTime() + System.lineSeparator());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.println(Constants.ERROR);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            writeToFile(textToAdd);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.CANNOT_WRITE_TO_FILE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Overwrite data in storage file by the string prepared by {@link package.storage#saveTasks()}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param textToWrite String to overwrite the storage file"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @throws IOException When file cannot be modified"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void writeToFile (String textToWrite) throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        fw.write(textToWrite);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 140
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Construct an Deadline task inheriting from Task class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param description Deadline description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param date Deadline date"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param by Deadline time"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Deadline (String description, LocalDate date, LocalTime by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.time \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String time \u003d this.time.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(Constants.INPUT_DATE_FORMAT)) +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                \" \" + time.substring(0, 2) + time.substring(3);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Override {@link package.task#toString()}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return task type, done status, description and time"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(Constants.OUTPUT_DATE_FORMAT)) + \" \" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                time.format(DateTimeFormatter.ofPattern(Constants.OUTPUT_TIME_FORMAT)) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Construct an Event task inheriting from Task class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param description Event description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param date Event date"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param eventTime Event time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime eventTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.time \u003d eventTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        String time \u003d this.time.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(Constants.INPUT_DATE_FORMAT))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                + \" \" + time.substring(0, 2) + time.substring(3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Override {@link package.task#toString()}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return task type, done status, description and time"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(Constants.OUTPUT_DATE_FORMAT)) + \" \" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                time.format(DateTimeFormatter.ofPattern(Constants.OUTPUT_TIME_FORMAT)) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Construct a new Task object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * By default, done status is set to false"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return (this.isDone ? Constants.TICK_ICON : Constants.CROSS_ICON);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Override toString method of Object class"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return status icon and task description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 47
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.exception.ErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.ui.TextUI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Returns number of tasks in the user\u0027s list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return number of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static int getNumberOfTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Add a new event task from user\u0027s command to the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command should be in the structure: event description /at YYYY-MM-DD HHMM"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void addEventTaskFromInput(String command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String description \u003d Parser.getDeadlineAndEventDescription(command, \"/at\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String atTime \u003d Parser.getDeadlineAndEventDateAndTime(command, \"/at\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LocalDate date \u003d Parser.getDeadlineAndEventDate(atTime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LocalTime time \u003d Parser.getDeadlineAndEventTime(atTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            writeEventTaskToList(description, date, time);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            TextUI.printAddMessage(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printEventSyntaxCommandMessage(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printDateTimeFormatErrorMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Add a new deadline task from user\u0027s command to the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command should be in the structure: deadline description /by YYYY-MM-DD HHMM"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void addDeadlineTaskFromInput(String command) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String description \u003d Parser.getDeadlineAndEventDescription(command, \"/by\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String byTime \u003d Parser.getDeadlineAndEventDateAndTime(command, \"/by\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LocalDate date \u003d Parser.getDeadlineAndEventDate(byTime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            LocalTime time \u003d Parser.getDeadlineAndEventTime(byTime);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            writeDeadlineTaskToList(description, date, time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            TextUI.printAddMessage(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printDeadlineSyntaxCommandMessage(command);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printDateTimeFormatErrorMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Add a new to-do task from user\u0027s command to the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command should be in the structure: todo description"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void addTodoTaskFromInput(String command) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String description \u003d Parser.getTodoAndFindDescription(command);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            writeTodoTaskToList(description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            TextUI.printAddMessage(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printTodoSyntaxCommandMessage(command);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Append the tasks list with a new Deadline tasks"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param description Deadline title"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param date Deadline date"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param time Deadline time"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void writeDeadlineTaskToList(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        Task t \u003d new Deadline(description, date, time);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void writeEventTaskToList(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        Task t \u003d new Event(description, date, time);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Append the tasks list with a new Todo tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param description to-do description"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void writeTodoTaskToList(String description) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        Task t \u003d new Todo(description);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Delete a task at a specific position"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command \"delete 1\" deletes the first task in the list"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void deleteTask(String command) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(command.substring(7)) - 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            Task t \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            TextUI.printDeleteMessage(t);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printNumberFormatErrorMessage();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printOutOfBoundsErrorMessage();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Set a task as completed at a specific position"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param command \"done 1\" sets the first task in the list  as done"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void setTaskAsDone(String command) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(command.substring(5)) - 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            tasks.get(taskNumber).setDone();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            TextUI.printSetTaskDoneMessage(tasks.get(taskNumber));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printNumberFormatErrorMessage();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (NullPointerException | ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printOutOfBoundsErrorMessage();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Print all the tasks in the list"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Print a notification if there is no task in the list"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printTaskList() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int taskCount \u003d tasks.size();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot:\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.NO_TASK_MESSAGE);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        for (int i \u003d 1; i \u003c taskCount + 1; i \u003d i + 1) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.printf(\"%d. %s\\n\", i, tasks.get(i-1).toString());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printFoundTask(String command) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            String word \u003d Parser.getTodoAndFindDescription(command);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ArrayList\u003cTask\u003e filteredTaskList \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    .filter((s) -\u003e s.getDescription().contains(word))"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            printNumberOfMatchingTasks(filteredTaskList.size());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d filteredTaskList.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                System.out.printf(\" %d. %s\\n\", i, filteredTaskList.get(i-1).toString());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            ErrorMessage.printFindSyntaxCommandMessage(command);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static void printNumberOfMatchingTasks(int size) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.NO_TASK_FOUND);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.ONE_TASK_FOUND);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "            System.out.printf(\"!bot: There are %d matching tasks in your list\\n\", size);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 195
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Construct a new Todo object inheriting from Task object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param description To-do description"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Override toString method from Task class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return task icon and description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 23
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.constants.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "public class TextUI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.GREETING_MESSAGE);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printSetTaskDoneMessage(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.MARK_AS_DONE_MESSAGE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.printf(\" %s\\n\", task.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printAddMessage(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int taskCount \u003d TaskList.getNumberOfTasks();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"!bot:\\nAdded: \" + task.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(getTaskCountMessage(taskCount));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    public static void printDeleteMessage(Task t) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        int taskCount \u003d TaskList.getNumberOfTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.REMOVE_TASK_MESSAGE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(\"  \" + t.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(getTaskCountMessage(taskCount));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        System.out.println(Constants.LINE_DIVIDER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * Get string stating current number of task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @param taskCount number of task count"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     * @return String referring to total number of tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    private static String getTaskCountMessage(int taskCount) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "        return (taskCount \u003c\u003d 1) ?"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                \"You now have \" + taskCount + \" task in the list\" :"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "                \"You now have \" + taskCount + \" tasks in the list\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 57
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "todo iP"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "deadline tP /by before tutorial at Wed 11pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "event CS2113T project meeting /at Wed 4pm on Zoom"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hungvo0603"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hungvo0603": 2,
      "-": 19
    }
  }
]
