[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Dukeis a desktop app for people to manage their tasks, optimized for use via Command Line Interface (CLI)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "## Quick Start : Setting up in Intellij"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "1. Install Java 11 on your computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "2. Download the latest version of Duke,jar and open it with java -jar Duke.jar."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "3. If you want to use existing data, create a “data” directory and copy the data file to it, name the data file as “data.txt."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "4. If the setup was done correctly, you should see something like the logo below:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "4.Use the help command to see the available commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "5.Refer to the Features section below for details of each command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "````"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Notes:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Words in capital letters are parameters to be supplied by users."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "````"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Viewing help: `help`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Show all the possible commands."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Adding a \"todo\" task: `todo`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Adds a task to the list of task, involving only a description"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `todo DESCRIPTION` "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Adding a \"Deadline\" task: `deadline` "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Adds a deadline task to the list, involving a description and time input"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `deadline DESCRIPTION /DATE TIME`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Date format is DD-MM-YY. "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Time format is in 24-hrs, written as a single timing. "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "`deadline`IP /20-09-20 1800"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Adding a \"event\" task: `event`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Adds an event task to the list, involving a description and time input"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `event DESCRIPTION /DATE TIME`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Date format is DD-MM-YY. "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Time format is in 24-hrs, can be a time interval or a single timing."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Time interval is separated by “-”."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "`add` Presentation /10-10-20 t/1200-1400"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Deleting a task: `delete`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Deletes a specified task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Delete 2nd task in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Set a task as done: `done` "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Sets a chosen tasks as done."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "display"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Marks 2nd task in list as done"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Searching for tasks: `search`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Search through the task list with given keyword(s) and display relevant tasks. The keyword can be multiple words "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `search KEYWORD`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "search homework"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Find task(s) with a description that contains homework"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Exiting the program: `bye`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Exits the app."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 95,
      "-": 14
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Dukeis a desktop app for people to manage their tasks, optimized for use via Command Line Interface (CLI)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "## Quick Start : Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "1. Install Java 11 on your computer."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "2. Download the latest version of Duke,jar and open it with java -jar Duke.jar."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "3. If you want to use existing data, create a “data” directory and copy the data file to it, name the data file as “data.txt."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "4. If the setup was done correctly, you should see something like the logo below:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "4.Use the help command to see the available commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "5.Refer to the Features section below for details of each command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "````"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Notes:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Words in capital letters are parameters to be supplied by users."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "````"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "### Viewing help: `help`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Show all the possible commands."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "### Adding a \"todo\" task: `todo`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Adds a task to the list of task, involving only a description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `todo DESCRIPTION` "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "### Adding a \"Deadline\" task: `deadline` "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Adds a deadline task to the list, involving a description and time input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `deadline DESCRIPTION /DATE TIME`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Date format is DD-MM-YY. "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Time format is in 24-hrs, written as a single timing. "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "`deadline`IP /20-09-20 1800"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "### Adding a \"event\" task: `event`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Adds an event task to the list, involving a description and time input"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `event DESCRIPTION /DATE TIME`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Date format is DD-MM-YY. "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Time format is in 24-hrs, can be a time interval or a single timing."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Time interval is separated by “-”."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "`add` Presentation /10-10-20 t/1200-1400"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Deletes a specified task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Delete 2nd task in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "### Set a task as done: `done` "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Sets a chosen tasks as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "display"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Marks 2nd task in list as done"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "### Searching for tasks: `search`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Search through the task list with given keyword(s) and display relevant tasks. The keyword can be multiple words "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `search KEYWORD`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "search homework"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Find task(s) with a description that contains homework"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Exits the app."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 93,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.ByeCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.EmptyInputException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.NoTimeInputException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.WrongDeadlineDateFormatException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.WrongEventDateFormatException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static TaskList list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static boolean isActive \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void main(String[] args) throws IOException,DukeException{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Ui.printIntro();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Storage storage \u003d new Storage(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        list \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        while(isActive) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Command command \u003d Parser.parseCommand(in.nextLine());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                command.execute(list);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                if (command instanceof ByeCommand){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                   isActive \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Ui.printUnknownCommandMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (EmptyInputException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Ui.printEmptyInputMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Ui.printIndexOutOfBoundsMessage(list);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (NoTimeInputException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Ui.printNoTimeInputMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (WrongDeadlineDateFormatException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Ui.printWrongDeadlineDateFormatMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (WrongEventDateFormatException e){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Ui.printEventDateFormatMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 47,
      "-": 3
    }
  },
  {
    "path": "src/main/java/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * The ByeCommand exits the program when executed, and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * saves the list data before the exit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void execute(TaskList list) throws java.io.IOException{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Ui.printOutro();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Storage.saveListData(list);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 17
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * the command class consists of the different possible commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * that the user can input, and excutes the given command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public abstract void execute(TaskList tasks) throws DukeException,java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 14
    }
  },
  {
    "path": "src/main/java/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.EmptyInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.NoTimeInputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This class creates a new deadline task when executed. Data is"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * saved after the task is added."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public DeadlineCommand(String text) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        description \u003d text;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void execute(TaskList list) throws DukeException, java.io.IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else if (!description.contains(\"/\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new NoTimeInputException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            String[] temp \u003d description.split(\"/\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            list.tasklist.add(new Deadline(temp[0], temp[1]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            Ui.printTaskAddedMessage(list);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            Storage.saveListData(list);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 36
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.EmptyInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This class deletes a selected task, and saves the data after"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * its operation."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        private final String text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        public DeleteCommand(String text){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            this.text \u003d text;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        public void execute(TaskList list) throws DukeException,java.io.IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            if(text.isBlank()){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                throw new EmptyInputException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                int index \u003d Integer.parseInt(text);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Ui.printTaskDeletedMessage(list,index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                list.tasklist.remove(index - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            Storage.saveListData(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 32
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.EmptyInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This class marks a selected task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    private final String text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public DoneCommand(String text){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void execute(TaskList list) throws DukeException , java.io.IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if(text.isBlank()){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            int index \u003d Integer.parseInt(text);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            list.tasklist.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            Ui.printTaskDoneMessage(list,index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Storage.saveListData(list);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 29
    }
  },
  {
    "path": "src/main/java/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.EmptyInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.NoTimeInputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This class creates a new event task when executed. Data is"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * saved after the task is added."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        private final String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        public EventCommand(String text){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            description \u003d text;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        public void execute(TaskList list) throws DukeException,java.io.IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                throw new EmptyInputException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } else if(!description.contains(\"/\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                throw new NoTimeInputException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                String[] temp \u003d description.split(\"/\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                list.tasklist.add(new Event(temp[0], temp[1]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Ui.printTaskAddedMessage(list);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Storage.saveListData(list);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 35
    }
  },
  {
    "path": "src/main/java/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This class prints out a help message when executed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void execute(TaskList list){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Ui.printHelpMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 14
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This class prints out the list of tasks input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * by the user at the time of the command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void execute(TaskList list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        for (int j \u003d 0; j \u003c list.tasklist.size(); j++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(j + 1 + \".\" + list.tasklist.get(j).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 20
    }
  },
  {
    "path": "src/main/java/commands/SearchCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.EmptyInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This class searches through the list of tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * for a specific keyword input by the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public final String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public SearchCommand(String text){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        keyword \u003d text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void execute(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if(keyword.isBlank()){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"Here are the tasks with the key word: \" + keyword);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            for(Task t : list.tasklist) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                if(t.getDescription().contains(keyword)){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    System.out.println(count + \".\" + t.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 35
    }
  },
  {
    "path": "src/main/java/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.EmptyInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This class creates a new event task when executed. Data is"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * saved after the task is added."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public TodoCommand(String text){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        description \u003d text;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void execute(TaskList list) throws DukeException, java.io.IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            list.tasklist.add(new ToDo(description));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            Ui.printTaskAddedMessage(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            Storage.saveListData(list);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 33
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * A superclass of all possible exceptions found during"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * operations in the Duke program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    //Empty"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 10
    }
  },
  {
    "path": "src/main/java/exception/EmptyInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This exception occurs when a user command is called"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * without any input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class EmptyInputException extends DukeException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    //Empty"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 10
    }
  },
  {
    "path": "src/main/java/exception/NoTimeInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This exception occurs when a deadline or event Task is added"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * without a time input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class NoTimeInputException extends DukeException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 8
    }
  },
  {
    "path": "src/main/java/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This exception occurs when the user command given is"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * not one of the possible commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    //Empty"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 12
    }
  },
  {
    "path": "src/main/java/exception/WrongDeadlineDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This exception occurs when the user inputs the wrong"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * format for the date time and inputting a deadline task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class WrongDeadlineDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 10
    }
  },
  {
    "path": "src/main/java/exception/WrongEventDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This exception occurs when the user inputs the wrong"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * format for the date time and inputting an event task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class WrongEventDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 10
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.DeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.SearchCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.EventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * Deals with the user input command by checking if it"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * corresponds to available commands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * Splits up the given user input into the command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * and the task description and calls the method"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * depending on the command input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @returns an object of type command corresponding to the input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static Command parseCommand(String userInput) throws DukeException{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        String[] words \u003d userInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        final String command \u003d words[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        final String text \u003d userInput.replaceFirst(command, \"\").trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                return new DoneCommand(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                return new DeleteCommand(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                return new TodoCommand(text);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                return new DeadlineCommand(text);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                return new EventCommand(text);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"search\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                return new SearchCommand(text);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                throw new UnknownCommandException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 60
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * Deals with storage related operations such as uploading tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * from the save file and saving task into the save file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    private final File filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            this.filePath \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * Loads the data from save file \"Duke.txt\" into the an ArrayList object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @return the ArrayList object with the save file data added"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @throws java.io.IOException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws java.io.IOException, DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            if(!filePath.exists()){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                createDirectory();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                filePath.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            Scanner s \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                String[] input \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    case \"[T] \":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        tasklist.add(new ToDo(input[2]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    case \"[D] \":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        tasklist.add(new Deadline(input[2], input[3]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    case \"[E] \":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        tasklist.add(new Event(input[2], input[3]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                if (input[1].equals(\" [V] \")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    tasklist.get(count - 1).markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    private static boolean createDirectory() throws java.io.IOException{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        File directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        boolean isDirectory \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if(!directory.exists()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            isDirectory \u003d directory.mkdir();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return isDirectory;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * Writes the tasks inside the TaskList into the save file \"Duke.txt\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @throws java.io.IOException"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void saveListData(TaskList listData) throws java.io.IOException{"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        for(Task t : listData.tasklist){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            fw.write(t.taskCode() + \" | \" + t.getStatusIcon()+ \" | \" + t.getDescription() + \" | \" + t.getDate() + \" \" +  t.getTime() + System.lineSeparator());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 84
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.WrongDeadlineDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * Deadline is a type of task that involves a time input in addition to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * the string description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public Deadline(String description, String dateTimeInput)throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if(!dateTimeInput.contains(\"-\")){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new WrongDeadlineDateFormatException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            String[] temp \u003d dateTimeInput.trim().split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            date \u003d temp[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            time \u003d temp[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static LocalDate stringToDate(String stringDate) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            return LocalDate.parse(stringDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * The string input of the time will converted to a integer"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * and split into time and hour to be converted to an object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * of type LocalTime"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @param stringTime"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @return the time input as LocalTime"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static LocalTime stringToTime(String stringTime){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        int hour;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        int mins;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        String properString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if(stringTime.contains(\":\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            properString \u003d stringTime.replace(\":\",\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            properString \u003d stringTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        int time \u003d Integer.parseInt(properString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        hour \u003d time / 100;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        mins \u003d time % 100;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return LocalTime.of(hour,mins);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     *Returns the taskCode, description, date and time of the task combined into a string"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     *@param none"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     *@return String"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return taskCode() + super.toString() + \" (by: \" + stringToDate(date).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" + stringToTime(time).format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String taskCode(){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 80
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import exception.WrongEventDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * Event is a type of task that includes a time input in addition to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * the string description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected String firstTimeFrame;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected String secondTimeFrame;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * The constructor for the Event class, the time string input is"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * split from a particular time frame to two different time inputs"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * to be used later for conversion into a different time format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @param dateTimeInput"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public Event(String description, String dateTimeInput) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if(!dateTimeInput.contains(\"-\")){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new WrongEventDateFormatException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            String[] temp \u003d dateTimeInput.trim().split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            date \u003d temp[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            String time \u003d temp[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            if(!time.contains(\"-\")){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                throw new WrongEventDateFormatException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                String[] timeFrame \u003d time.trim().split(\"-\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                firstTimeFrame \u003d timeFrame[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                secondTimeFrame \u003d timeFrame[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static LocalDate stringToDate(String stringDate) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            return LocalDate.parse(stringDate);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * The string input of the time will converted to a integer"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * and split into time and hour to be converted to an object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * of type LocalTime."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @param stringTime"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * @return the time input as LocalTime"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static LocalTime stringToTime(String stringTime){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        int hour;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        int mins;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        String properString;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if(stringTime.contains(\":\")){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            properString \u003d stringTime.replaceAll(\":\",\"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            properString \u003d stringTime;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        int time \u003d Integer.parseInt(properString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        hour \u003d time / 100;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        mins \u003d time % 100;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return LocalTime.of(hour,mins);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return firstTimeFrame + \"-\" + secondTimeFrame;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     *Returns the taskCode, description, date and time of the task combined into a string."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * The date and time is reformatted into a different format. e.g from 2020-01-01 1800-2000"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     * to 1 Jan 2020 6:00PM - 8:00PM."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     *@param none"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     *@return String"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return taskCode() + super.toString() + \" (by: \" + stringToDate(date).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                \" \" + stringToTime(firstTimeFrame).format(DateTimeFormatter.ofPattern(\"hh:mm a\")) +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                \"-\" + stringToTime(secondTimeFrame).format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String taskCode(){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 99
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * The Task class represents the different type of tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * the user can input into the Duke program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String taskCode(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        //returns nothing here cause there is no time component"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return (isDone ? \"[V]\" : \"[X]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return getStatusIcon() +  description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 49
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * This class creates an ArrayList of type Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * to store the input tasks from the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public ArrayList\u003cTask\u003e tasklist;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        tasklist \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 22
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * A basic type of Task the has a string description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     *Returns the taskCode and description of the task combined into a string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     *@param none"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     *@return String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return taskCode() + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String taskCode(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 30
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " * User Interface class that deals with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printIntro(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printOutro(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printUnknownCommandMessage(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"type \\\"help\\\" for a list of possible commands\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printEmptyInputMessage(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"OOPS!!! The description of a todo/deadline/event cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printIndexOutOfBoundsMessage(TaskList list){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"OOPS!!! You only have \" + list.tasklist.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printInBetweenHorizontalLines(String message){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printNoTimeInputMessage(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"OOPS!!! deadline/event commands require a time input.\" + System.lineSeparator() + \"e.g [task] /[time]\" );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printWrongDeadlineDateFormatMessage(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"OOPS!!! The date was written in an incorrect Format.\" + System.lineSeparator() + \"Please follow the format given below: \" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.lineSeparator() + \"/YYYY-MM-DD HHmm(24 hour format)\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printEventDateFormatMessage(){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"OOPS!!! The date was written in an incorrect Format.\" + System.lineSeparator() + \"Please follow the format given below: \" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.lineSeparator() + \"/YYYY-MM-DD HHmm-HHmm(24 hour format)\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printTaskAddedMessage(TaskList list){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + list.tasklist.get(list.tasklist.size() - 1).toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Now you have \" + list.tasklist.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printTaskDeletedMessage(TaskList list, int index){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\" + System.lineSeparator() + list.tasklist.get(index - 1).toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"You now have \" + (list.tasklist.size()-1) + \" tasks in your list\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printTaskDoneMessage(TaskList list, int index){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        list.tasklist.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this as done:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(list.tasklist.get(index - 1).toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printHelpMessage(){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Here is the list of possible commands:\"+ System.lineSeparator() + \"todo\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                \"deadline\" + System.lineSeparator() + \"event\" + System.lineSeparator() + \"done\" + System.lineSeparator() + \"delete\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 97
    }
  }
]
