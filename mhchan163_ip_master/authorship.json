[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return taskCode() + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String taskCode(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static TaskList list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static boolean isActive \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void main(String[] args) throws IOException,DukeException{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Ui.printIntro();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Storage storage \u003d new Storage(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        list \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        while(isActive) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Parser commandChecker \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                commandChecker.parseCommand(in.nextLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"type \\\"help\\\" for a list of possible commands\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (EmptyInputException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The description of a todo/deadline/event cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"OOPS!!! You only have \" + list.tasklist.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            } catch (NoTimeInputException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"OOPS!!! deadline/event commands require a time input.\" + System.lineSeparator() + \"e.g [task] /[time]\" );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Ui.printOutro();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        storage.saveListData();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 40,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    //Empty"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 4
    }
  },
  {
    "path": "src/main/java/EmptyInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class EmptyInputException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    //Empty"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return taskCode() + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String taskCode(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 22
    }
  },
  {
    "path": "src/main/java/FileReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class FileReader {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    private static void main(String[] args){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        File f \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 8
    }
  },
  {
    "path": "src/main/java/NoTimeInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class NoTimeInputException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 2
    }
  },
  {
    "path": "src/main/java/OutofBoundsIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class OutofBoundsIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 2
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void parseCommand(String userInput) throws DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        String[] words \u003d userInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        final String command \u003d words[0];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        final String text \u003d userInput.replaceFirst(command, \"\").trim();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Duke.list.ByeCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Duke.list.ListCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Duke.list.DoneCommand(text);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Duke.list.DeleteCommand(text);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Duke.list.HelpCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Duke.list.ToDoCommand(text);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Duke.list.DeadlineCommand(text);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                Duke.list.EventCommand(text);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                throw new UnknownCommandException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 39
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    private final File filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.filePath \u003d new File(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws java.io.IOException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            Scanner s \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                String[] input \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    case \"[T] \":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        tasklist.add(new ToDo(input[2]));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    case \"[D] \":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        tasklist.add(new Deadline(input[2], input[3]));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    case \"[E] \":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        tasklist.add(new Event(input[2], input[3]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                if (input[1].equals(\" [V] \")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                    tasklist.get(count - 1).markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void saveListData() throws java.io.IOException{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        for(Task t : Duke.list.tasklist){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            fw.write(t.taskCode() + \" | \" + t.getStatusIcon()+ \" | \" + t.description + \" | \" + t.getTime() + System.lineSeparator());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 49
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String taskCode(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        //returns nothing here cause there is no time component"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return (isDone ? \"[V]\" : \"[X]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return getStatusIcon() +  description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mhchan163": 34
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public ArrayList\u003cTask\u003e tasklist;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        tasklist \u003d taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void ByeCommand(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        Duke.isActive \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void ListCommand(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        for (int j \u003d 0; j \u003c tasklist.size(); j++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(j + 1 + \".\" + tasklist.get(j).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void DoneCommand(String text) throws DukeException{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if(text.isBlank()){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            int index \u003d Integer.parseInt(text);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            tasklist.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this as done:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(tasklist.get(index - 1).toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void DeleteCommand(String text) throws DukeException{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if (text.isBlank()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            int index \u003d Integer.parseInt(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\" + System.lineSeparator() + tasklist.get(index - 1).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            tasklist.remove(index - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void HelpCommand(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Here is the list of possible commands:\"+ System.lineSeparator() + \"todo\" + System.lineSeparator() + \"deadline\" + System.lineSeparator() + \"event\" + System.lineSeparator() + \"done\" + System.lineSeparator() + \"delete\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void ToDoCommand(String text) throws DukeException{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if (text.isBlank()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            tasklist.add(new ToDo(text));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + tasklist.get(tasklist.size()-1).toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"Now you have \" + tasklist.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void DeadlineCommand(String text) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if (text.isBlank()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else if(!text.contains(\"/\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new NoTimeInputException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            String[] temp \u003d text.split(\"/\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            tasklist.add(new Deadline(temp[0], temp[1]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + tasklist.get(tasklist.size() - 1).toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"Now you have \" + tasklist.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public void EventCommand(String text) throws DukeException{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        if (text.isBlank()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else if(!text.contains(\"/\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            throw new NoTimeInputException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            String[] temp \u003d text.split(\"/\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            tasklist.add(new Event(temp[0], temp[1]));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + tasklist.get(tasklist.size() - 1).toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"Now you have \" + tasklist.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 97
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return taskCode() + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public String taskCode(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printIntro(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    public static void printOutro(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhchan163"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 23
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "    //Empty"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhchan163": 3
    }
  }
]
