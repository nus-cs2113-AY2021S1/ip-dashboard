[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "T | 1 | drink water"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "E | 1 | water plants | 12/03/2021"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "D | 0 | cs2113 project | 02/10/20202"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 3
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private String currentInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public AddCommand(String taskType, String description, String currentInput) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.currentInput \u003d currentInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        case INPUT_COMMAND_TODO:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            TaskList.createTodoTask(description, tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        case INPUT_COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            TaskList.errorCheckingDeadline(currentInput, description, tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        case INPUT_COMMAND_EVENT:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            TaskList.errorCheckingEvent(currentInput, description, tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 33
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 8
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private String currentInput;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public DeleteCommand(String currentInput) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.currentInput \u003d currentInput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        TaskList.errorCheckingDelete(currentInput, tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 16
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private String currentInput;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public DoneCommand(String currentInput) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.currentInput \u003d currentInput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        TaskList.errorCheckingTaskDone(currentInput, tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        storage.loadDataList(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        ui.printStartDukeMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            Command commandInput \u003d Parser.parse(ui.in.nextLine());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            commandInput.executeCommand(tasks, ui, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            storage.saveTaskList(tasks, FILE_PATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            isExit \u003d commandInput.isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            } catch (NullPointerException | StringIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                ui.printInvalidTaskInputErrorMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 34,
      "-": 4
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 9
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Ui.printListMessage(tasks);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 9
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String INPUT_COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static Command parse(String inputCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Command commandType \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        if (inputCommand.equals(INPUT_COMMAND_BYE)) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            commandType \u003d new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        } else if (inputCommand.equals(INPUT_COMMAND_LIST)) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            commandType \u003d new ListCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            commandType \u003d checkTask(inputCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static Command checkTask(String inputCommand) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Command commandType \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        String taskType \u003d inputCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        // Check user\u0027s input command - user might enter incorrect inputs which does not correspond to any of our function"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        if (inputCommand.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            taskDescription \u003d inputCommand.split(\" /\", 2)[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            taskDescription \u003d inputCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        case INPUT_COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        case INPUT_COMMAND_EVENT:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        case INPUT_COMMAND_TODO:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            commandType \u003d new AddCommand(taskType, taskDescription, inputCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        case INPUT_COMMAND_DONE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            commandType \u003d new DoneCommand(inputCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        case INPUT_COMMAND_DELETE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            commandType \u003d new DeleteCommand(inputCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 52
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.ToDo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String ERROR_MESSAGE_IOEXCEPTION \u003d \"IOException error has occurred\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String FILE_DIRECTORY \u003d \"data/\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        checkSpecificFolderExist();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            File dataListFile \u003d checkFileExists(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            System.out.println(ERROR_MESSAGE_IOEXCEPTION);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private void checkSpecificFolderExist() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        File folder \u003d new File(FILE_DIRECTORY);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private File checkFileExists(String dataListFilePath) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        File dataListFile \u003d new File(dataListFilePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        if (!dataListFile.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            dataListFile.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return dataListFile;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void loadDataList(TaskList tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            File dataListFile \u003d checkFileExists(FILE_PATH);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            readDataList(dataListFile, tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            System.out.println(ERROR_MESSAGE_IOEXCEPTION);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private void readDataList(File dataListFile, TaskList tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(dataListFile);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            String currentLine \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            if (currentLine.isBlank()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            String taskType \u003d currentLine.split(\" \\\\| \")[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            String taskDescription \u003d currentLine.split(\" \\\\| \")[2];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            String isTaskDone \u003d currentLine.split(\" \\\\| \")[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                Task toDoTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                if (isTaskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                    toDoTask.taskDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                tasks.getTaskList().add(toDoTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                String deadlineBy \u003d currentLine.split(\" \\\\| \")[3];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                Task deadlineTask \u003d new Deadline(taskDescription, deadlineBy);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                if (isTaskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                    deadlineTask.taskDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                tasks.getTaskList().add(deadlineTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                String eventAt \u003d currentLine.split(\" \\\\| \")[3];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                Task eventTask \u003d new Events(taskDescription, eventAt);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                if (isTaskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                    eventTask.taskDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                tasks.getTaskList().add(eventTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                System.out.println(\"Undefined task type - should not happen\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void saveTaskList(TaskList tasks, String filePath) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            String taskDescription \u003d tasks.getTaskList().get(i).getTaskDescription();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            String taskType \u003d tasks.getTaskList().get(i).getTaskType();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            String isTaskDone;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            if (tasks.getTaskList().get(i).getTaskStatus()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                isTaskDone \u003d \"1\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                isTaskDone \u003d \"0\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            case \"ToDo\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                fw.write(\"T | \" + isTaskDone + \" | \" + taskDescription + System.lineSeparator());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            case \"Deadline\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                fw.write(\"D | \" + isTaskDone + \" | \" + taskDescription + \" | \" + tasks.getTaskList().get(i).getTimeline() + System.lineSeparator());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            case \"Events\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                fw.write(\"E | \" + isTaskDone + \" | \" + taskDescription + \" | \" + tasks.getTaskList().get(i).getTimeline() + System.lineSeparator());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                System.out.println(\"Undefined task type - should not happen\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 122
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.taskType \u003d \"Deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String getTimeline() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 28
    }
  },
  {
    "path": "src/main/java/Task/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 5
    }
  },
  {
    "path": "src/main/java/Task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.taskType \u003d \"Events\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String getTimeline() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 29
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void taskDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String getTimeline() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public boolean getTaskStatus() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 42
    }
  },
  {
    "path": "src/main/java/Task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        this.taskType \u003d \"ToDo\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 21
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.ToDo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void createTodoTask(String taskDescription, TaskList tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Task newToDoTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        tasks.getTaskList().add(newToDoTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Ui.printAddTaskMessage(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void errorCheckingDeadline(String currentInput, String taskDescription, TaskList tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            createDeadlineTask(currentInput, taskDescription, tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            Ui.printInvalidDeadlineErrorMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void createDeadlineTask(String currentInput, String taskDescription, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        if (!currentInput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        String deadlineBy \u003d currentInput.split(\"/by \")[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Task newDeadlineTask \u003d new Deadline(taskDescription, deadlineBy);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        tasks.getTaskList().add(newDeadlineTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Ui.printAddTaskMessage(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void errorCheckingEvent(String currentInput, String taskDescription, TaskList tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            createEventTask(currentInput, taskDescription, tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            Ui.printInvalidEventErrorMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void createEventTask(String currentInput, String taskDescription, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        if (!currentInput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        String eventAt \u003d currentInput.split(\"/at \")[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Task newEventTask \u003d new Events(taskDescription, eventAt);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        tasks.getTaskList().add(newEventTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Ui.printAddTaskMessage(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void errorCheckingDelete(String currentInput, TaskList tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            deleteTask(currentInput, tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            if (tasks.getTaskList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                Ui.printEmptyListErrorMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                Ui.printInvalidTaskNumberErrorMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void deleteTask(String currentInput, TaskList tasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        int itemIndex \u003d Integer.parseInt(currentInput.replaceAll(\"\\\\D+\",\"\")) - 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Ui.printDeleteTaskMessage(itemIndex, tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        tasks.getTaskList().remove(itemIndex);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void errorCheckingTaskDone(String currentInput, TaskList tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            taskMarkAsDone(currentInput, tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            if (tasks.getTaskList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                Ui.printEmptyListErrorMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                Ui.printInvalidTaskNumberErrorMessage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void taskMarkAsDone(String currentInput, TaskList tasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        int itemIndex \u003d Integer.parseInt(currentInput.replaceAll(\"\\\\D+\",\"\")) - 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        tasks.getTaskList().get(itemIndex).taskDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        Ui.printDoneTaskMessage(itemIndex, tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 98
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String MESSAGE_GREETINGS \u003d \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            \"     What can I do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String MESSAGE_SINGLE_LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String MESSAGE_GOODBYE \u003d \"     Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String MESSAGE_ADD_TASK \u003d \"     Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String MESSAGE_DONE_TASK \u003d \"     Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String MESSAGE_REMOVE_TASK \u003d \"     Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String MESSAGE_TASK_LIST \u003d \"     Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String ERROR_MESSAGE_EMPTY_LIST \u003d \"     Your list is empty!!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String ERROR_MESSAGE_INVALID_TASK_NO \u003d \"     Please input a valid task number!!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String ERROR_MESSAGE_INVALID_TASK_INPUT \u003d \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String ERROR_MESSAGE_INVALID_DEADLINE \u003d \"     Please enter deadline of task:)\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            \"     For example: deadline (task description) /by (task deadline)\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    private static final String ERROR_MESSAGE_INVALID_EVENT \u003d \"     Please enter date of event:)\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            \"     For example: event (task description) /at (date of event)\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Scanner in;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void printStartDukeMessage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_GREETINGS);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printAddTaskMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_ADD_TASK);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        //POTENTIAL PROBLEM//"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(\"       \" + tasks.getTaskList().get(tasks.getTaskList().size()-1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        printNoOfTaskForAddingFunction(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printNoOfTaskForAddingFunction(TaskList tasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(\"     Now you have \" + tasks.getTaskList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printNoOfTaskForDeleteFunction(TaskList tasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(\"     Now you have \" + (tasks.getTaskList().size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printDoneTaskMessage(int itemIndex, TaskList tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_DONE_TASK);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(\"       \" + tasks.getTaskList().get(itemIndex));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printDeleteTaskMessage(int itemIndex, TaskList tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_REMOVE_TASK);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(\"       \" + tasks.getTaskList().get(itemIndex));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        printNoOfTaskForDeleteFunction(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printListMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        if (tasks.getTaskList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            Ui.printEmptyListErrorMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            System.out.println(MESSAGE_TASK_LIST);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                if (tasks.getTaskList().get(i).getTaskType().equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                    System.out.println(\"     \" + (i + 1) + \".\" + tasks.getTaskList().get(i));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                } else if (tasks.getTaskList().get(i).getTaskType().equals(\"Events\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                    System.out.println(\"     \" + (i + 1) + \".\" + tasks.getTaskList().get(i));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                    System.out.println(\"     \" + (i + 1) + \".\" + tasks.getTaskList().get(i));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "            System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printEmptyListErrorMessage() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(ERROR_MESSAGE_EMPTY_LIST);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printInvalidTaskNumberErrorMessage() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(ERROR_MESSAGE_INVALID_TASK_NO);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public void printInvalidTaskInputErrorMessage() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(ERROR_MESSAGE_INVALID_TASK_INPUT);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printInvalidDeadlineErrorMessage() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(ERROR_MESSAGE_INVALID_DEADLINE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    public static void printInvalidEventErrorMessage() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(ERROR_MESSAGE_INVALID_EVENT);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "        System.out.println(MESSAGE_SINGLE_LINE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "samuellleow"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 133
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Task\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samuellleow"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java ../src/main/java/Task/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "samuellleow": 1,
      "-": 37
    }
  }
]
