[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Duke is a Personal Assistant Chatbot that helps you to keep track of various things. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Setting up Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "1. Download Duke file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "2. Go to `/ip/src/main/java`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "3. In command line key in:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "   javac duke/Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "   java duke.Duke   "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "## Usage "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### List"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Display all tasks in the list  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `list`  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Add a todo task to Duke  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `todo [DESCRIPTION]`  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Add a deadline to Duke  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `deadline [DESCRIPTION] /by [yyyy-mm-dd]`  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "deadline return  book /by 2020-10-01"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Add an event to Duke  "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `event [DESCRIPTION] /at [yyyy-mm-dd]`  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "event school activity /at 2020-10-01"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Mark a task as done  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `done [index]`  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Delete a task from duke  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `delete [index]`  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Find tasks that contains a certain keyword  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `find [keyword]`  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "find book"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Date"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Find tasks on a certain date  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `date [yyy-mm-dd]`  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "date 2020-09-23"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Sort"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Sort tasks according to their types  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `sort`  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "sort"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Sample Outcome:  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Here are your tasks:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Deadlines:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[D][✘]  b  (by: Mar 2 2002)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         2.[D][✘]  c  (by: Mar 4 2011)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         3.[D][✘]  d  (by: Nov 11 2009)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         4.[D][✘]  read book  (by: Jan 11 2020)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Events:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[E][✘]  a  (at: Feb 2 2000)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         2.[E][✘]  e  (at: Feb 28 1980)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Todos:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[T][✘]  borrow book "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Timeline"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Generates a timeline for deadlines and events  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `timeline`  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "timeline"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Sample Outcome:  "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Here is your timeline:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[E][✘]  e  (at: Feb 28 1980)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         2.[E][✘]  a  (at: Feb 2 2000)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         3.[D][✘]  b  (by: Mar 2 2002)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         4.[D][✘]  d  (by: Nov 11 2009)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         5.[D][✘]  c  (by: Mar 4 2011)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         6.[D][✘]  read book  (by: Jan 11 2020)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Here are your todos:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[T][✘]  borrow book "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Prints available commands  "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `help`  "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "help"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Sample Outcome:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        [List of commands available]"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        list: Display all tasks in the list."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        todo: Add a todo task."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: todo borrow book"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        deadline: Add a deadline."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: deadline return book /by Sunday"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        event: Add a event."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        done: Mark a task as done."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: done 2"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        find: Find tasks that contain the keyword"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: find book"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        date: Find tasks on a certain date"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: date 2020-09-23"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        timeline: Print tasks in time order"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: timeline"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        sort: Sort tasks according to their types"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: sort"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        bye: Exit the program."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: bye"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Bye"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Exits Duke"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `bye`  "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "bye"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 171,
      "-": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Duke is a Personal Assistant Chatbot that helps you to keep track of various things. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "---------------------------------------------------------"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### List"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Display all tasks in the list  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `list`  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Here are the tasks in your list:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[E][✘]  a  (at: Feb 2 2000)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         2.[D][✘]  b  (by: Mar 2 2002)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         3.[D][✘]  c  (by: Mar 4 2011)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         4.[D][✘]  d  (by: Nov 11 2009)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         5.[E][✘]  e  (at: Feb 28 1980)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         6.[T][✘]  borrow book "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         7.[D][✘]  read book  (by: Jan 11 2020)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Add a todo task to Duke  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `todo [DESCRIPTION]`  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "           [T][✘] return book"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Now you have 8 tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Add a deadline to Duke  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `deadline [DESCRIPTION] /by [yyyy-mm-dd]`  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "deadline return  book /by 2020-10-01"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "           [D][✘] assignment (by: Sep 23 2021)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Now you have 9 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Add an event to Duke  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `event [DESCRIPTION] /at [yyyy-mm-dd]`  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "event school activity /at 2020-10-01"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "           [E][✘] CCA (at: Sep 27 2020)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Now you have 10 tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Mark a task as done  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `done [index]`  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "           [D][✓]  b  (by: Mar 2 2002)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Delete a task from duke  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `delete [index]`  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "           [D][✓]  b  (by: Mar 2 2002)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Find tasks that contains a certain keyword  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `find [keyword]`  "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "find book"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[T][✘]  borrow book "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         2.[D][✘]  read book  (by: Jan 11 2020)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         3.[T][✘] return book"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Date"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Find tasks on a certain date  "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `date [yyy-mm-dd]`  "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "date 2021-09-23"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Here are the tasks on date 2021-09-23 :"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[D][✘]  assignment  (by: Sep 23 2021)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Sort"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Sort tasks according to their types  "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `sort`  "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "sort"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Here are your tasks:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Deadlines:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[D][✘]  b  (by: Mar 2 2002)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         2.[D][✘]  c  (by: Mar 4 2011)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         3.[D][✘]  d  (by: Nov 11 2009)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         4.[D][✘]  read book  (by: Jan 11 2020)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Events:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[E][✘]  a  (at: Feb 2 2000)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         2.[E][✘]  e  (at: Feb 28 1980)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Todos:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[T][✘]  borrow book "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Timeline"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Generates a timeline for deadlines and events  "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `timeline`  "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "timeline"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Here is your timeline:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[E][✘]  e  (at: Feb 28 1980)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         2.[E][✘]  a  (at: Feb 2 2000)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         3.[D][✘]  b  (by: Mar 2 2002)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         4.[D][✘]  d  (by: Nov 11 2009)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         5.[D][✘]  c  (by: Mar 4 2011)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         6.[D][✘]  read book  (by: Jan 11 2020)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         Here are your todos:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "         1.[T][✘]  borrow book "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Prints available commands  "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `help`  "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "help"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        [List of commands available]"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        list: Display all tasks in the list."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: list"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        todo: Add a todo task."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: todo borrow book"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        deadline: Add a deadline."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: deadline return book /by Sunday"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        event: Add a event."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        done: Mark a task as done."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: done 2"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        find: Find tasks that contain the keyword"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: find book"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        date: Find tasks on a certain date"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: date 2020-09-23"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        timeline: Print tasks in time order"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: timeline"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        sort: Sort tasks according to their types"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: sort"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        bye: Exit the program."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Example: bye"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "### Bye"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Exits Duke"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Format: `bye`  "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "bye"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "```"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jingming517": 226,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " * The main class of Duke object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Duke program starts."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param args command line inputs into the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.tasks.TaskList list \u003d new duke.tasks.TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.ui.Ui command \u003d new duke.ui.Ui(list);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        Storage storage \u003d new Storage(list);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        storage.loadData();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        command.commandProcessor();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        storage.saveData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 20,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "E | ✘ | a | 2000-02-02"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "D | ✘ | c | 2011-03-04"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "D | ✘ | d | 2009-11-11"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "E | ✘ | e | 1980-02-28"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "T | ✘ | borrow book | "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "D | ✘ | read book | 2020-01-11"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "T | ✘ | return book | "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "D | ✘ | assignment | 2021-09-23"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "E | ✘ | CCA | 2020-09-27"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 9
    }
  },
  {
    "path": "src/main/java/duke/dukeexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " * Encapsulates a DukeException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Constructs a DukeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 14
    }
  },
  {
    "path": "src/main/java/duke/messages/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Error messages"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String EMPTY_COMMAND_ERROR \u003d \"☹ OOPS!!! The command input cannot be empty!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String INVALID_COMMAND_ERROR \u003d \"☹ OOPS!!! Please input a valid command!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String EMPTY_TODO_ERROR \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String EMPTY_EVENT_ERROR \u003d \"☹ OOPS!!! The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String EMPTY_DEADLINE_ERROR \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String EMPTY_EVENT_TIME_ERROR \u003d \"☹ OOPS!!! Please input the time of event.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String EMPTY_DEADLINE_TIME_ERROR \u003d \"☹ OOPS!!! Please input the time of deadline.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String FILE_NOT_FOUND \u003d \"☹ OOPS!!! The save file is not found.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String DIRECTORY_NOT_FOUND \u003d \"☹ OOPS!!! The directory is not found.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String FILE_LOADED \u003d \"File successfully loaded.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String DATE_FORMAT_ERROR \u003d \"☹ OOPS!!! Please input date in yyyy-mm-dd format\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static final String FILE_LOADING \u003d \"The file is loading\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static void printSeparationLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Prints task being added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param taskAdded the task being added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param size number of tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static void printAddTask(Task taskAdded, int size) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printSeparationLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t   \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + taskAdded.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        int numberOfTasks \u003d size + 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String taskPlural;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (numberOfTasks \u003d\u003d 0 || numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            taskPlural \u003d \"task\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            taskPlural \u003d \"tasks\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Now you have \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + numberOfTasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \" \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + taskPlural"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \" in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printSeparationLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Prints welcome messages."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static void printWelcome() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printSeparationLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t What can I do for you?\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printSeparationLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Prints goodbye messages."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static void printGoodBye() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printSeparationLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Bye.Hope to see you again soon!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printSeparationLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Prints available commands."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static void printCommandInstructions() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printSeparationLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t[List of commands available]\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\tlist: Display all tasks in the list.\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: list\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\n\\ttodo: Add a todo task.\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: todo borrow book\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\n\\tdeadline: Add a deadline.\" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: deadline return book /by Sunday\" +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\n\\tevent: Add a event.\" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: event project meeting /at Mon 2-4pm\" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\n\\tdone: Mark a task as done.\" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: done 2\" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\n\\tfind: Find tasks that contain the keyword\"+"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: find book\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\n\\tdate: Find tasks on a certain date\"+"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: date 2020-09-23\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\n\\ttimeline: Print tasks in time order\"+"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: timeline\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\n\\tsort: Sort tasks according to their types\"+"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: sort\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\n\\tbye: Exit the program.\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                \"\\n\\t\\tExample: bye\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printSeparationLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 109
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.messages.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " * Encapsulates the Parser class that parses user input string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Extracts command action word from user input string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param command user input command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return an array of string including [command type] and [description]."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @throws DukeException throws exception on empty commands and invalid commands."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static String[] extractCommandAction(String command) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String[] split \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String commandType \u003d split[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (split.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            throw new DukeException(Message.EMPTY_COMMAND_ERROR);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } else if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"timeline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"sort\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                return split;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                throw new DukeException(Message.EMPTY_TODO_ERROR);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                throw new DukeException(Message.EMPTY_EVENT_ERROR);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                throw new DukeException(Message.EMPTY_DEADLINE_ERROR);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                throw new DukeException(Message.INVALID_COMMAND_ERROR);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case(\"done\"):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case(\"delete\"):"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case(\"todo\"):"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case(\"event\"):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case(\"deadline\"):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case(\"find\"):"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case(\"date\"):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                return split;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                throw new DukeException(Message.INVALID_COMMAND_ERROR);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Extracts date from command string."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param command user input command."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param commandType Type of command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return an array of string [description, date]."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @throws DukeException throws an exception on empty date."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static String[] extractTaskTime(String command, String commandType) throws DukeException{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String[] split \u003d command.split(\" /by | /at \", 2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                throw new DukeException(Message.EMPTY_EVENT_TIME_ERROR);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case (\"deadline\"):"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                throw new DukeException(Message.EMPTY_DEADLINE_TIME_ERROR);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return split;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Converts date from String to LocalDate."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param time date string."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return date in LocalDate format."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @throws DukeException throws a duke exception on invalid date format."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public static LocalDate timeProcessor(String time) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            LocalDate ld \u003d LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            String valid \u003d ld.format(formatter);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            if (!valid.equals(time)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                throw new DukeException(duke.messages.Message.DATE_FORMAT_ERROR);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            return ld;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } catch (DateTimeParseException | DukeException exp) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            throw new DukeException(duke.messages.Message.DATE_FORMAT_ERROR);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jingming517": 98
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " * Encapsulates a Storage object that saves data to file and loads saved files"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    private static final String DIRECTORY_PATH \u003d \"duke\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    private static final String FILE_PATH \u003d \"duke/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    private duke.tasks.TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public Storage(duke.tasks.TaskList list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        this.taskList \u003d list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Loads saved data form txt file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void loadData() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String loadingMessage \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            File directory \u003d new File(DIRECTORY_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            assert directory.exists() : \"/t The directory does not exist.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            Scanner in \u003d new Scanner(f);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                String[] parsed \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                String command \u003d parsed[0].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                Boolean status;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                if (parsed[1] \u003d\u003d \"\\u2713\") {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    status \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    status \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    taskList.getTasks().add(new Todo(parsed[2], status));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    LocalDate deadlineTime \u003d duke.parser.Parser.timeProcessor(parsed[3].trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    taskList.getTasks().add(new Deadline(parsed[2], status, deadlineTime));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    LocalDate eventTime \u003d duke.parser.Parser.timeProcessor(parsed[3].trim());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    taskList.getTasks().add(new Event(parsed[2], status, eventTime));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"\\t \" + duke.messages.Message.FILE_LOADED);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Saves data to duke.txt file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void saveData() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                String time \u003d task.getTaskTime().trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                String timeFormatted \u003d time.replace(\" \", \"-\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                fw.write(task.getTaskType() + \" | \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + task.getStatusIcon() + \" | \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + task.getTaskDescription().trim() + \" | \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + timeFormatted"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 94
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public Deadline(String description, Boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return \"[D]\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \" (by: \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return \"[E]\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \" (at: \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " * Encapsulates a Task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public LocalDate time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        description \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Constructs a task object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param taskInput task description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param status task status."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public Task(String taskInput, boolean status){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        description \u003d taskInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        isDone \u003d status;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        time \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Marks a task status as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Gets the task status."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return the task status icon."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Gets the type of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return [Task,T, D, E]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Gets the description of task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return task description."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public LocalDate getTime() {return null;}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public LocalDate getDateTime() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Converts task type, status, description and date to a string."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return a string of task information."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 80
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.dukeexception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " * Encapsulate a TaskList class that saves the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Creates a new task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Gets all the tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return an ArrayList that contains all tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Adds a new task to the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param taskDescription the description of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param type type of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void addTask(String taskDescription, String type) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            tasks.add(new Todo(taskDescription, false));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            duke.messages.Message.printAddTask(tasks.get(size), size);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            String commandDeadlineSplit[] \u003d Parser.extractTaskTime(taskDescription, type);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            LocalDate deadlineDateProcessed \u003d Parser.timeProcessor(commandDeadlineSplit[1].trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            tasks.add(new Deadline(commandDeadlineSplit[0], false, deadlineDateProcessed));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            duke.messages.Message.printAddTask(tasks.get(size), size);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            String commandEventSplit[] \u003d Parser.extractTaskTime(taskDescription, type);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            LocalDate eventDateProcessed \u003d Parser.timeProcessor(commandEventSplit[1].trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            tasks.add(new Event(commandEventSplit[0], false, eventDateProcessed));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            duke.messages.Message.printAddTask(tasks.get(size), size);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Deletes a task from the list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param command user input commend."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void deleteTask(String command) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (index \u003e0 \u0026\u0026 index \u003c\u003d (tasks.size())) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"\\t Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"\\t   \" + tasks.get(index - 1).toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            tasks.remove(index - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"\\t Task number \" + index + \" is not in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Marks a task in the list as done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param command user input command."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void markTaskAsDone(String command) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (index \u003e0 \u0026\u0026 index \u003c\u003d (tasks.size())) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            tasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"\\t   \" + tasks.get(index - 1).toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"\\t Task number \" + index + \" is not in the list.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Prints all the tasks in the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void printAllTasks() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        int number \u003d 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for(int i\u003d0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"\\t \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    + number"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    + \".\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    + tasks.get(i).toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            number++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Prints all the items in a list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param list the list to be printed."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        int number \u003d 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for (int i\u003d0; i\u003c list.size(); i++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            System.out.println(\"\\t \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    + number"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    + \".\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    +list.get(i).toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            number++;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Finds all the tasks that include the keyword in description."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param keyword the keyword to be found."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void findKeyword(String keyword) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        int number \u003d 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for (int i\u003d0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            String description \u003d tasks.get(i).getTaskDescription();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            if (keywordMatched(keyword, description)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                System.out.println(\"\\t \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + number"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + \".\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + tasks.get(i).toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Determines whether a task description contains the keyword."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param keyword the keyword to be found."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return true if task description contains the keyword and false if not."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public boolean keywordMatched(String keyword, String description) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Find tasks on a certain date."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param dateInput the date to be found."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @throws DukeException throws error of invalid date formate"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void findDate(String dateInput) throws DukeException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        LocalDate testInputFormat \u003d Parser.timeProcessor(dateInput.trim());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Here are the tasks on date \" + dateInput.trim() + \" :\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        int number \u003d 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for (int i\u003d0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            if (tasks.get(i).getTaskTime().trim().matches(dateInput.trim())) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                System.out.println(\"\\t \""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + number"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + \".\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        + tasks.get(i).toString());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Sort tasks according to their type into deadlines, events, and todos."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void sortTasks() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ArrayList\u003cTask\u003e deadlineList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ArrayList\u003cTask\u003e eventList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for (int i\u003d0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            Task temp \u003d tasks.get(i);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            switch(tasks.get(i).getTaskType()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                eventList.add(temp);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                deadlineList.add(temp);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                todoList.add(temp);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Here are your tasks:\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Deadlines:\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printList(deadlineList);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Events:\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printList(eventList);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Todos:\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printList(todoList);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Sort deadlines and events in time sequence"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @param taskList the list to be sorted."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @return the sorted list in time sequence."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public ArrayList\u003cTask\u003e sortByDate(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ArrayList\u003cTask\u003e sortingList \u003d taskList;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for (int i\u003d0; i\u003ctaskList.size(); i++) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            for (int j\u003di+1; j\u003ctaskList.size(); j++) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                if (taskList.get(i).getTime() !\u003d null \u0026\u0026 taskList.get(j).getTime() !\u003d null) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    if (taskList.get(j).getTime().isBefore(taskList.get(i).getTime())) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        Collections.swap(sortingList, i, j);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return sortingList;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * Generates a timeline for deadlines and events"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void generateTimeline() throws DukeException {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ArrayList\u003cTask\u003e timelineList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        for (int i\u003d0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            Task temp \u003d tasks.get(i);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            switch(tasks.get(i).getTaskType()) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                timelineList.add(temp);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                todoList.add(temp);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        ArrayList\u003cTask\u003e sortedList \u003d sortByDate(timelineList);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Here is your timeline:\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printList(sortedList);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        System.out.println(\"\\t Here are your todos:\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        printList(todoList);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 264
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public LocalDate getTime() {return null;}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 32
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import duke.dukeexception.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " * Encapsulates the Ui class that deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jingming517"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public Ui(TaskList list) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     *  Processes and executes the input commands from user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    public void commandProcessor() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        duke.messages.Message.printWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                duke.messages.Message.printGoodBye();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            } else if (command.equals(\"help\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                duke.messages.Message.printCommandInstructions();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    String[] split \u003d Parser.extractCommandAction(command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    String commandType \u003d split[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    String taskDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    if (split.length \u003e 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        taskDescription \u003d split[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jingming517"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    switch (commandType) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.markTaskAsDone(split[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.deleteTask(split[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.printAllTasks();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"sort\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.sortTasks();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.addTask(taskDescription, \"todo\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.addTask(taskDescription, \"event\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.addTask(taskDescription, \"deadline\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.findKeyword(split[1].trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"date\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.findDate(split[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    case \"timeline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        list.generateTimeline();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        System.out.println(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    System.out.println(\"\\t \" + e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                    duke.messages.Message.printSeparationLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 89
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "javac Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "java Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "Jingming517": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jingming517"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Jingming517": 1
    }
  }
]
