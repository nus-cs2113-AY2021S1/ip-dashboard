[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.command.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String GREETINGS \u003d \"          Yahallo! I\u0027m Singlish bot! I\u0027m here to make ur day nicer :)\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + LS +\"                          What u wan me help u do?\" + LS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String LINE \u003d \"    ―――――――――――――――――――――――――――――――――――――――――――\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + LS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns greetings from the bot."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return greetings"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printGreetings() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return GREETINGS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Prints a line wrap around the text."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param text content getting printed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static void printLine(String text) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.print(LINE + text + LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        //Print greetings"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        printLine(printGreetings());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        //Execute a duke.command after receiving user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        while (Commands.getCommandInput()) ;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 36
    }
  },
  {
    "path": "src/main/java/duke/command/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final Scanner SCAN \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String BYE \u003d \"    Thank you for using me! See u again soon ya :)\" + Duke.LS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String INVALID_INPUT \u003d \"    I can\u0027t understand what u saying eh, can say properly?\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + Duke.LS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String INVALID_NUMBER \u003d \"    Err I think u enter wrong duke.task number sia, it\u0027s too big le\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + Duke.LS;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String NO_STRING \u003d \"    After ur \\\"done\\\" pls use numbers only tolong\" + Duke.LS;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Prints the respective lines or statements based on the commands input by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the boolean value of the duke.command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return boolean value"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static boolean getCommandInput() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String userInput \u003d SCAN.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] commandInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            switch (commandInput[0].toLowerCase()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                if (!userInput.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    Duke.printLine(invalidInput());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Duke.printLine(Task.printListDescription(Task.getNumberOfTasks(), Task.getCompletedTasks())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                        + Task.printListItems(tasks, Task.getNumberOfTasks()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Duke.printLine(Todo.printTodo(tasks, userInput));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Duke.printLine(Deadline.printDeadline(tasks, userInput));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Duke.printLine(Event.printEvent(tasks, userInput));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Duke.printLine(Task.completeTask(tasks, userInput));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Duke.printLine(sayGoodbye());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Duke.printLine(invalidInput());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Duke.printLine(INVALID_NUMBER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Duke.printLine(NO_STRING);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * returns goodbye greeting from the bot."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return goodbye"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String sayGoodbye() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return BYE;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * returns a prompt to re-enter the input when an invalid input is entered."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return invalid input warning"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String invalidInput() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return INVALID_INPUT;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 86
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String EMPTY_TODO \u003d \"    Pls gimme something to do leh ._.\" + Duke.LS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String EMPTY_EVENT \u003d \"    Why u nvr give any event sia :\u003c\" + Duke.LS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String INVALID_EVENT \u003d \"    Ur event seems wrong sia\" + Duke.LS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String EMPTY_DEADLINE \u003d \"    Wah u so free ah no deadlines to meet one :\u003e\" + Duke.LS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String INVALID_DEADLINE \u003d \"    Ur deadline looks wrong leh pls check it\" + Duke.LS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String NO_TASKS \u003d \"    Ps u need to add tasks first before u can set them as complete leh\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + Duke.LS;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Constructs a {@code duke.exception.DukeException} with the specified detail"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param errorMessage the detail message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        switch (errorMessage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case \"no todo\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Duke.printLine(EMPTY_TODO);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case \"no event\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Duke.printLine(EMPTY_EVENT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case \"invalid event\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Duke.printLine(INVALID_EVENT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case \"no deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Duke.printLine(EMPTY_DEADLINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case \"invalid deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Duke.printLine(INVALID_DEADLINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        case \"no tasks in list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Duke.printLine(NO_TASKS);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the duke.task description and it\u0027s duke.task type to Deadlines."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param description description of the duke.task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(\" \" + description + \")\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the newly added duke.task in the list and the number of remaining tasks to complete."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks a list used to store the tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return newly added duke.task in the list and the number of remaining tasks to complete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printDeadline(ArrayList\u003cTask\u003e tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (userInput.substring(8).isBlank()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no deadline\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (!userInput.contains(\"/by\") || userInput.substring(8, byIndex).isBlank()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                || userInput.substring(byIndex + 3).isBlank()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"invalid deadline\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String deadline \u003d userInput.substring(9).replace(\"/by\",\"(by:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.add(new Deadline(deadline));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String taskType \u003d \"    \" + tasks.get(getNumberOfTasks() - 1).getTaskType();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String statusIcon \u003d \"[\" + tasks.get(getNumberOfTasks() - 1).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + deadline + \")\" + Duke.LS;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String tasksLeft \u003d \"    Now you have \" + (getRemainingTasks())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + \" more tasks to complete. Good luck!\" + Duke.LS;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return ADDED + taskType + statusIcon + tasksLeft;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 43
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the duke.task description and it\u0027s duke.task type to Events."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param description description of the duke.task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(description + \")\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the newly added duke.task in the list and the number of remaining tasks to complete."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks a list used to store the tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return newly added duke.task in the list and the number of remaining tasks to complete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printEvent(ArrayList\u003cTask\u003e tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        int atIndex \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (userInput.substring(5).isBlank()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no event\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (!userInput.contains(\"/at\") || userInput.substring(5, atIndex).isBlank()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                || userInput.substring(atIndex + 3).isBlank()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"invalid event\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String event \u003d userInput.substring(5).replace(\"/at\",\"(at:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.add(new Event(event));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String taskType \u003d \"    \" + tasks.get(getNumberOfTasks() - 1).getTaskType();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String statusIcon \u003d \"[\" + tasks.get(getNumberOfTasks() - 1).getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + event + \")\" + Duke.LS;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String tasksLeft \u003d \"    Now you have \" + (getRemainingTasks())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + \" more tasks to complete. Good luck!\"+ Duke.LS;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return ADDED + taskType + statusIcon + tasksLeft;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 43
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static int completedTasks \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static int remainingTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String CONGRATS \u003d \"    Congrats on completing this task! U damn ups :D\" + Duke.LS;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String EMPTY_LIST \u003d \"    Your list still empty eh please add sth leh\" + Duke.LS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String ALL_TASKS_COMPLETED \u003d \"    Wah u finished all ur tasks! Nice la!\" + Duke.LS;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String NO_TASKS_COMPLETED \u003d \"    U haven\u0027t done any tasks yet... U shud start soon!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + Duke.LS;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final String SOME_TASKS_COMPLETED \u003d \"    U still got some tasks left to do. Jia you!\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + Duke.LS;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    protected static final String ADDED \u003d \"    Ok I add this task to ur list liao:\" + Duke.LS;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the duke.task description and default it\u0027s completion to false."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param description description of the duke.task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        remainingTasks \u003d numberOfTasks - completedTasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the completion status of the duke.task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return completion status of the duke.task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        //return ✓ or ✘ symbols"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the completion status of the duke.task as completed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        completedTasks++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the description of the duke.task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return description of duke.task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the type of duke.task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return type of duke.task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return \"[\" + this.taskType + \"]\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the number of tasks in the list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return number of tasks in the list"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static int getNumberOfTasks() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return numberOfTasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the number of completed tasks in the list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return number of completed tasks in the list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static int getCompletedTasks() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return completedTasks;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the remaining tasks in the list"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return remaining tasks in the list"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static int getRemainingTasks() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return remainingTasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the confirmation of completing a duke.task."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks a list used to store the tasks"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return completion of duke.task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String completeTask(ArrayList\u003cTask\u003e tasks, String userInput)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throws IndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no tasks in list\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (userInput.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new NumberFormatException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (Integer.parseInt(userInput.substring(5)) \u003e tasks.size()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.get(Integer.parseInt(words[1]) - 1).markAsDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String statusIcon \u003d \"    [\" + tasks.get(Integer.parseInt(words[1]) - 1).getStatusIcon() + \"] \";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String taskDescription \u003d tasks.get(Integer.parseInt(words[1]) - 1).getDescription();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return CONGRATS + statusIcon + taskDescription + Duke.LS;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the respective list description based on the number of tasks and completed tasks"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param numberOfTasks number of tasks in the list"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param completedTasks number of completed tasks in the list"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return list description"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printListDescription(int numberOfTasks, int completedTasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return EMPTY_LIST;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (completedTasks \u003d\u003d numberOfTasks) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return ALL_TASKS_COMPLETED;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (completedTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return NO_TASKS_COMPLETED;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return SOME_TASKS_COMPLETED;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the tasks in the list along with the status of the ."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks a list used to store the tasks"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param numberOfTasks number of tasks in the list"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printListItems(ArrayList\u003cTask\u003e tasks, int numberOfTasks) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String listItems \u003d \"\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (int i \u003d 0; i \u003c numberOfTasks; i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            listItems +\u003d \"    \" + (i + 1) + \".\" + tasks.get(i).getTaskType() + \"[\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    + tasks.get(i).getStatusIcon() + \"]\" + tasks.get(i).getDescription() + Duke.LS;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return listItems;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 157
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the duke.task description and it\u0027s duke.task type to duke.task.Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param description description of the duke.task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the newly added duke.task in the list and the number of remaining tasks to complete."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks a list used to store the tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return newly added duke.task in the list and the number of remaining tasks to complete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printTodo(ArrayList\u003cTask\u003e tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (userInput.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"no todo\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String todo \u003d userInput.substring(4);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.add(new Todo(todo));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String taskType \u003d \"    \" + tasks.get(getNumberOfTasks() - 1).getTaskType();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String statusIcon \u003d \"[\" + tasks.get(getNumberOfTasks() - 1).getStatusIcon() + \"]\" + todo + Duke.LS;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String tasksLeft \u003d \"    Now you have \" + (getRemainingTasks())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + \" more tasks to complete. Good luck!\" + Duke.LS;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return ADDED + taskType + statusIcon + tasksLeft;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": "todo eat breakfast"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "event SEP Talk /at 8pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "deadline Finish Repl assignments /by Sunday 11pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "not a valid input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "homingjun": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "homingjun": 1,
      "-": 20
    }
  }
]
