[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Duke(String folderpath, String filepath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        storage \u003d new Storage(folderpath, filepath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void run()  {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ui.printLine(Ui.printGreetings()); //Print greetings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        storage.createSaveFile(); //Create a save file (if one doesn\u0027t exist) to store the list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.addAll(storage.loadSaveFile()); //Loads the list of tasks from the save file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        while (parser.parseCommandInput()) ; //Execute a command after receiving user input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        new Duke(\"data\", \"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public boolean byeCommand() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Ui.printLine(Ui.sayGoodbye());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public boolean doCommand(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public abstract boolean doCommand(TaskList tasks, String userInput) throws DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 8
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class DeadlineCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public boolean doCommand(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] deadline \u003d userInput.substring(9).split(\"/by \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.add(new Deadline(deadline[0], deadline[1]));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Ui.printLine(Ui.printDeadline(tasks, userInput));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Storage.writeSaveFile(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 18
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public boolean doCommand(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Ui.printLine(Ui.printTaskDeletion(tasks, userInput));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.delete(Integer.parseInt(words[1]));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Storage.writeSaveFile(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 17
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public boolean doCommand(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Ui.printLine(Ui.printTaskCompletion(tasks, userInput));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Storage.writeSaveFile(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 15
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public boolean doCommand(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] event \u003d userInput.substring(5).split(\"/at \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.add(new Event(event[0], event[1]));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Ui.printLine(Ui.printEvent(tasks, userInput));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Storage.writeSaveFile(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public boolean doCommand(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (!userInput.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Ui.printLine(Ui.invalidInput());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Ui.printLine(Ui.printListDescription(Task.getNumberOfTasks(), Task.getCompletedTasks())"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + Ui.printListItems(tasks));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 19
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class TodoCommand  extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public boolean doCommand(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String todo \u003d userInput.substring(4);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.add(new Todo(todo));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Ui.printLine(Ui.printTodo(tasks, userInput));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Storage.writeSaveFile(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 19
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Constructs a {@code duke.exception.DukeException} with the specified detail"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param message The detail message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Prints the exception message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void printExceptionMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Ui.printLine(this.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 22
    }
  },
  {
    "path": "src/main/java/duke/messages/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String GREETINGS \u003d \"          Yahallo! I\u0027m Singlish bot! I\u0027m here to make ur day nicer :)\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + LS + \"                          What u wan me help u do?\" + LS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String LINE \u003d \"    ―――――――――――――――――――――――――――――――――――――――――――\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + LS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String EMPTY_LIST \u003d \"    Your list still empty eh please add sth leh\" + LS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String ALL_TASKS_COMPLETED \u003d \"    Wah u finished all ur tasks! Nice la!\" + LS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String NO_TASKS_COMPLETED \u003d \"    U haven\u0027t done any tasks yet... U shud start soon!\" + LS;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String SOME_TASKS_COMPLETED \u003d \"    U still got some tasks left to do. Jia you!\" + LS;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String BYE \u003d \"    Thank you for using me! See u again soon ya :)\" + LS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String INVALID_INPUT \u003d \"    I can\u0027t understand what u saying eh, can say properly?\" + LS;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String INVALID_NUMBER \u003d \"    Err I think u enter wrong task number sia, it\u0027s not in the list\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + LS;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String NO_STRING \u003d \"    After ur \\\"done\\\" or \\\"delete\\\" pls use numbers only tolong\" + LS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String CONGRATS \u003d \"    Congrats on completing this task! U damn ups :D\" + LS;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String ADDED \u003d \"    Ok I add this task to ur list liao:\" + LS;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String NOTHING_TO_COMPLETE \u003d \"    U need to add sth in ur list first before I can complete it\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            + LS;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String NOTHING_TO_DELETE \u003d \"    Got nothing for me to delete leh \" + LS;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String TASK_DELETED \u003d \"    Ok I deleted it liao\" + LS;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String CREATE_SAVE_FOLDER \u003d \"    Looks like u dun have a save folder, lemme make one now\" + LS;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String SAVE_FOLDER_LOCATION \u003d \"    I made a folder for u here: \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String CREATE_SAVE_FILE \u003d \"    I can\u0027t find any save file here, lemme make one now\" + LS;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String SAVE_FILE_FOUND \u003d \"    I found ur file le! :D\" + LS;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String CANNOT_CREATE_SAVE_FILE \u003d \"    I think got problem sia I can\u0027t save ur file\" + LS;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String CANNOT_FIND_SAVE_FILE \u003d \"    I can\u0027t find ur file sia\" + LS;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static final String CANNOT_WRITE_TO_SAVE_FILE \u003d \"    I cant write to ur save file :/\" + LS;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 33
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.messages.Messages;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static final Scanner SCAN \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the task array to the current one."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks an array list of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Parser(TaskList tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Prints the respective lines or statements based on the commands input by the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the boolean value of the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Boolean value"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static boolean parseCommandInput () {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String userInput \u003d SCAN.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] commandInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            switch (commandInput[0].toLowerCase()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                new ListCommand().doCommand(tasks, userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                new TodoCommand().doCommand(tasks, userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                new DeadlineCommand().doCommand(tasks, userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                new EventCommand().doCommand(tasks, userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                new DoneCommand().doCommand(tasks, userInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                new DeleteCommand().doCommand(tasks, userInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                new ByeCommand().byeCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Ui.printLine(Ui.invalidInput());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            e.printExceptionMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Ui.printLine(Messages.INVALID_NUMBER);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Ui.printLine(Messages.NO_STRING);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 75
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private final String FOLDER_PATH;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private final String FILE_PATH;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static File dukeSaveFile;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the folder path and file path to the new specified path."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param folderpath save folder path"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param filepath save file path"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Storage(String folderpath, String filepath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.FOLDER_PATH \u003d folderpath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.FILE_PATH \u003d filepath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Creates a save file as a .txt file to store the tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void createSaveFile() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        File saveFolder \u003d new File(FOLDER_PATH);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (!saveFolder.exists() \u0026\u0026 !saveFolder.isDirectory()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Ui.printLine(Messages.CREATE_SAVE_FOLDER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            saveFolder.mkdir();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Ui.printLine( Messages.SAVE_FOLDER_LOCATION + saveFolder.getAbsolutePath() + Messages.LS);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        dukeSaveFile \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            if (!dukeSaveFile.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Ui.printLine(Messages.CREATE_SAVE_FILE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                dukeSaveFile.createNewFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                Ui.printLine(Messages.SAVE_FILE_FOUND);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Ui.printLine(Messages.CANNOT_CREATE_SAVE_FILE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns an array list of the tasks loaded from the save file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return array list of tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public ArrayList\u003cTask\u003e loadSaveFile() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Scanner read \u003d new Scanner(dukeSaveFile);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            while (read.hasNext()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                String[] taskInfo \u003d read.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (taskInfo[0]) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case \"[T]\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    tasks.add(new Todo(taskInfo[2]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case \"[D]\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    tasks.add(new Deadline(taskInfo[2], taskInfo[3]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case \"[E]\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    tasks.add(new Event(taskInfo[2], taskInfo[3]));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    //fallthrough"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                if (taskInfo[1].equals(\"✓\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Ui.printLine(Messages.CANNOT_FIND_SAVE_FILE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Writes the contents of the task list to the save file\u0027s .txt file"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks an array list of tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static void writeSaveFile(TaskList tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            FileWriter saveWriter \u003d new FileWriter(dukeSaveFile);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                saveWriter.append(t.getTaskType() + \"|\" + t.getStatusIcon() + \"|\" + t.getDescription().trim());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                switch (t.getTaskType()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case \"[D]\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    saveWriter.append(\"|\" + ((Deadline) t).getBy());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                case \"[E]\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    saveWriter.append(\"|\" + ((Event) t).getAt());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                saveWriter.append(Messages.LS);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            saveWriter.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            Ui.printLine(Messages.CANNOT_WRITE_TO_SAVE_FILE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 119
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the task description and it\u0027s task type to Deadlines."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return super.toString().trim() + \" (by: \" + this.getBy() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the task description and it\u0027s task type to Events."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return super.toString().trim() + \" (at: \" + this.getAt() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private static int completedTasks \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the task description and default it\u0027s completion to false."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the completion status of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Completion status of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        //return ✓ or ✘ symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the completion status of the task as completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        completedTasks++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void setTaskDeleted() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            completedTasks--;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        numberOfTasks--;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the type of task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Type of task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return \"[\" + this.taskType + \"]\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static int getNumberOfTasks() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return numberOfTasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the number of completed tasks in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Number of completed tasks in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static int getCompletedTasks() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return completedTasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return \"[\" + this.taskType + \"]\" + \"[\" + getStatusIcon() + \"] \" + this.description.trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 86
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void delete(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public void addAll(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.tasks.addAll(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Sets the task description and it\u0027s task type to Todo."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 13
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.messages.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns greetings from the bot."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Greetings."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printGreetings() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return Messages.GREETINGS;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Prints a line wrap around the text."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param text Content getting printed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static void printLine(String text) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        System.out.print(Messages.LINE + text + Messages.LINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the respective list description based on the number of tasks and completed tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param numberOfTasks Number of tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param completedTasks Number of completed tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return List description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printListDescription(int numberOfTasks, int completedTasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return Messages.EMPTY_LIST;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (completedTasks \u003d\u003d numberOfTasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return Messages.ALL_TASKS_COMPLETED;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (completedTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return Messages.NO_TASKS_COMPLETED;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            return Messages.SOME_TASKS_COMPLETED;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the tasks in the list along with the status of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks A list used to store the tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printListItems(TaskList tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String listItems \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            listItems +\u003d \"    \" + taskNumber + \". \" + t + Messages.LS;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            taskNumber++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return listItems;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns goodbye greeting from the bot."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Goodbye."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String sayGoodbye() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return Messages.BYE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns a prompt to re-enter the input when an invalid input is entered."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Invalid input warning."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String invalidInput() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return Messages.INVALID_INPUT;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the newly added task in the list and the number of remaining tasks to complete."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks A list used to store the tasks."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param userInput User input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Newly added task in the list and the number of remaining tasks to complete."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @throws DukeException If the no todo is given."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printTodo(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (userInput.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"    Pls gimme something to do leh ._.\" + Messages.LS);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String todo \u003d userInput.substring(4);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String taskType \u003d \"    \" + tasks.getTask(Task.getNumberOfTasks()).getTaskType();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String statusIcon \u003d \"[\" + tasks.getTask(Task.getNumberOfTasks()).getStatusIcon() + \"]\" + todo + Messages.LS;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String tasksLeft \u003d \"    Now you have \" + Task.getNumberOfTasks()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + \" tasks in the list.\" + Messages.LS;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return Messages.ADDED + taskType + statusIcon + tasksLeft;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the newly added task in the list and the number of remaining tasks to complete."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks A list used to store the tasks."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param userInput User input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Newly added task in the list and the number of remaining tasks to complete."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @throws DukeException If no deadline is given or deadline is invalid."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printDeadline(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (userInput.substring(8).isBlank()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"    Wah u so free ah no deadlines to meet one :\u003e\" + Messages.LS);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (!userInput.contains(\"/by\") || userInput.substring(8, byIndex).isBlank()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                || userInput.substring(byIndex + 3).isBlank()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"    Ur deadline looks wrong leh pls check it\" + Messages.LS);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] deadline \u003d userInput.substring(9).split(\"/by \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String taskType \u003d \"    \" + tasks.getTask(Task.getNumberOfTasks()).getTaskType();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String statusIcon \u003d \"[\" + tasks.getTask(Task.getNumberOfTasks()).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + deadline[0] + \"(by: \" + deadline[1] + \")\" + Messages.LS;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String tasksLeft \u003d \"    Now you have \" + Task.getNumberOfTasks() + \" tasks in the list.\" + Messages.LS;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return Messages.ADDED + taskType + statusIcon + tasksLeft;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the newly added task in the list and the number of remaining tasks to complete."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks A list used to store the tasks."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param userInput User input."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Newly added task in the list and the number of remaining tasks to complete."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @throws DukeException If no event is given or event is invalid."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printEvent(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        int atIndex \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (userInput.substring(5).isBlank()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"    Why u nvr give any event sia :\u003c\" + Messages.LS);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (!userInput.contains(\"/at\") || userInput.substring(5, atIndex).isBlank()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                || userInput.substring(atIndex + 3).isBlank()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(\"    Ur event seems wrong sia\" + Messages.LS);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] event \u003d userInput.substring(5).split(\"/at \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String taskType \u003d \"    \" + tasks.getTask(Task.getNumberOfTasks()).getTaskType();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String statusIcon \u003d \"[\" + tasks.getTask(Task.getNumberOfTasks()).getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + event[0] + \"(at: \" + event[1] + \")\" + Messages.LS;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String tasksLeft \u003d \"    Now you have \" + Task.getNumberOfTasks()"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + \" tasks in the list.\"+ Messages.LS;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return Messages.ADDED + taskType + statusIcon + tasksLeft;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the confirmation of completing a task."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks A list used to store the tasks."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param userInput User input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Completion of task."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @throws DukeException If the list is empty."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printTaskCompletion(TaskList tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(Messages.NOTHING_TO_COMPLETE);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.getTask(Integer.parseInt(words[1])).markAsDone();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        Task taskDescription \u003d tasks.getTask(Integer.parseInt(words[1]));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return Messages.CONGRATS + \"    \" + taskDescription + Messages.LS;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "homingjun"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * Returns the confirmation of task deletion from the list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param tasks A list used to store the tasks."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @param userInput User input."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @return Deletion of task."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @throws DukeException If the list is empty."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     * @throws NumberFormatException If no number is given."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "homingjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    public static String printTaskDeletion(TaskList tasks, String userInput)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new DukeException(Messages.NOTHING_TO_DELETE);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        } else if (userInput.substring(6).isBlank()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "homingjun"
        },
        "content": "            throw new NumberFormatException();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        tasks.getTask(Integer.parseInt(words[1])).setTaskDeleted();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String taskDescription \u003d tasks.getTask(Integer.parseInt(words[1])) + Messages.LS;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        String tasksLeft \u003d \"    Now you have \" + Task.getNumberOfTasks()"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "homingjun"
        },
        "content": "                + \" tasks in the list.\" + Messages.LS;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "homingjun"
        },
        "content": "        return Messages.TASK_DELETED + \"    \" + taskDescription + tasksLeft;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "homingjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "homingjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "homingjun": 193
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "homingjun"
        },
        "content": "todo eat breakfast"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "homingjun"
        },
        "content": "event SEP Talk /at 8pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "homingjun"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "homingjun"
        },
        "content": "deadline Finish Repl assignments /by Sunday 11pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "homingjun"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "homingjun"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "homingjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "homingjun"
        },
        "content": "not a valid input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "homingjun"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "homingjun": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "homingjun"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "homingjun"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "homingjun": 2,
      "-": 19
    }
  }
]
