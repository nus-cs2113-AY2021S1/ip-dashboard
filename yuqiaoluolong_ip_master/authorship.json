[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "[T][✘] task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "[D][✘] d2 (by: Year.2015, Month.FEBRUARY, Day.20, Time: h.6, m.30)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "[D][✘] e1 (by: Year.2015, Month.FEBRUARY, Day.20, Time: h.6, m.30)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "[T][✘] task4"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 4
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.DeadlineNullException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.EventNullException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.TodoNullException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.DOUBLEINDENTATION;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.printStatement;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        //try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        /*} catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        int numberOfTasks \u003d storage.loadNumberOfTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            //try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                Command c;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                if(fullCommand.contains(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c \u003d Parser.parseTodoCommand(fullCommand, numberOfTasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    numberOfTasks++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } else if(fullCommand.contains(\"deadline\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c \u003d Parser.parseDeadlineCommand(fullCommand, numberOfTasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    numberOfTasks++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } else if(fullCommand.contains(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c \u003d Parser.parseEventCommand(fullCommand, numberOfTasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    numberOfTasks++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } else if(fullCommand.contains(\"list\")){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c \u003d Parser.parseListCommand(numberOfTasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } else if(fullCommand.contains(\"done\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c \u003d Parser.parseDoneCommand(fullCommand, numberOfTasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } else if(fullCommand.contains(\"delete\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c \u003d Parser.parseDeleteCommand(fullCommand, numberOfTasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    if(c.description.length() !\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        numberOfTasks--;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } else if(fullCommand.contains(\"bye\")){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c \u003d Parser.parseExitCommand(numberOfTasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c \u003d Parser.parseExceptionCommand(numberOfTasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    c.sava(tasks, ui, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    numberOfTasks--;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } catch (TodoNullException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    printStatement(DOUBLEINDENTATION +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                            \"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    tasks.remove(numberOfTasks-1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    numberOfTasks--;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } catch (DeadlineNullException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    numberOfTasks--;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } catch (EventNullException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    numberOfTasks--;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            /*} catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            }*/"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        new Duke(\"/Users/yuqiao/Desktop/CS2113T/ip/data/duke.txt\").run();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 94
    }
  },
  {
    "path": "src/main/java/Duke/DukeException/DeadlineNullException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class DeadlineNullException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 4
    }
  },
  {
    "path": "src/main/java/Duke/DukeException/EventNullException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class EventNullException extends Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 4
    }
  },
  {
    "path": "src/main/java/Duke/DukeException/InvalidStorageFilePathException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class InvalidStorageFilePathException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public InvalidStorageFilePathException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 7
    }
  },
  {
    "path": "src/main/java/Duke/DukeException/TodoNullException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class TodoNullException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 5
    }
  },
  {
    "path": "src/main/java/Duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.DeadlineNullException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.EventNullException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.TodoNullException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    protected int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public Command(String description, int numberOfTasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.numberOfTasks \u003d numberOfTasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws TodoNullException, DeadlineNullException, EventNullException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void sava(TaskList tasks, UI ui, Storage storage){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        if(description \u003d\u003d \"bye\") {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public Command change() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 39
    }
  },
  {
    "path": "src/main/java/Duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.DeadlineNullException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.EventNullException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.TodoNullException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public DeadlineCommand(String description, int numberOfTasks, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description, numberOfTasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            printStatement(DOUBLEINDENTATION + \"☹ OOPS!!! The time entered is not in the format(yyyy-mm-dd).\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws TodoNullException, DeadlineNullException,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            EventNullException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        if(this.by.toString().length() \u003d\u003d 0 \u0026\u0026 this.by.toString().length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            throw new DeadlineNullException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        tasks.add(new Deadline(this.description, this.by));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        ui.printStatement(DOUBLEINDENTATION + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                + TRIPLEINDENTATION + tasks.get(numberOfTasks - 1).toString() + \"\\n\" + DOUBLEINDENTATION"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                + \"Now you have \" + (numberOfTasks) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void sava(TaskList tasks, UI ui, Storage storage){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        Storage.save(tasks, numberOfTasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 45
    }
  },
  {
    "path": "src/main/java/Duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public DeleteCommand(String description, int numberOfTasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description, numberOfTasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            printStatement(DOUBLEINDENTATION + \"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    TRIPLEINDENTATION + tasks.get(Integer.parseInt(this.description)-1).toString() + \"\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    DOUBLEINDENTATION + \"Now you have \" + (numberOfTasks-1) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            tasks.remove(Integer.parseInt(this.description)-1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            printStatement(DOUBLEINDENTATION + \"☹ OOPS!!! You did not indicate which task to delete.\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void sava(TaskList tasks, UI ui, Storage storage){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        Storage.save(tasks, numberOfTasks-1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 30
    }
  },
  {
    "path": "src/main/java/Duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public DoneCommand(String description, int numberOfTasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description, numberOfTasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            tasks.get(Integer.parseInt(this.description)- 1).markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            printStatement(DOUBLEINDENTATION + \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    + TRIPLEINDENTATION + tasks.get(Integer.parseInt(this.description) - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            printStatement(DOUBLEINDENTATION + \"☹ OOPS!!! You did not indicate which task is done.\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            printStatement(DOUBLEINDENTATION + \"☹ OOPS!!! The index is out of the list boundary.\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void sava(TaskList tasks, UI ui, Storage storage){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        Storage.save(tasks, numberOfTasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 31
    }
  },
  {
    "path": "src/main/java/Duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.DeadlineNullException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.EventNullException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.TodoNullException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.DOUBLEINDENTATION;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.TRIPLEINDENTATION;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public EventCommand(String description, int numberOfTasks, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description, numberOfTasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws TodoNullException, DeadlineNullException,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            EventNullException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        if(this.at.toString().length() \u003d\u003d 0 \u0026\u0026 this.at.toString().length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            throw new EventNullException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        tasks.add(new Event(this.description, this.at));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        ui.printStatement(DOUBLEINDENTATION + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                + TRIPLEINDENTATION + tasks.get(numberOfTasks - 1).toString() + \"\\n\" + DOUBLEINDENTATION"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                + \"Now you have \" + (numberOfTasks) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void sava(TaskList tasks, UI ui, Storage storage){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        Storage.save(tasks, numberOfTasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 41
    }
  },
  {
    "path": "src/main/java/Duke/command/ExceptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.DOUBLEINDENTATION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.printStatement;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class ExceptionCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public ExceptionCommand(String description, int numberOfTasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description, numberOfTasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        printStatement(DOUBLEINDENTATION + ui.WRONGMESSAGE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 19
    }
  },
  {
    "path": "src/main/java/Duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public ExitCommand(String description, int numberOfTasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description, numberOfTasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        ui.printStatement(ui.BYE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 16
    }
  },
  {
    "path": "src/main/java/Duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public ListCommand(String description, int numberOfTasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description, numberOfTasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        System.out.print(HORIZONTALLINE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        System.out.println(INDENTATION + \"Here is yuqiaoluolong\u0027s Duke: \\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                \"      Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        for(int i \u003d 0; i \u003c numberOfTasks; i++){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            System.out.println(DOUBLEINDENTATION + (i+1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        System.out.println(HORIZONTALLINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 25
    }
  },
  {
    "path": "src/main/java/Duke/command/NullCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class NullCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public NullCommand(String description, int numberOfTasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description, numberOfTasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 16
    }
  },
  {
    "path": "src/main/java/Duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.DeadlineNullException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.EventNullException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.TodoNullException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.ui.UI;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.DOUBLEINDENTATION;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.TRIPLEINDENTATION;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public TodoCommand(String description, int numberOfTasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description, numberOfTasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws TodoNullException, DeadlineNullException,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            EventNullException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        tasks.add(new Todo(this.description));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        if(tasks.get(numberOfTasks-1).description.length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            throw new TodoNullException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        ui.printStatement(DOUBLEINDENTATION + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                + TRIPLEINDENTATION + tasks.get(numberOfTasks - 1).toString() + \"\\n\" + DOUBLEINDENTATION"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                + \"Now you have \" + (numberOfTasks) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void sava(TaskList tasks, UI ui, Storage storage){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        Storage.save(tasks, numberOfTasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 37
    }
  },
  {
    "path": "src/main/java/Duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.DOUBLEINDENTATION;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.printStatement;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    /*public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        if(fullCommand.contains(\"todo\")){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return new Command(fullCommand.substring(fullCommand.indexOf(\"Todo\")+4).trim());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } else if(fullCommand.contains(\"event\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return new Command(fullCommand.substring(fullCommand.indexOf(\"Event\")+5,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    fullCommand.indexOf(\"/\")).trim());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } else if(fullCommand.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return new Command(fullCommand.substring(fullCommand.indexOf(\"Deadline\")+7,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    fullCommand.indexOf(\"/\")).trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } else if(fullCommand.contains(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return new Command((\"bye\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static TodoCommand parseTodoCommand(String fullCommand, int numberOfTasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        String description \u003d fullCommand.substring(fullCommand.indexOf(\"todo\")+4).trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        if(description \u003d\u003d\"\") {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return new TodoCommand(description, numberOfTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static DeadlineCommand parseDeadlineCommand(String fullCommand, int numberOfTasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return new DeadlineCommand(fullCommand.substring(fullCommand.indexOf(\"deadline\") + 8,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    fullCommand.indexOf(\"/\")).trim(), numberOfTasks,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    fullCommand.substring(fullCommand.indexOf(\"/\") + 3).trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            printStatement(DOUBLEINDENTATION + \"☹ OOPS!!! There is nothing following \\\"deadline\\\".\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static EventCommand parseEventCommand(String fullCommand, int numberOfTasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return new EventCommand(fullCommand.substring(fullCommand.indexOf(\"event\")+5,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    fullCommand.indexOf(\"/\")).trim(), numberOfTasks,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    fullCommand.substring(fullCommand.indexOf(\"/\")+3).trim());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            printStatement(DOUBLEINDENTATION + \"☹ OOPS!!! There is nothing following \\\"event\\\".\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static Command parseListCommand(int numberOfTasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return new ListCommand(\"list\", numberOfTasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static Command parseExitCommand(int numberOfTasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return new ExitCommand(\"bye\", numberOfTasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static Command parseDoneCommand(String fullCommand, int numberOfTasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return new DoneCommand(fullCommand.replace(\"done\", \" \").trim(), numberOfTasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static Command parseDeleteCommand(String fullCommand, int numberOfTasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return new DeleteCommand(fullCommand.replace(\"delete\", \" \").trim(), numberOfTasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static Command parseExceptionCommand(int numberOfTasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return new ExceptionCommand(\"exception\", numberOfTasks);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 75
    }
  },
  {
    "path": "src/main/java/Duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.DukeException.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.taskList.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.INDENTATION;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import static Duke.ui.UI.printStatement;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"/Users/yuqiao/Desktop/CS2113T/ip/data/duke.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static Path path \u003d Path.of(DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public Storage(String filePath) /*throws InvalidStorageFilePathException*/ {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        if (!isValidPath(path)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            } catch (InvalidStorageFilePathException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    private static boolean isValidPath(Path filePath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return filePath.toString().endsWith(\".txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static void save(TaskList tasks, int numberOfTasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        for(int i \u003d 0; i\u003cnumberOfTasks; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            text +\u003d tasks.get(i).toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            writeToFile(String.valueOf(path), text);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public ArrayList\u003cTask\u003e load(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            for (String encodedTask : Files.readAllLines(path)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                if(encodedTask.contains(\"D\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    int year, dayOfMonth, hour, minute;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    Month month;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        year \u003dInteger.parseInt(encodedTask.substring(encodedTask.indexOf(\"Year\") + 5,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.indexOf(\"Month\") - 2));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        month \u003d Month.valueOf(encodedTask.substring(encodedTask.indexOf(\"Month\") + 6,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.indexOf(\"Day\") - 2));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        dayOfMonth \u003d Integer.parseInt(encodedTask.substring(encodedTask.indexOf(\"Day\") + 4,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.indexOf(\"Time\") - 2));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        hour \u003d Integer.parseInt(encodedTask.substring(encodedTask.lastIndexOf(\"h\") + 2,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.lastIndexOf(\"m\") - 2));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        minute \u003d Integer.parseInt(encodedTask.substring(encodedTask.lastIndexOf(\"m\") + 2,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.indexOf(\")\")));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        tasklist.add(new Deadline(getDescriptiongFromFile(encodedTask),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                LocalDateTime.of(year, month, dayOfMonth, hour, minute)));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        tasklist.remove(tasklist.size()-1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        printStatement(INDENTATION + \"☹ OOPS!!! There are time entered wrongly in the text file.\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                INDENTATION + \"Please delete them.\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    if(encodedTask.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        tasklist.get(tasklist.size()-1).markAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } else if(encodedTask.contains(\"E\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    int year, dayOfMonth, hour, minute;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    Month month;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        year \u003dInteger.parseInt(encodedTask.substring(encodedTask.indexOf(\"Year\") + 5,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.indexOf(\"Month\") - 2));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        month \u003d Month.valueOf(encodedTask.substring(encodedTask.indexOf(\"Month\") + 6,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.indexOf(\"Day\") - 2));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        dayOfMonth \u003d Integer.parseInt(encodedTask.substring(encodedTask.indexOf(\"Day\") + 4,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.indexOf(\"Time\") - 2));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        hour \u003d Integer.parseInt(encodedTask.substring(encodedTask.lastIndexOf(\"h\") + 2,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.lastIndexOf(\"m\") - 2));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        minute \u003d Integer.parseInt(encodedTask.substring(encodedTask.lastIndexOf(\"m\") + 2,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                encodedTask.indexOf(\")\")));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        tasklist.add(new Event(getDescriptiongFromFile(encodedTask),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                LocalDateTime.of(year, month, dayOfMonth, hour, minute)));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        tasklist.remove(tasklist.size()-1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        printStatement(INDENTATION + \"☹ OOPS!!! There are time entered wrongly in the text file.\\n\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                                INDENTATION + \"Please delete them.\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    if(encodedTask.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        tasklist.get(tasklist.size()-1).markAsDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    tasklist.add(new Todo(getDescriptiongFromFile(encodedTask)));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    if(encodedTask.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                        tasklist.get(tasklist.size()-1).markAsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return tasklist;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static String getDescriptiongFromFile(String inputCommand) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        if(inputCommand.contains(\":\")){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return inputCommand.substring(inputCommand.lastIndexOf(\"]\") + 1, inputCommand.indexOf((\":\"))-4).trim();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return inputCommand.substring(inputCommand.lastIndexOf(\"]\") + 1).trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public int loadNumberOfTasks(){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            for (int i \u003d 0; i\u003c Files.readAllLines(path).size(); i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            return number;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public String getPath() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                return path.toString();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 150
    }
  },
  {
    "path": "src/main/java/Duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: Year.\" + by.getYear() +\", Month.\" + by.getMonth()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                + \", Day.\" + by.getDayOfMonth() +\", Time: h.\" + by.getHour() +\", m.\" + by.getMinute() + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 19
    }
  },
  {
    "path": "src/main/java/Duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public Event(String description, LocalDateTime at){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: Year.\" + at.getYear() +\", Month.\" + at.getMonth()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                + \", Day.\" + at.getDayOfMonth() +\", Time: h.\" + at.getHour() +\", m.\" + at.getMinute() + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 19
    }
  },
  {
    "path": "src/main/java/Duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 23
    }
  },
  {
    "path": "src/main/java/Duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 13
    }
  },
  {
    "path": "src/main/java/Duke/taskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.taskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static final int MAX_NUM_TASKS \u003d 100;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        for(int i\u003d0; i\u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            taskList.add(tasks.get(i));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void add(Task oneTask){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        taskList.add(oneTask);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public Task get(int index){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void remove(int i) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        taskList.remove(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 31
    }
  },
  {
    "path": "src/main/java/Duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "package Duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static final int MAX_NUM_TASKS \u003d 100;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static final String DOUBLEINDENTATION \u003d INDENTATION + \"  \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static final String TRIPLEINDENTATION \u003d DOUBLEINDENTATION + \"  \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static final String HORIZONTALLINE \u003d INDENTATION"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            + \"\u003c------------------------------------------------------------\u003e\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public final String LOGO \u003d TRIPLEINDENTATION + \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            + TRIPLEINDENTATION + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            + TRIPLEINDENTATION + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            + TRIPLEINDENTATION + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            + TRIPLEINDENTATION + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public final String GREET \u003d INDENTATION + \" Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "            + INDENTATION + \" What can I do for you? (type\\\"help\\\" to get explanation)\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public final String BYE \u003d INDENTATION + \" Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public final String WRONGMESSAGE \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public UI(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public static void printStatement(String statement) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        System.out.println(HORIZONTALLINE + INDENTATION + \"Here is yuqiaoluolong\u0027s Duke: \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "                + statement + HORIZONTALLINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        printStatement(TRIPLEINDENTATION + \"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        printStatement(GREET);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "        System.out.printf(LS);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuqiaoluolong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yuqiaoluolong": 1,
      "-": 37
    }
  }
]
