[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "# Notes"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Minimally, commit after completing each increment."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 3,
      "-": 26
    }
  },
  {
    "path": "data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "event|false|123|123|"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "deadline|true|asd|asd|"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "todo|false|asd|"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String TASKS_LIST_SAVE_PATH \u003d \"data/taskList.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final int NUM_ARGS_DEADLINE \u003d 2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final int NUM_ARGS_EVENT \u003d 2;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static boolean programIsRunning \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // MAIN LOOP //////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        enter();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        mainLoop();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void enter() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printHomeScreen();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        // Load save file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            loadTasksList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (DukeException exception){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            handleException(exception);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void mainLoop() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        while(programIsRunning){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            String input \u003d getInput();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            String[] separatedInput \u003d separateCommandAndArguments(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            String command \u003d separatedInput[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            String arguments \u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if (separatedInput.length \u003e 1){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                arguments \u003d separatedInput[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                switch(command) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    handleByeCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    handleListCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    handleDoneCommand(arguments);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"todo\": // Fallthrough"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"deadline\": // Fallthrough"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    handleAddCommand(command, arguments);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    handleDeleteCommand(arguments);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    throw new DukeException(\"Duke does not understand that command\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            } catch(DukeException exception) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                handleException(exception);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printExitScreen();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // INPUT PARSING ////// //////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static String getInput(){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String input \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static String[] separateCommandAndArguments(String input) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return input.split(\" \", 2);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // PRINT HELPERS //////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void print(String text){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void printLineSeparator(){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"---------------------------------------\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void printNumOfTasks() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        int numOfTasks \u003d tasksList.size();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Now you have \" + numOfTasks + \" task(s)in the list.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void printHomeScreen(){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Hello! I\u0027m Duke\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void printExitScreen() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void printSuccessfulAddEntry(Task newTask) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"\\t\" + newTask);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printNumOfTasks();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void printSuccessfulRemoveEntry(Task deletedTask) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Got it. I\u0027ve deleted this task:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"\\t\" + deletedTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printNumOfTasks();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        int entryNum \u003d 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for(Task task : tasksList) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if(task \u003d\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            print(entryNum + \".\" + task);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            entryNum++;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // READ WRITE//////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void loadTasksList() throws DukeException{"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            File saveFile \u003d new File(TASKS_LIST_SAVE_PATH);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            Scanner saveFileScanner \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            while (saveFileScanner.hasNext()) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String curLine \u003d saveFileScanner.nextLine();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String[] taskDesc \u003d curLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String command \u003d taskDesc[0];"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String taskArgs \u003d \"\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    taskArgs \u003d taskDesc[2];"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    taskArgs \u003d taskDesc[2] + \" /by \" + taskDesc[3];"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    taskArgs \u003d taskDesc[2] + \" /at \" + taskDesc[3];"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                Task newTask \u003d createTask(taskDesc[0], taskArgs);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                newTask.isDone \u003d Boolean.parseBoolean(taskDesc[1]);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                tasksList.add(newTask);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(\"Unable to read save File\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Successfully loaded Data!\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void saveTasksList() throws DukeException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        File saveFile \u003d new File(TASKS_LIST_SAVE_PATH);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        createDirectories(saveFile);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        createSaveFile();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void createDirectories(File saveFile) throws DukeException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        boolean fileExists \u003d saveFile.exists();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (!fileExists) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            } catch (IOException exception) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                throw new DukeException(\"Cannot create directories and files\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void createSaveFile() throws DukeException {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            FileWriter saveFileWriter \u003d new FileWriter(TASKS_LIST_SAVE_PATH);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            for (Task task : tasksList) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                if (task instanceof  Todo){"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    storeLine(saveFileWriter, \"todo\", Boolean.toString(task.isDone), task.description);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    storeLine(saveFileWriter, \"deadline\", Boolean.toString(task.isDone), task.description, ((Deadline) task).dueDate);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    storeLine(saveFileWriter, \"event\", Boolean.toString(task.isDone), task.description, ((Event) task).timeFrame);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            saveFileWriter.close();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(\"Cannot write to task list save file\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void storeLine(FileWriter saveFileWriter, String ... elements) throws IOException {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        StringBuilder lineToStore \u003d new StringBuilder();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (String element : elements) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            lineToStore.append(element).append(\"|\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        lineToStore.append(\"\\n\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        saveFileWriter.write(lineToStore.toString());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // COMMAND HANDLERS //////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void handleByeCommand(){"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        programIsRunning \u003d false;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void handleListCommand() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printList();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void handleDoneCommand(String description) throws DukeException{"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if(description \u003d\u003d null){"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(\"The done command format is: done \u003ctaskDescription\u003e\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        // Looks for a task with matching the description task and marks it as done"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for(Task task : tasksList) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "           if(task.description.equals(description) \u0026\u0026 !task.isDone ) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                task.isDone \u003d true;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                print(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                        \"\\t\" + task);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                printLineSeparator();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                saveTasksList();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        throw new DukeException(\"Task not found\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void handleAddCommand(String command, String description) throws DukeException {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Task newTask \u003d createTask(command, description);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if(newTask \u003d\u003d null){"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(\"Unable to create the new Task\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        tasksList.add(newTask);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printSuccessfulAddEntry(newTask);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        saveTasksList();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void handleDeleteCommand(String description) throws DukeException{"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (Task task: tasksList){"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if (task.description.equals(description)){"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                tasksList.remove(task);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                printSuccessfulRemoveEntry(task);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                saveTasksList();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        throw new DukeException(\"Task not found\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void handleException(DukeException exception){"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Exception!\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"\\t\" + exception.description);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // TASK CREATION /////////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Task createTask(String command, String description) throws DukeException {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            newTask \u003d createToDo(description);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            newTask \u003d createDeadline(description);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            newTask \u003d createEvent(description);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Todo createToDo(String description) throws DukeException{"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (description \u003d\u003d null){"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(\"The todo format is: todo \u003cdesc\u003e\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return new Todo(description);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Deadline createDeadline(String description) throws DukeException{"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String[] taskDetails \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if(taskDetails.length \u003c NUM_ARGS_DEADLINE){"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(\"The deadline format is: deadline \u003cdesc\u003e /by \u003ctime\u003e\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return new Deadline(taskDetails[0], taskDetails[1]);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Event createEvent(String description) throws DukeException{"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String[] taskDetails \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if(taskDetails.length \u003c NUM_ARGS_EVENT){"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(\"The event format is: event \u003cdesc\u003e /at \u003ctime\u003e\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return new Event(taskDetails[0], taskDetails[1]);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 353,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public DukeException (String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String dueDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String timeFrame;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Event(String description, String timeFrame) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.timeFrame \u003d timeFrame;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeFrame + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return \u0027Tick\u0027 if done else \u0027X\u0027 symbol"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[\" + getStatusIcon() +\"]\" + \" \" + description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "badcommand"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "todo 123"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "event 123 /at 12pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "deadline study /by Sleeptime"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done 123"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done study"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 13
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 1,
      "-": 37
    }
  }
]
