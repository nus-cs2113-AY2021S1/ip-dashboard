[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "# Notes"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Minimally, commit after completing each increment."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 3,
      "-": 26
    }
  },
  {
    "path": "data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "event|false|123|123|"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "deadline|true|asd|asd|"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "todo|false|asd|"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 3
    }
  },
  {
    "path": "data/tasksList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "deadline|false|asdd |123321|"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.CommandParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String TASKS_LIST_SAVE_PATH \u003d \"data/tasksList.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static TasksList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static boolean programIsRunning \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        new Duke(TASKS_LIST_SAVE_PATH).run();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            tasks \u003d storage.loadTasksList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            ui.printDataLoadSuccess();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            ui.handleException(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            tasks \u003d new TasksList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void run(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        enter();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        mainLoop();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void enter() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printHomeScreen();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void mainLoop() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        while(programIsRunning) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            String[] separatedInput \u003d ui.separateCommandAndArguments(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            Command command \u003d CommandParser.parseCommand(separatedInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command.execute(tasks, ui ,storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if (command.isExit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            } catch(DukeException exception) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                ui.handleException(exception);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        programIsRunning \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printExitScreen();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 64,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String CANNOT_CREATE_TASK \u003d \"Unable to create the new Task\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    private static final int NUM_ARGS_DEADLINE \u003d 2;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    private static final int NUM_ARGS_EVENT \u003d 2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public AddCommand(String command, String description) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasksList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            newTask \u003d tasksList.addTodo(description, false);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            newTask \u003d tasksList.addDeadline(description, false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            newTask \u003d tasksList.addEvent(description, false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printSuccessfulAddEntry(tasksList, newTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 12
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Command(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public abstract void execute(TasksList tasksList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 15
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public DeleteCommand(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasksList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Task task \u003d tasksList.delete(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printSuccessfulRemoveEntry(tasksList, task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        storage.saveTasksList(tasksList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String DONE_COMMAND_FORMAT \u003d \"The done command format is: done \u003ctaskDescription\u003e\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String TASK_NOT_FOUND \u003d \"Task not found\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public DoneCommand (String taskName){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasks, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (taskName \u003d\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(DONE_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        // Looks for a task with matching the description,  and marks it as done in tasksList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (Task task : tasks.tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if (task.description.equals(taskName) \u0026\u0026 !task.isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                task.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                ui.print(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                        \"\\t\" + task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                ui.printLineSeparator();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                storage.saveTasksList(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        throw new DukeException(TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasksList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printList(tasksList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public DukeException (String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 9
    }
  },
  {
    "path": "src/main/java/duke/io/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String BAD_COMMAND \u003d \"Duke does not understand that command\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Command parseCommand(String[] commandDesc) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String commandName \u003d commandDesc[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String arguments \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (commandDesc.length \u003e 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            arguments \u003d commandDesc[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        switch (commandName) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new DoneCommand(arguments);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"todo\": // Fallthrough"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"deadline\": // Fallthrough"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new AddCommand(commandName, arguments);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(BAD_COMMAND);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 48
    }
  },
  {
    "path": "src/main/java/duke/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String CANNOT_READ_SAVE_FILE \u003d \"Cannot to read save File\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String CANNOT_CREATE_DIRECTORIES_AND_FILES \u003d \"Cannot create directories and files\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String CANNOT_WRITE_TO_TASK_LIST_SAVE_FILE \u003d \"Cannot write to task list save file\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String saveFilePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Storage(String saveFilePath){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.saveFilePath \u003d saveFilePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // READ FILE//////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public TasksList loadTasksList() throws DukeException{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        TasksList tasksList \u003d new TasksList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            File saveFile \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            Scanner saveFileScanner \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            // parses each line in the save file, add them to the tasksList one by one."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            while (saveFileScanner.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String curLine \u003d saveFileScanner.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String[] taskDesc \u003d curLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String command \u003d taskDesc[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String taskArgs;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    taskArgs \u003d taskDesc[2];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    tasksList.addTodo(taskArgs,Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    taskArgs \u003d taskDesc[2] + \" /by \" + taskDesc[3];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    tasksList.addDeadline(taskArgs, Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    taskArgs \u003d taskDesc[2] + \" /at \" + taskDesc[3];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    tasksList.addEvent(taskArgs, Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(CANNOT_READ_SAVE_FILE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // WRITE FILE//////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void saveTasksList(TasksList tasksList) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        File saveFile \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        createDirectories(saveFile);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        createSaveFile(tasksList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void createDirectories(File saveFile) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        boolean fileExists \u003d saveFile.exists();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (!fileExists) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            } catch (IOException exception) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                throw new DukeException(CANNOT_CREATE_DIRECTORIES_AND_FILES);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void createSaveFile(TasksList tasksList) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            FileWriter saveFileWriter \u003d new FileWriter(saveFilePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            // write each task as its own line in the save file"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            for (Task task : tasksList.tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    storeLine(saveFileWriter, \"todo\", Boolean.toString(task.isDone), task.description);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    storeLine(saveFileWriter, \"deadline\", Boolean.toString(task.isDone), task.description, ((Deadline) task).dueDate);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    storeLine(saveFileWriter, \"event\", Boolean.toString(task.isDone), task.description, ((Event) task).timeFrame);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            saveFileWriter.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(CANNOT_WRITE_TO_TASK_LIST_SAVE_FILE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // combines all task elements to save as single line in the save file"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void storeLine(FileWriter saveFileWriter, String ... elements) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        StringBuilder lineToStore \u003d new StringBuilder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (String element : elements) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            lineToStore.append(element).append(\"|\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        lineToStore.append(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        saveFileWriter.write(lineToStore.toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 110
    }
  },
  {
    "path": "src/main/java/duke/io/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // INPUT ///////////////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String input \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // returns an array where the very first word (command) is put into index 0 and everything else (arguments) in index 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String[] separateCommandAndArguments(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return input.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // OUTPUT //////////////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void handleException(DukeException exception) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Exception!\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"\\t\" + exception.description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void print(String text) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printLineSeparator() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"---------------------------------------\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printNumOfTasks(TasksList tasksList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        int numOfTasks \u003d tasksList.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Now you have \" + numOfTasks + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printHomeScreen() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Hello! I\u0027m Duke\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printExitScreen() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printSuccessfulAddEntry(TasksList tasksList, Task newTask) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"\\t\" + newTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printNumOfTasks(tasksList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printSuccessfulRemoveEntry(TasksList tasksList, Task deletedTask) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Got it. I\u0027ve deleted this task:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"\\t\" + deletedTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printNumOfTasks(tasksList);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printDataLoadSuccess() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Successfully loaded Data!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printList(TasksList tasksList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        int entryNum \u003d 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for(Task task : tasksList.tasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if(task \u003d\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            print(entryNum + \".\" + task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            entryNum++;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 99
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String dueDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Deadline(String description, String dueDate, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String timeFrame;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Event(String description, String timeFrame, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.timeFrame \u003d timeFrame;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeFrame + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return \u0027Tick\u0027 if done else \u0027X\u0027 symbol"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[\" + getStatusIcon() +\"]\" + \" \" + description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 19
    }
  },
  {
    "path": "src/main/java/duke/task/TasksList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class TasksList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String TODO_FORMAT \u003d \"The todo format is: todo \u003cdesc\u003e\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String EVENT_FORMAT \u003d \"The event format is: event \u003cdesc\u003e /at \u003ctime\u003e\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String DEADLINE_FORMAT \u003d \"The deadline format is: deadline \u003cdesc\u003e /by \u003ctime\u003e\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String TASK_NOT_FOUND \u003d \"Task not found\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final int NUM_ARGS_DEADLINE \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final int NUM_ARGS_EVENT \u003d 2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public  ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Todo addTodo(String description, boolean isDone) throws DukeException{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (description \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(TODO_FORMAT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Todo newTask \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Deadline addDeadline(String description, boolean isDone) throws DukeException{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String[] taskDetails \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if(taskDetails.length \u003c NUM_ARGS_DEADLINE) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Deadline newTask \u003d new Deadline(taskDetails[0], taskDetails[1], isDone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Event addEvent(String description, boolean isDone) throws DukeException{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String[] taskDetails \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if(taskDetails.length \u003c NUM_ARGS_EVENT) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(EVENT_FORMAT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Event newTask \u003d new Event(taskDetails[0], taskDetails[1], isDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Task delete(String description) throws DukeException{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if (task.description.equals(description)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                tasks.remove(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        throw new DukeException(TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "badcommand"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "todo 123"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "event 123 /at 12pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "deadline study /by Sleeptime"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done 123"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done study"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 13
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 1,
      "-": 37
    }
  }
]
