[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "# Notes"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Minimally, commit after completing each increment."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 3,
      "-": 26
    }
  },
  {
    "path": "data/tasksList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "event|true|asds|2222-12-13|"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "deadline|false|asddssssssss|2222-10-23|"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "event|false|asdads|1231-12-22|"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "deadline|false|asdadssaas|1225-12-12|"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "todo|true|123|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "todo|true|find my dog|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "event|false|visit my cat|2021-11-12|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "deadline|false|adopt a cat|2021-11-11|"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 8
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### Duke is a platform to  compile and organize your tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Keeping track of todos, event and deadlines that you add. Duke can show a list of all the tasks that you need to do and provide useful  commands to mark them as done, delete or find tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### Duke automatically saves and loads your tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "You can always come back later to find your last session automatically loaded without having to type additional commands. Tasks are also stored in plaintext for easy manipulation."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### `todo \u003cdesc\u003e` - Add a todo item"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Adds a todo item and gives it the description \\\u003cdesc\u003e , then adds it to the list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " A succesful addition will show a message indicating the task just added and the number of items in the list after adding it."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "`todo find my dog`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\t[T][✘] find my dog"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Now you have n task(s) in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### `deadline \u003cdesc\u003e /by \u003cdueDate\u003e` - Add a deadline item"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Adds a deadline item and gives it the description \\\u003cdesc\u003e then and  a due date of \\\u003cdueDate\u003e, then adds it to the list of tasks. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "A succesful addition will show a message indicating the task just added, its dueDate and the number of items in the list after adding it."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\\\u003cdueDate \u003e must be formatted as YYYY-MM-DD."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "`deadline adopt a cat /by 2021-11-11`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\t[D][✘] adopt a cat (by: Nov 11 2021)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Now you have n task(s) in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### `event \u003cdesc\u003e /at \u003cstartDate\u003e` - Add an event item"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Adds a event item and gives it the description \\\u003cdesc\u003e then and  a start time of \\\u003cstartDate\u003e, then adds it to the list of tasks. "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "A succesful addition will show a message indicating the task just added, its startDate and the number of items in the list after adding it."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\\\u003cstartDate\u003e must be formatted as YYYY-MM-DD."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "`event visit my cat /at 2021-11-12`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\t[E][✘] visit my cat (at: Nov 12 2021)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Now you have n task(s) in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### `delete \u003cdesc\u003e` - Delete a task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Deletes the first instance of a task in the list of tasks with a matching description to \\\u003cdesc\u003e. If no matches are found Duke will print a message that the task was not found else it will print the details of the task just deleted and the number of remaining tasks after deletion."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "`delete find my dog`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Got it. I\u0027ve deleted this task:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\t[T][✓] find my dog"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Now you have 8 task(s) in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### `done \u003cdesc\u003e` - Mark a task as done "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Marks done the first instance of a task in the list of tasks with a matching description to \\\u003cdesc\u003e. If no matches are found Duke will print a message that the task was not found else it will print the details of the task just marked."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "A done task has a [✓] indicated just before the task description. Otherwise it would be a [✘]."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "`done find my dog`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done find my dog"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\t[T][✓] find my dog"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "------------------------------"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### `find \u003cdesc\u003e` - List all tasks with a  matching description "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Finds all task in the list of tasks that match the string  \\\u003cdesc\u003e.  Descriptions which have \\\u003cdesc\u003e as a substring are also considered a match. Duke prints all the tasks that match as well as their descriptions."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "`find cat`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Here are the matching tasks in your list"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "1.[E][✘] visit my cat (at: Nov 12 2021)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "2.[D][✘] adopt a cat (by: Nov 11 2021)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### `list` - List all tasks and their descriptions "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Finds all task in the list of tasks that match the string  \\\u003cdesc\u003e.  Descriptions which have \\\u003cdesc\u003e as a substring are also considered a match. Duke prints all the tasks that match."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "1.[T][✘] find my dog"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "2.[E][✘] visit my cat (at: Nov 12 2021)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "3.[D][✘] adopt a cat (by: Nov 11 2021)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "---------------------------------------"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "### `bye` - Exit Duke"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Exit the program."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "abnermtj": 146,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.CommandParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * Manages Duke. It loops getting user input commands and executing them."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String TASKS_LIST_SAVE_PATH \u003d \"data/tasksList.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static TasksList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static boolean programIsRunning \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Starting method of the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param args Arguments provided by the user when first starting the program"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        enter();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        mainLoop();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Initializes various common objects that are passed as parameters to commands."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Greets the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void enter() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        storage \u003d new Storage(TASKS_LIST_SAVE_PATH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            tasks \u003d storage.loadTasksList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            ui.printDataLoadSuccess();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            ui.handleException(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            tasks \u003d new TasksList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printHomeScreen();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * A continuous loop that runs as long as the program is running."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Asks for user input which is parsed to generate a command object"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * following a Command Pattern. These commands are then executed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * This process loops till program is made to exit."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * This program also handle exception throw by command execution."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void mainLoop() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        while(programIsRunning) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String[] separatedInput \u003d ui.separateCommandAndArguments(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                Command command \u003d CommandParser.parseCommand(separatedInput);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                command.execute(tasks, ui ,storage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                if (command.isExit) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            } catch(DukeException exception) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                ui.handleException(exception);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Exits the Program and says goobye to user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        programIsRunning \u003d false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printExitScreen();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 81,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * handles the add command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Constructs a AddCommand and sets command type and description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param command the type of command subclass that this.execute() produces"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description  additional data the command may need to execute."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public AddCommand(String command, String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Adds one of the subclasses of Command (based to this class\u0027s private command field)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * to the taskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList the taskList to add the new Task to"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param ui used to print successful addition of a task to taskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param storage not used"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasksList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            newTask \u003d tasksList.addTodo(description, false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            newTask \u003d tasksList.addDeadline(description, false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            newTask \u003d tasksList.addEvent(description, false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printSuccessfulAddEntry(tasksList, newTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        storage.saveTasksList(tasksList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 53
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * handles the bye command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * mark and object of ByeCommand as an exit command, the main loop checks thi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * field to see if the Duke needs to close."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList not used"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param ui not used"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param storage not used"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 25
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * The base class for all command which allow each command to be its own separate"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * script that encapsulated all the information they need."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Constructs a command, by default the command is not an exit (the program) command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * so isExit is set to false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Command(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * makes all command need to be able the execute, the parameters provide subclasses with"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * objects that they all generally need."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList the tasksList containing all tasks Duke current has"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param ui used to manage input/output to the Command Line Interface"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param storage for saving the updated tasks list to the save file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @exception DukeException used to signal errors in execution."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public abstract void execute(TasksList tasksList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * The handler for the delete command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Constructs a DeleteCommand and sets the description keyword to look for"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description The string to search for when looking for what to delete"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public DeleteCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Deletes the first instance of a task with a matching description to \u0027description\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList the tasksList to delete from"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param ui used to print succesful removal of a task from tasksList"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param storage for saving the updated tasks list to the save file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @exception DukeException when there is a failed delete or was unable to save, this method"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * relays it."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasksList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Task task \u003d tasksList.delete(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printSuccessfulRemoveEntry(tasksList, task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        storage.saveTasksList(tasksList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * The handler for the done command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String DONE_COMMAND_FORMAT \u003d \"The done command format is: done \u003ctaskDescription\u003e\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String TASK_NOT_FOUND \u003d \"Task not found\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Constructs a DoneCommand and sets the name of the task to look for"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param taskName The string to search for when looking for what to mark as done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public DoneCommand (String taskName){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Marks the first instance of a task with a matching description to \u0027description\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * isDone field as true."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList the tasksList to delete from"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param ui used to print succesful marking of done of a task from tasksList"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param storage for saving the updated tasks list to the save file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @exception DukeException when there is a failed find file or was unable to save, this method"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * relays it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasksList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (taskName \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(DONE_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        // Looks for a task with matching the description,  and marks it as done in tasksList"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (Task task : tasksList.tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if (task.description.equals(taskName) \u0026\u0026 !task.isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                task.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                ui.print(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                        \"\\t\" + task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                ui.printLineSeparator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                storage.saveTasksList(tasksList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        throw new DukeException(TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 60
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * The handler for the find command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Finds all instances of a task with a matching keyword to \u0027keyword\u0027 in this class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList the tasksList to find from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param ui used to print tasks found"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param storage not used"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasksList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (Task task : tasksList.tasks){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if (task.description.contains(keyword)){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (matchingTasks.isEmpty()){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            ui.printNoFoundItems();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            ui.printFoundItems(matchingTasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 43
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * The handler for the list command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Lists all the tasks in a numbered order in the tasksList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList the tasksList to print from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param ui not used"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param storage not used"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(TasksList tasksList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        ui.printTasksList(tasksList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * The base class for all exceptions specific to Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public final String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Constructs a DukeException with a description of what went wrong"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description description or details of the exception"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public DukeException (String description){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 17
    }
  },
  {
    "path": "src/main/java/duke/io/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * This class delegates a specific command subclass based on used input by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * instancing the correct subclass."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String BAD_COMMAND \u003d \"Duke does not understand that command\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Derives the correct Command object base on the description received."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param commandDesc describes the type of command as well as additional details it may need."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @return A Command object that can be run"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws  DukeException unable to generate command as the description not recognized"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static Command parseCommand(String[] commandDesc) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String commandName \u003d commandDesc[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String arguments \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (commandDesc.length \u003e 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            arguments \u003d commandDesc[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        switch (commandName) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new DoneCommand(arguments);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"todo\": // Fallthrough"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"deadline\": // Fallthrough"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new AddCommand(commandName, arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            command \u003d new FindCommand(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(BAD_COMMAND);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 57
    }
  },
  {
    "path": "src/main/java/duke/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * This class handles the reading and writing of files as well as manage which data should be saved."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String CANNOT_READ_SAVE_FILE \u003d \"Cannot to read save File\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String CANNOT_CREATE_DIRECTORIES_AND_FILES \u003d \"Cannot create directories and files\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String CANNOT_WRITE_TO_TASK_LIST_SAVE_FILE \u003d \"Cannot write to task list save file\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String saveFilePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Constructs a Storage class whole save file is at saveFilePath."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * This is the file read and written to."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param saveFilePath The path to the save file for an object of this class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Storage(String saveFilePath){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.saveFilePath \u003d saveFilePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // READ FILE//////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Parses through the savefile and puts elements into a TaskList object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @return returns the tasklist containing all the loaded tasks from the save file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws  DukeException the save file cannot be read, might be due to system permissions"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public TasksList loadTasksList() throws DukeException{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        TasksList tasksList \u003d new TasksList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            File saveFile \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            Scanner saveFileScanner \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            // parses each line in the save file, add them to the tasksList one by one."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            while (saveFileScanner.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String curLine \u003d saveFileScanner.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String[] taskDesc \u003d curLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String command \u003d taskDesc[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String taskArgs;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    taskArgs \u003d taskDesc[2];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    tasksList.addTodo(taskArgs,Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    taskArgs \u003d taskDesc[2] + \" /by \" + taskDesc[3];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    tasksList.addDeadline(taskArgs, Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    taskArgs \u003d taskDesc[2] + \" /at \" + taskDesc[3];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    tasksList.addEvent(taskArgs, Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(CANNOT_READ_SAVE_FILE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // WRITE FILE//////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Calls methods to write data to the savefile as well create as any missing directories."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList the TasksList to be saved into the save file"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws  DukeException couldn\u0027t not create directories or the save file"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void saveTasksList(TasksList tasksList) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        File saveFile \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        createDirectories(saveFile);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        createSaveFile(tasksList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Creates missing directories to the save file if they don\u0027t already exist"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param saveFile used to make the directories missing in the path."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws  DukeException couldn\u0027t not create directories"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void createDirectories(File saveFile) throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        boolean fileExists \u003d saveFile.exists();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (!fileExists) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            } catch (IOException exception) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                throw new DukeException(CANNOT_CREATE_DIRECTORIES_AND_FILES);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Creates the save file if it didn\u0027t exist."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Writes(saves) each task in taskslist one by one into one line each in the save file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Stores the fields for the different Task in human readable plain text"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList used to create the save file itself"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws  DukeException couldn\u0027t not create directories"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void createSaveFile(TasksList tasksList) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            FileWriter saveFileWriter \u003d new FileWriter(saveFilePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            // write each task as its own line in the save file"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            for (Task task : tasksList.tasks) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    storeLine(saveFileWriter, \"todo\", Boolean.toString(task.isDone), task.description);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    storeLine(saveFileWriter, \"deadline\", Boolean.toString(task.isDone), task.description, ((Deadline) task).dueDate.toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                    storeLine(saveFileWriter, \"event\", Boolean.toString(task.isDone), task.description, ((Event) task).startDate.toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            saveFileWriter.close();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(CANNOT_WRITE_TO_TASK_LIST_SAVE_FILE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Combines the elements in args as a single string that is then stored"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * in the save file as its own line."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param saveFileWriter used to write to the save file"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param elements the fields of the object that are to be combined into one string"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws IOException unable to write to the save file"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static void storeLine(FileWriter saveFileWriter, String ... elements) throws IOException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        StringBuilder lineToStore \u003d new StringBuilder();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (String element : elements) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            lineToStore.append(element).append(\"|\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        lineToStore.append(\"\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        saveFileWriter.write(lineToStore.toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 150
    }
  },
  {
    "path": "src/main/java/duke/io/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.task.TasksList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * This class handles what is displayed and inputted into the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * It provides methods to easily to get input and parse it"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * as well as print out commonly used text to output."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // INPUT ///////////////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Get the next line of input from the user after he hits return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @return returns the input as a String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *  without white space at the start or end of it."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String input \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Processes the input for further manipulation."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param input the unprocessed input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @return  Returns an array where the very first word (command) is put into index 0 and everything else (arguments) in index 1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String[] separateCommandAndArguments(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return input.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // OUTPUT //////////////////////////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "      * All duke exception are handled by this method, which prints out the error message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "      *  contained in the exception."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "      *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "      * @param exception the unhandled exception."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "      */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void handleException(DukeException exception) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Exception!\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"\\t\" + exception.description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Short hand for printing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param text text to print"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void print(String text) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * prints a line to separate messages, etc"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printLineSeparator() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"---------------------------------------\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * prints the number of tasks in the tasksList"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList the tasksList which we want the size of"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printNumOfTasks(TasksList tasksList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        int numOfTasks \u003d tasksList.size();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Now you have \" + numOfTasks + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Prints message to greet user or other info he might want to know"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printHomeScreen() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Hello! I\u0027m Duke\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Prints message to persuade the user to come back and use Duke"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printExitScreen() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Prints that a task has been added to tasksList successfully and then prints"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * the number of tasks tasksList has now"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList The TaskList who was just added to. Thus increased in size."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param newTask The Task just added"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printSuccessfulAddEntry(TasksList tasksList, Task newTask) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"\\t\" + newTask);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printNumOfTasks(tasksList);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Prints that a task has been deleted to tasksList successfully and then prints"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * the number of tasks tasksList has now"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList The TaskList who was just added to. Thus increased in size."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param deletedTask The Task just deleted"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printSuccessfulRemoveEntry(TasksList tasksList, Task deletedTask) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Got it. I\u0027ve deleted this task:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                \"\\t\" + deletedTask);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printNumOfTasks(tasksList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Prints that data has been loaded into tasksList"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printDataLoadSuccess() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Successfully loaded Data!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printFoundItems(ArrayList\u003cTask\u003e foundTasks){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"Here are the matching tasks in your list\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printTasks(foundTasks);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printNoFoundItems(){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        print(\"No matching tasks\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Prints the each task and its details in the taskList"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * as well as a numbering in order from first element(top) to last (bottom)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param tasksList  the taskList to print tasks from"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printTasksList(TasksList tasksList) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printTasks(tasksList.tasks);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void printTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        int entryNum \u003d 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            print(entryNum + \".\" + task);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            entryNum++;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 181
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * A subclass of Task that has a due date"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public LocalDate dueDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Constructs a Deadline with a description and marks it if it is done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description The description of a Deadline gives additional details of the specific Deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param dueDate The time the Deadline must be submited by."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param isDone A Deadline can be marked as done or finished."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     public Deadline(String description, LocalDate dueDate, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "          super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "          this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Returns us a String representation of the Deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * useful for printing our task details."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * A subclass of Task that has a start time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public LocalDate startDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Constructs a Event with a description and marks it if it is done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description The description of a Event gives additional details of the specific Event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param startDate The time the Event begins or starts."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param isDone A Event can be marked as done or finished."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Event(String description, LocalDate startDate, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Returns us a String representation of the Event "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * useful for printing our task details."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * The base class for all entries in the tasksList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * Used to store details of each Task and provide helper methods to"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * help print tasks status."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Constructs a Task with a description and marks it if it is done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description The description of a Task gives additional details of the specific Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param isDone A Task can be marked as done or finished."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Returns \u0027Tick\u0027 if the task is done else \u0027X\u0027 symbol"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Returns us a String representation of the Task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * useful for printing our task details."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[\" + getStatusIcon() +\"]\" + \" \" + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 37
    }
  },
  {
    "path": "src/main/java/duke/task/TasksList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * A Collection to manage all the Task classes and subclasses. Provides"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * arrayList like functionality to more easily manipulate data."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class TasksList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String TODO_FORMAT \u003d \"The todo format is: todo \u003cdesc\u003e\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String EVENT_FORMAT \u003d \"The event format is: event \u003cdesc\u003e /at \u003ctime\u003e\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String DEADLINE_FORMAT \u003d \"The deadline format is: deadline \u003cdesc\u003e /by \u003ctime\u003e\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String TASK_NOT_FOUND \u003d \"Task not found\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final String DATE_FORMAT \u003d \"The date formatting is : YYYY-MM-DD, use leading zeroes to pad for missing digits\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final int NUM_ARGS_DEADLINE \u003d 2;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public static final int NUM_ARGS_EVENT \u003d 2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public  ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Prints the number of elements currently in the ArrayList\u003c\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Creates and adds a Todo to the ArrayList with specified details in the arguments."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description the details of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param isDone marks Todo as done if true and vice versa."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @return The object just created if successful else it will throw an exception."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws DukeException  If the format add command is wrong"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Todo addTodo(String description, boolean isDone) throws DukeException{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (description \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(TODO_FORMAT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Todo newTask \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Creates and adds a Deadline to the ArrayList with specified details in the arguments."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description the details of the task includes the due date."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param isDone marks Deadline as done if true and vice versa."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @return The object just created if successful else it will throw an exception."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws DukeException  If the format add command is wrong"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Deadline addDeadline(String description, boolean isDone) throws DukeException{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String[] taskDetails \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if(taskDetails.length \u003c NUM_ARGS_DEADLINE) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        LocalDate date \u003d getDateString(taskDetails[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Deadline newTask \u003d new Deadline(taskDetails[0], date, isDone);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Creates and adds a Event to the ArrayList with specified details in the arguments."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description the details of the task includes the start date."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param isDone marks Event as done if true and vice versa."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @return The object just created if successful else it will throw an exception."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws DukeException  If the format add command is wrong"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Event addEvent(String description, boolean isDone) throws DukeException{"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        String[] taskDetails \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (taskDetails.length \u003c NUM_ARGS_EVENT) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            throw new DukeException(EVENT_FORMAT);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        LocalDate date \u003d getDateString(taskDetails[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Event newTask \u003d new Event(taskDetails[0], date, isDone);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Deleted the first task with a matching description field(not name)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @param description the details in the task to be deleted."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @return A copy of the object just deleted"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * @throws DukeException  If the task to delete is not found"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Task delete(String description) throws DukeException{"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            if (task.description.equals(description)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                tasks.remove(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        throw new DukeException(TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    // Tries to find a date in str to convert and return as a LocalDate object"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public LocalDate getDateString(String str) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\"); // Looks for YYYY-MM-DD or YYYY-DD-MM formatting"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(str);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        boolean isDateFound \u003d matcher.find();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        if (isDateFound) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                String match \u003d matcher.group();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return LocalDate.parse(match);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                throw new DukeException(DATE_FORMAT);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        throw new DukeException(DATE_FORMAT);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 134
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * Returns us a String representation of the Todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     * useful for printing our task details."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "badcommand"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "todo 123"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "event 123 /at 12pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "deadline study /by Sleeptime"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done 123"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done study"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 13
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 1,
      "-": 37
    }
  }
]
