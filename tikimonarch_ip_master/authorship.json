[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "//Entirely refurbishing Duke to OOP based in the nxt version :)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "    public static void main(String[] args) throws EmptyTodoException, IncorrectInputException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        String border \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        System.out.print(border + \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\\n\" + border);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        int size \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        String temp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        String tag \u003d \"[ ]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        String[] temp2 \u003d new String[2];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        String[] list \u003d new String[100];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                Scanner read \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                command \u003d read.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        System.out.print(border + \"Empty\\n\" + border);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        System.out.print(border + \"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                            System.out.println(\" \" + Integer.toString(i + 1) + \".\" + list[i]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        System.out.print(border);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    String[] arrOfStr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    temp \u003d list[Integer.valueOf(arrOfStr[1]) - 1].replace(\u0027✗\u0027, \u0027✓\u0027);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    list[Integer.valueOf(arrOfStr[1]) - 1] \u003d temp;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    System.out.print(border + \" Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    System.out.println(\"  \" + list[Integer.valueOf(arrOfStr[1]) - 1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    System.out.print(border);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        if (command.equals(\"todo\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                            throw new EmptyTodoException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        tag \u003d \"[T]\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        command \u003d command.replaceAll(\"todo \", \"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        list[size] \u003d tag + \"[✗] \" + command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        tag \u003d \"[D]\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        command \u003d command.replaceAll(\"deadline \", \"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        temp2 \u003d command.split(\" /by\", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        list[size] \u003d tag + \"[✗] \" + temp2[0] + \" (by:\" + temp2[1] + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    } else if (command.contains(\"event \")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        tag \u003d \"[E]\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        command \u003d command.replaceAll(\"event \", \"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        temp2 \u003d command.split(\" /at\", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        list[size] \u003d tag + \"[✗] \" + temp2[0] + \" (at:\" + temp2[1] + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                        throw new IncorrectInputException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    System.out.println(border + \" Got it. I\u0027ve added this task:\\n  \" + list[size]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    size++;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                    System.out.println(\" Now you have \" + Integer.toString(size) + \" tasks in the list.\\n\" + border);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "            } catch (EmptyTodoException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                System.out.print(border);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                System.out.print(border);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "            } catch (IncorrectInputException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                System.out.print(border);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "                System.out.print(border);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "        System.out.print(border + \" Bye. Hope to see you again soon!\\n\" + border);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tikimonarch": 72,
      "-": 9
    }
  },
  {
    "path": "src/main/java/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "public class EmptyTodoException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tikimonarch": 2
    }
  },
  {
    "path": "src/main/java/IncorrectInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "public class IncorrectInputException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tikimonarch"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tikimonarch": 2
    }
  }
]
