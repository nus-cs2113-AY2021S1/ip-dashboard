[
  {
    "path": "src/main/java/duke/Command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    todo, event, deadline, done, delete"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 5
    }
  },
  {
    "path": "src/main/java/duke/Command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 4
    }
  },
  {
    "path": "src/main/java/duke/Command/HandleInput.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.FileIO.FileIO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class HandleInput {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static boolean handlesInput(String input, boolean printMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (printMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printDashedLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (isCommand(input, \"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.printTaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, \"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.markAsDone(input, printMessage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, \"deadline\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.addDeadline(input, printMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, \"event\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.addEvent(input, printMessage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, \"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.addTask(input, printMessage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, \"delete\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.deleteTask(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, \"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                FileIO.writeToFile(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printInvalidInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (printMessage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printDashedLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static boolean isCommand(String input, String command) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (input.strip().toLowerCase().contains(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return input.strip().equalsIgnoreCase(\"list\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return input.strip().toLowerCase().startsWith(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limgl1998": 52
    }
  },
  {
    "path": "src/main/java/duke/Command/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void start() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printDashedLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printDashedLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printDashedLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printDashedLine() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printGotIt() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printNumberOfTasksInList(int numberOfTasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean isMoreThanOne \u003d (numberOfTasks \u003e 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Now you have \" + numberOfTasks + \" task\" + (isMoreThanOne ? \"s\" : \"\") + \" in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printInvalidInput() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printEmptyTodoDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printEmptyEventDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \\u2639 OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printEmptyDeadlineDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printInvalidTaskNumber(int numberOfTasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \\u2639 OOPS!!! Please input a task number between 1 and \" + numberOfTasks + \".\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printEmptyTaskList() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \\u2639 OOPS!!! List is empty\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printMissingKeyword(String keyword) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \\u2639 OOPS!!! Please include the keyword \" + keyword + \" .\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printTaskIsDeleted() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void printTaskIsMarkedAsDone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 70
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.HandleInput;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.FileIO.FileIO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean endDuke \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        FileIO.readFromFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Message.start();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        while (!endDuke) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String command \u003d in.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            endDuke \u003d HandleInput.handlesInput(command,true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Message.exit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 21,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/FileIO/FileIO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.FileIO;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.HandleInput;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class FileIO {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final int INDEX_OF_TASK_TYPE \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void readFromFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (doesFileNotExist()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        File data \u003d new File(\"data/data.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Scanner s \u003d new Scanner(data); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                HandleInput.handlesInput(s.nextLine(),false);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(\"\\u2639 OOPS!!! File does not exist. Please create a text file named \\\"data\\\" in the \\\"data\\\" folder.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static boolean doesFileNotExist() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        File folder \u003d new File(\"data\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(\"\\u2639 OOPS!!! Folder does not exist. Creating a folder named \\\"data\\\" in the same directory...\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            boolean isFolderCreatedSuccessfully \u003d folder.mkdir();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (isFolderCreatedSuccessfully) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(\"Folder is created successfully.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(\"Please create a folder named \\\"data\\\" in the same directory manually.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        File data \u003d new File(\"data/data.txt\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!data.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(\"\\u2639 OOPS!!! File does not exist. Creating a text file named \\\"data\\\" in the \\\"data\\\" folder...\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                FileWriter fw \u003d new FileWriter(data.getAbsolutePath());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                if (data.exists()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    System.out.println(\"File is created successfully.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    System.out.println(\"Please create a text file named \\\"data\\\" in the \\\"data\\\" folder manually.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void writeToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (doesFileNotExist()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        File data \u003d new File(\"data/data.txt\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            FileWriter fw \u003d new FileWriter(data.getAbsolutePath());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                String input \u003d formatListDataIntoStorageForm(list, i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                fw.write(input + \"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(\"OOPS!!! something went wrong\"); //remember to change this"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static String formatListDataIntoStorageForm(ArrayList\u003cTask\u003e list, int index) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String input \u003d list.get(index).getStatusAndDescription();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        switch (input.strip().toCharArray()[INDEX_OF_TASK_TYPE]) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        case (\u0027T\u0027):"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output \u003d \"todo \" + list.get(index).getDescription();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        case (\u0027D\u0027):"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output \u003d \"deadline \" + list.get(index).getDescription() + \"/by \" + list.get(index).getAdditionalInformation();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        case (\u0027E\u0027):"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output \u003d \"event \" + list.get(index).getDescription() + \"/at \" + list.get(index).getAdditionalInformation();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (list.get(index).getDone()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output +\u003d \"\\ndone \" + (index + 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 101
    }
  },
  {
    "path": "src/main/java/duke/GeneralMethods.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class GeneralMethods {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static String removeCommandFromInput(String input, CommandType command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int commandLength \u003d command.toString().length();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        input \u003d input.strip();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        input \u003d input.substring(commandLength);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        input \u003d input.strip();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static boolean isNumeric(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (command.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (char c : command.toCharArray()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (!Character.isDigit(c)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 27
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getStatusAndDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return \"[D]\" + super.getStatusAndDescription() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getAdditionalInformation() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 20
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getStatusAndDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return \"[E]\" + super.getStatusAndDescription() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getAdditionalInformation() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 23
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Boolean getDone() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void markTaskAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return (\"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getStatusAndDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getAdditionalInformation() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 35
    }
  },
  {
    "path": "src/main/java/duke/Tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.GeneralMethods;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.Message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int NUMBER_OF_PARTS \u003d 2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printEmptyTaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(\"     \" + (i + 1) + \". \" + list.get(i).getStatusAndDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void markAsDone(String command, boolean printMessage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        command \u003d GeneralMethods.removeCommandFromInput(command, CommandType.done);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        //Error handling for input \"done\" without task number"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (isTaskListEmptyOrIsCommandTypeInvalid(command)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        //Error handling for invalid task number"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.get(index).markTaskAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (printMessage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                Message.printTaskIsMarkedAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(\"      \" + list.get(index).getStatusAndDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printInvalidTaskNumber(list.size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void addTask(String description, boolean printMessage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        description \u003d GeneralMethods.removeCommandFromInput(description, CommandType.todo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.add(new ToDo(description));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (printMessage) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                Message.printGotIt();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                printStatusDescriptionAndNumberOfTasks();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printEmptyTodoDescription();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void addEvent(String description, boolean printMessage) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!description.contains(\"/at\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printMissingKeyword(\"/at\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        description \u003d GeneralMethods.removeCommandFromInput(description, CommandType.event);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String[] eventInformation \u003d description.split(\"/at\", NUMBER_OF_PARTS);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        /* eventInformation[0] \u003d description of event"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "         * eventInformation[1] \u003d event date"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "         */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (doNotHaveDescription(eventInformation)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printEmptyEventDescription();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.add(new Event(eventInformation[0], eventInformation[1].strip()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (printMessage) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printGotIt();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            printStatusDescriptionAndNumberOfTasks();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void addDeadline(String description, boolean printMessage) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!description.contains(\"/by\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printMissingKeyword(\"/by\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        description \u003d GeneralMethods.removeCommandFromInput(description, CommandType.deadline);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String[] deadlineInformation \u003d description.split(\"/by\", NUMBER_OF_PARTS);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        /* deadlineInformation[0] \u003d description of task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "         * deadlineInformation[1] \u003d deadline date"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "         */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (doNotHaveDescription(deadlineInformation)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printEmptyDeadlineDescription();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.add(new Deadline(deadlineInformation[0], deadlineInformation[1].strip()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (printMessage) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printGotIt();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            printStatusDescriptionAndNumberOfTasks();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private void printStatusDescriptionAndNumberOfTasks() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"       \" + list.get(list.size() - 1).getStatusAndDescription());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Message.printNumberOfTasksInList(list.size());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean doNotHaveDescription(String[] input) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return input.length !\u003d NUMBER_OF_PARTS;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void deleteTask(String command) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        command \u003d GeneralMethods.removeCommandFromInput(command, CommandType.delete);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (isTaskListEmptyOrIsCommandTypeInvalid(command)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        //Error handling for invalid task number"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (index \u003e\u003d list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printTaskIsDeleted();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(\"      \" + list.get(index).getStatusAndDescription());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.remove(index);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printNumberOfTasksInList(list.size());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printInvalidTaskNumber(list.size());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean isTaskListEmptyOrIsCommandTypeInvalid(String command) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printEmptyTaskList();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else if (command.isEmpty() || !GeneralMethods.isNumeric(command)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Message.printInvalidTaskNumber(list.size());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 158
    }
  },
  {
    "path": "src/main/java/duke/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getStatusAndDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return \"[T]\" + super.getStatusAndDescription();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 13
    }
  },
  {
    "path": "text-ui-test/data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done 2"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "lists"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done             3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done $2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "deadline tutorial tonight"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "event lunch with cousins saturday"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "todo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Command\\*.java ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\Tasks\\*.java ..\\src\\main\\java\\duke\\FileIO\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 2,
      "-": 19
    }
  }
]
