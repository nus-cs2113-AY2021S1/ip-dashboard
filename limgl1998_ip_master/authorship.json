[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### Adding tasks to the list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Tasks to be done can be added to the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Tasks include todo, event and deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### Show all tasks in list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Tasks in the list can be shown."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### Mark tasks as done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Completed tasks can be marked as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### Removing tasks from list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Unwanted tasks can be removed from the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### Find task in list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Tasks in the list can be searched for by using keywords."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### Save / Load tasks in list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Data entered into the program will be saved automatically."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Previously stored data will be loaded into the program upon startup."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "A list of all the commands will be shown."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### \u0027todo\u0027 - Adds a todo task into the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "A todo task containing a description will be added to the list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "todo buy grocery"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "       [T][✘] buy grocery"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### \u0027event\u0027 - Adds an event into the list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "An event task containing a description and date will be added to the list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "event lunch /at Saturday 3pm"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "       [E][✘] lunch (at: Saturday 3pm)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Note: keyword \u0027/at\u0027 needs to be included"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### \u0027deadline\u0027 - Adds a deadline task to the list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "A deadline task containing a description and a date due will be added to the list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "deadline project /by next mon"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "       [D][✘] project (by: next mon)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Note: keyword \u0027/by\u0027 needs to be included"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### \u0027list\u0027 - shows all the tasks in the list"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "A list of tasks along with their descriptions and status will be shown"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     1. [T][✘] buy grocery"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     2. [E][✘] lunch (at: Saturday 3pm)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     3. [D][✘] project (by: next mon)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### \u0027done\u0027 - marks a completed task as done"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "A specified task in the list will be marked as done"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Nice! I\u0027ve marked this task as done!"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      [E][✓] lunch (at: Saturday 3pm)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Note: task number should be specified and within the range of total number of tasks"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### \u0027delete\u0027 - deletes a task in the list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "An unwanted task in the list will be removed"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      [D][✘] project (by: next mon)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Note: task number should be specified and within the range of total number of tasks"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### \u0027find\u0027 - looks for a task in the list"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Locates task(s) containing the keyword(s) entered in the query"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "find lunch"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     1. [E][✓] lunch (at: Saturday 3pm)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "Note: the keyword maybe be found in either the description or the additional information of the task"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "### \u0027help\u0027 - a list of all availiable commands will be shown"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "help"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     Here are the commands available in Duke:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     todo    : adds a todo task to the list"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     eg. todo do homework"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     event   : adds an event task to the list"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     eg. event lunch with cousins /at Saturday 3pm"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     deadline: adds a deadline task to the list"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     eg. deadline iP /by wed"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     done    : marks a task in the list as done"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     eg. done 1"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     delete  : deletes a task in the list"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     eg. delete 3"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     find    : looks for the keyword in the list"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     eg. find lunch"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     list    : lists out all the tasks in the list"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     eg. list"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     bye     : exits the program"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     eg. bye"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limgl1998": 171,
      "-": 22
    }
  },
  {
    "path": "src/main/java/duke/Command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * Only type of commands allowed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * All other commands not found in this list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * are treated as invalid"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    TODO, EVENT, DEADLINE, DONE, DELETE, FIND, LIST, BYE, HELP"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 11
    }
  },
  {
    "path": "src/main/java/duke/Command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 4
    }
  },
  {
    "path": "src/main/java/duke/Command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.FileIO.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String LIST_KEYWORD \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final TaskList list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Parser(TaskList list) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        storage.readFromFile(list.getList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Takes in the user\u0027s input and carry out the instructions if possible"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns if user input is bye"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * list data is updated upon exit"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return whether input is BYE"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public boolean handlesInput(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui.printDashedLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (isCommand(input, CommandType.LIST)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.printTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, CommandType.DONE)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.markAsDone(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                storage.writeToFile(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, CommandType.DEADLINE)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.addDeadline(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                storage.writeToFile(list);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, CommandType.EVENT)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.addEvent(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                storage.writeToFile(list);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, CommandType.TODO)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.addTask(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                storage.writeToFile(list);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, CommandType.DELETE)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.deleteTask(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                storage.writeToFile(list);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, CommandType.FIND)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                list.find(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, CommandType.HELP)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                ui.printHelp();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else if (isCommand(input, CommandType.BYE)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                storage.writeToFile(list);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printInvalidInput();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui.printDashedLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Takes in the user\u0027s input and compares with a set of given commands"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param input user inputs"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param type  one of the defined commands"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return whether input contains one of specified command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean isCommand(String input, CommandType type) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String command \u003d type.toString().toLowerCase();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        input \u003d input.strip().toLowerCase();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (input.contains(LIST_KEYWORD)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return input.equalsIgnoreCase(LIST_KEYWORD);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return input.startsWith(command);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limgl1998": 86
    }
  },
  {
    "path": "src/main/java/duke/Command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String SAD_SMILEY \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Print start message"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printStart() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printDashedLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printDashedLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Print exit message"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printDashedLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printDashedLine() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printGotIt() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints number of tasks in the list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param numberOfTasks number of tasks in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printNumberOfTasksInList(int numberOfTasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean isMoreThanOne \u003d (numberOfTasks \u003e 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Now you have \" + numberOfTasks + \" task\" + (isMoreThanOne ? \"s\" : \"\") + \" in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printInvalidInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \" + SAD_SMILEY + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printSuggestUsingHelpCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printEmptyTodoDescription() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \" + SAD_SMILEY + \" OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printEmptyEventDescription() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \" + SAD_SMILEY + \" OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printEmptyDeadlineDescription() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \" + SAD_SMILEY + \" OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Tells user the input is invalid and suggests range of valid inputs"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param numberOfTasks total number of tasks in the list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printInvalidTaskNumber(int numberOfTasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \" + SAD_SMILEY + \" OOPS!!! Please input a task number between 1 and \" + numberOfTasks + \".\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printEmptyTaskList() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \" + SAD_SMILEY + \" OOPS!!! List is empty\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printMissingKeyword(String keyword) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \" + SAD_SMILEY + \" OOPS!!! Please include the keyword \" + keyword + \" .\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTaskIsDeleted() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTaskIsMarkedAsDone() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printEmptyFindDescription() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"    \" + SAD_SMILEY + \" OOPS!!! The description of find cannot be empty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printFolderNotFound() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(SAD_SMILEY + \" OOPS!!! Folder does not exist. Creating a folder named \\\"data\\\" in the same directory...\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printFolderCreationSuccess() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"Folder is created successfully.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printFolderCreationFailure() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(SAD_SMILEY + \" OOPS!!! Folder creation failed\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"Please create a folder named \\\"data\\\" in the same directory manually.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printFileNotFound() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(SAD_SMILEY + \" OOPS!!! File does not exist. Creating a text file named \\\"data\\\" in the \\\"data\\\" folder...\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printFileCreationSuccess() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"File is created successfully.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printFileCreationFailure() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(SAD_SMILEY + \" OOPS!!! File creation failed\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"Please create a text file named \\\"data\\\" in the \\\"data\\\" folder manually.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printSomethingWentWrong() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(SAD_SMILEY + \" OOPS!!! something went wrong\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printMatchingTasksNotFound() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(SAD_SMILEY + \" OOPS!!! No matching tasks are found\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printMatchingTasksFound() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printHereAreYourTasks() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     Here are the commands available in Duke:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     todo    : adds a todo task to the list\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     eg. todo do homework\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     event   : adds an event task to the list\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     eg. event lunch with cousins /at Saturday 3pm\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     deadline: adds a deadline task to the list\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     eg. deadline iP /by wed\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     done    : marks a task in the list as done\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     eg. done 1\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     delete  : deletes a task in the list\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     eg. delete 3\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     find    : looks for the keyword in the list\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     eg. find lunch\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     list    : lists out all the tasks in the list\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     eg. list\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     bye     : exits the program\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"     eg. bye\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private void printSuggestUsingHelpCommand() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"      Enter \\\"help\\\" to find out more about the commands available\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 159
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final TaskList list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Program continuously prompt the user for inputs until"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * command \"bye\" is keyed in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void runUntilByeCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean endDuke \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        Parser parser \u003d new Parser(list);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        while (!endDuke) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String command \u003d in.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            endDuke \u003d parser.handlesInput(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui.printStart();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private void end() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui.printExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        runUntilByeCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        end();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 49,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/FileIO/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.FileIO;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.GeneralMethods;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Tasks.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * Allows the user to read or write data to a local file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int INDEX_OF_TASK_TYPE \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int NUMBER_OF_PARTS \u003d 2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String EVENT_KEYWORD \u003d \"/at\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String DEADLINE_KEYWORD \u003d \"/by\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int LENGTH_OFFSET_FOR_STATUS_ICON \u003d 4;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static final String FOLDER_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Loads data from save file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void readFromFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (doesFileNotExist()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        File data \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            Scanner s \u003d new Scanner(data);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                transferDataInToList(list, index, s.nextLine());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printSomethingWentWrong();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Checks if there the \"data\" file and \"data\" folder exists in the specified path"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * If either does not exist, program will create a the missing objects respectively"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns true if file / folder does not exist and cannot be created"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return whether file exist or not"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean doesFileNotExist() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        File folder \u003d new File(FOLDER_PATH);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printFolderNotFound();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            boolean isFolderCreatedSuccessfully \u003d folder.mkdir();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (isFolderCreatedSuccessfully) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                ui.printFolderCreationSuccess();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                ui.printFolderCreationFailure();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        File data \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!data.exists()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printFileNotFound();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                // to create a file in case it does not exist"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                FileWriter fw \u003d new FileWriter(data.getAbsolutePath());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                if (data.exists()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    ui.printFileCreationSuccess();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    ui.printFileCreationFailure();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Writes data from the task list into the save file"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param taskList list where data is stored"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void writeToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (doesFileNotExist()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        File data \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            FileWriter fw \u003d new FileWriter(data.getAbsolutePath());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                String input \u003d formatListDataIntoStorageForm(list, i);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                fw.write(input + \"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printSomethingWentWrong();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns the a string formatted to be stored"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list  list where data is stored"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param index index of data in list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return string formatted to be stored"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static String formatListDataIntoStorageForm(ArrayList\u003cTask\u003e list, int index) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String input \u003d list.get(index).getStatusAndDescription();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        switch (input.strip().toCharArray()[INDEX_OF_TASK_TYPE]) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        case (\u0027T\u0027):"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output \u003d CommandType.TODO.toString() + \" \" + list.get(index).getDescription();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        case (\u0027D\u0027):"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output \u003d CommandType.DEADLINE.toString() + \" \" + list.get(index).getDescription()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    + DEADLINE_KEYWORD + \" \" + list.get(index).getAdditionalInformation();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        case (\u0027E\u0027):"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            output \u003d CommandType.EVENT.toString() + \" \" + list.get(index).getDescription()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    + EVENT_KEYWORD + \" \" + list.get(index).getAdditionalInformation();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        output +\u003d \" \" + list.get(index).getStatusIcon();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Writes the data in the text file into list in program"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param list  list where data is to be stored in program"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param input raw data from the text file"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private void transferDataInToList(ArrayList\u003cTask\u003e list, int index, String input) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        boolean isDone \u003d input.contains(TICK_ICON);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        // removing status icon from input"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int endOfSubString \u003d input.length() - LENGTH_OFFSET_FOR_STATUS_ICON;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        input \u003d input.substring(0, endOfSubString);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (input.startsWith(CommandType.EVENT.toString())) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            input \u003d GeneralMethods.removeCommandFromInput(input, CommandType.EVENT);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            /* eventInformation[0] \u003d description of event"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "             * eventInformation[1] \u003d event date"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "             */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String[] eventInformation \u003d input.split(EVENT_KEYWORD, NUMBER_OF_PARTS);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.add(new Event(eventInformation[0], eventInformation[1].strip()));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else if (input.startsWith(CommandType.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            input \u003d GeneralMethods.removeCommandFromInput(input, CommandType.DEADLINE);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            /* deadlineInformation[0] \u003d description of task"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "             * deadlineInformation[1] \u003d deadline date"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "             */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            String[] deadlineInformation \u003d input.split(DEADLINE_KEYWORD, NUMBER_OF_PARTS);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.add(new Deadline(deadlineInformation[0], deadlineInformation[1].strip()));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else if (input.startsWith(CommandType.TODO.toString())) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            input \u003d GeneralMethods.removeCommandFromInput(input, CommandType.TODO);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.add(new ToDo(input));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.get(index).markTaskAsDone();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 186
    }
  },
  {
    "path": "src/main/java/duke/GeneralMethods.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class GeneralMethods {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns input with the given command removed"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param input   user input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param command one of the defined commands"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return user input without command keyword"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static String removeCommandFromInput(String input, CommandType command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int commandLength \u003d command.toString().length();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        input \u003d input.strip();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        input \u003d input.substring(commandLength);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        input \u003d input.strip();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Checks if the input command is a number"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return whether user input does not contains any non-numeric"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public static boolean isNumeric(String command) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (command.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (char c : command.toCharArray()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (!Character.isDigit(c)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 41
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * Represents a Deadline task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * It has a description, done status and a deadline when it is due"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns current status, description and deadline of Deadline task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return status, description and deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getStatusAndDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return \"[D]\" + super.getStatusAndDescription() + \"(by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns deadline (by)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getAdditionalInformation() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 35
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * Represents an Event task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * It has a description, done status and an event date"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns current status, description and date of Event task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return current status, description and date"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getStatusAndDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return \"[E]\" + super.getStatusAndDescription() + \"(at: \" + date + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns event date"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getAdditionalInformation() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 34
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * Represents a Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * It has a description and done status"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    protected Boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Boolean getDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns description of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void markTaskAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return (\"[\" + (isDone ? TICK_ICON : CROSS_ICON) + \"] \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns current status icon and description of task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Tick for done and cross for not done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return status icon and description"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getStatusAndDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns any other relevant information"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return empty string by default"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getAdditionalInformation() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 58
    }
  },
  {
    "path": "src/main/java/duke/Tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.CommandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.GeneralMethods;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import duke.Command.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * Task list holds the main arraylist (list) that contains all the information stored"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * All the functions to modify the list are found here"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final int NUMBER_OF_PARTS \u003d 2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String EVENT_KEYWORD \u003d \"/at\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private static final String DEADLINE_KEYWORD \u003d \"/by\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the contents of the list - task, done status and description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void printTaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printEmptyTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui.printHereAreYourTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(\"     \" + (i + 1) + \". \" + list.get(i).getStatusAndDescription());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Changes the status of the task to done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints a done message when it takes in user input"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void markAsDone(String command) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        command \u003d GeneralMethods.removeCommandFromInput(command, CommandType.DONE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        //Error handling for input \"done\" without task number"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (isTaskListEmptyOrIsCommandTypeInvalid(command)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        //Error handling for invalid task number"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.get(index).markTaskAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printTaskIsMarkedAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(\"      \" + list.get(index).getStatusAndDescription());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printInvalidTaskNumber(list.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Adds a task to the list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints a done message when it takes in user input"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param description user input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void addTask(String description) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        description \u003d GeneralMethods.removeCommandFromInput(description, CommandType.TODO);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.add(new ToDo(description));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printGotIt();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            printStatusDescriptionAndNumberOfTasks();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printEmptyTodoDescription();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Adds an Event to the list"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints a done message when it takes in user input"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param description user input"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void addEvent(String description) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!description.contains(EVENT_KEYWORD)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printMissingKeyword(EVENT_KEYWORD);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        description \u003d GeneralMethods.removeCommandFromInput(description, CommandType.EVENT);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String[] eventInformation \u003d description.split(EVENT_KEYWORD, NUMBER_OF_PARTS);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        /* eventInformation[0] \u003d description of event"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "         * eventInformation[1] \u003d event date"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "         */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (doesNotHaveDescription(eventInformation)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printEmptyEventDescription();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.add(new Event(eventInformation[0], eventInformation[1].strip()));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui.printGotIt();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printStatusDescriptionAndNumberOfTasks();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Adds a Deadline to the list"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints a done message when it takes in user input"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param description user input"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void addDeadline(String description) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (!description.contains(DEADLINE_KEYWORD)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printMissingKeyword(DEADLINE_KEYWORD);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        description \u003d GeneralMethods.removeCommandFromInput(description, CommandType.DEADLINE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        String[] deadlineInformation \u003d description.split(DEADLINE_KEYWORD, NUMBER_OF_PARTS);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        /* deadlineInformation[0] \u003d description of task"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "         * deadlineInformation[1] \u003d deadline date"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "         */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (doesNotHaveDescription(deadlineInformation)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printEmptyDeadlineDescription();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        list.add(new Deadline(deadlineInformation[0], deadlineInformation[1].strip()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui.printGotIt();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        printStatusDescriptionAndNumberOfTasks();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints the number of tasks in the list"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Also prints the description of tasks in list"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private void printStatusDescriptionAndNumberOfTasks() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        System.out.println(\"       \" + list.get(list.size() - 1).getStatusAndDescription());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        ui.printNumberOfTasksInList(list.size());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean doesNotHaveDescription(String[] input) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return input.length !\u003d NUMBER_OF_PARTS;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Deletes a task from the list"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void deleteTask(String command) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        command \u003d GeneralMethods.removeCommandFromInput(command, CommandType.DELETE);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (isTaskListEmptyOrIsCommandTypeInvalid(command)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        //Error handling for invalid task number"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (index \u003e\u003d list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printTaskIsDeleted();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            System.out.println(\"      \" + list.get(index).getStatusAndDescription());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            list.remove(index);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printNumberOfTasksInList(list.size());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printInvalidTaskNumber(list.size());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    private boolean isTaskListEmptyOrIsCommandTypeInvalid(String command) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printEmptyTaskList();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else if (command.isEmpty() || !GeneralMethods.isNumeric(command)) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printInvalidTaskNumber(list.size());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Looks for the given command in the descriptions and additional information of tasks in list"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Prints out the description and additional information if found"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public void find(String command) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        command \u003d GeneralMethods.removeCommandFromInput(command, CommandType.FIND).toLowerCase();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printEmptyTaskList();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        } else if (command.isEmpty()) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printEmptyFindDescription();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            if (t.description.toLowerCase().contains(command)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    || t.getAdditionalInformation().toLowerCase().contains(command)) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                    ui.printMatchingTasksFound();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                System.out.println(\"     \" + (i + 1) + \". \" + t.getStatusAndDescription());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "            ui.printMatchingTasksNotFound();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 226
    }
  },
  {
    "path": "src/main/java/duke/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * Represents a todo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " * It has a description and done status"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * Returns current status and description of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     * @return status and description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    public String getStatusAndDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "        return \"[T]\" + super.getStatusAndDescription();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "lists"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "      done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done             3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "done $2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "deadline tutorial tonight"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "event lunch with cousins saturday"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "todo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "find sunday"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "find"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "find book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "help"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 32
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Command\\*.java ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\Tasks\\*.java ..\\src\\main\\java\\duke\\FileIO\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limgl1998"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "limgl1998": 2,
      "-": 19
    }
  }
]
