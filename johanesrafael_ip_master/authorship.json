[
  {
    "path": "src/main/java/Task/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import Task.Exception.OtherException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import Task.Exception.ToDoException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import Task.TaskType.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import Task.TaskType.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import Task.TaskType.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import Task.TaskType.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    // introduce a constant for list size"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public static final int MAX_LIST_SIZE \u003d 100;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    // create task class for user\u0027s To-Do-List (max 100 items)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(MAX_LIST_SIZE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    // create relative path"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static String folder \u003d \"\\\\data\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static String path \u003d\"D:\" + folder;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    // create file name variable"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static  String fileName \u003d \"progress.txt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    // insert user input to the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public static void insertToList(String userInput) throws OtherException, IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String userInputFirstWord \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        switch(userInputFirstWord) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                insertToDo(userInput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            } catch (ToDoException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                viewEmptyToDoMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            insertDeadline(userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            insertEvent(userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            throw new OtherException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // update file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        createFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void insertEvent(String userInput) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take the description by finding the start and end index"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        int descriptionStartIndex \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        int descriptionEndIndex \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String description \u003d userInput.substring(descriptionStartIndex, descriptionEndIndex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take the event time"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String at \u003d userInput.substring(descriptionEndIndex + 3);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // create event task to be passed over to the actual task array"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        Event task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // assign task into actual task and increment listCounter"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void insertDeadline(String userInput) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take the description by finding the start and end index"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        int descriptionStartIndex \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        int descriptionEndIndex \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String description \u003d userInput.substring(descriptionStartIndex, descriptionEndIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take the deadline"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String by \u003d userInput.substring(descriptionEndIndex + 3);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // create deadline task to be passed over to the actual task array"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        Deadline task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // assign task into actual task and increment listCounter"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void insertToDo(String userInput) throws ToDoException{"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take the description by finding the start index"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        int descriptionStartIndex \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String description \u003d userInput.substring(descriptionStartIndex);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        if(descriptionStartIndex !\u003d 4 || description.isEmpty()){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            throw new ToDoException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // create To-Do task for passing over the user input to the actual task array"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        ToDo task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // assign task into actual task and increment listCounter"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void printAddedTask() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        if (tasks.size() \u003c 2) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            System.out.println(\"   Got it. I\u0027ve added this task:\\n\\t\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                    + tasks.get(0) + \"\\n   Now you have \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                    + tasks.size() + \" task in the list.\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            System.out.println(\"   Got it. I\u0027ve added this task:\\n\\t\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                    + tasks.get(tasks.size()-1) + \"\\n   Now you have \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                    + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    // view tasks"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public static void getList(){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        System.out.println(\"   Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            System.out.println(\"   \" + (i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void createLogo() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String greet \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // print greet"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void createByeMessage() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String exit \u003d \"\\nBye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        System.out.println(\"   \" + exit);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void setDone(String userInput) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take out the word after \"done\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String indexString \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // change the word into integer"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        Integer indexTask \u003d Integer.parseInt(indexString);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // mark task as done"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        tasks.get(indexTask-1).markAsDone();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void delete(String userInput){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take out the word after \"delete\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String indexString \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // change the word into integer"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        Integer indexTask \u003d Integer.parseInt(indexString);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // view delete message first"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        tasks.get(indexTask-1).deleteTaskMessage();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // erase the selected task from the array"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        tasks.remove(indexTask-1);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void handleCommand() throws IOException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        Scanner echo \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // scan user input"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String userInput \u003d echo.nextLine();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // execute command of the user input until \"bye\" is entered"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        while (!userInput.equals(\"Bye\")){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            // display list"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            if(userInput.equals(\"list\")){"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                getList();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            else if(userInput.startsWith(\"done\")){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                setDone(userInput);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                // update the file"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                createFile();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            else if(userInput.startsWith(\"delete\")){"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                delete(userInput);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                // update the file"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                createFile();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                // insert into list"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                    insertToList(userInput);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                } catch (OtherException | IOException e){"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                    viewInvalidCommandMessage();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                // print newly added task"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                printAddedTask();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            // ask user input"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            userInput \u003d echo.nextLine();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void createFile() throws IOException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // find file"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        File file \u003d new File(path, fileName);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                // make new file"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            // rewrite file"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            BufferedWriter newFile \u003d new BufferedWriter(new FileWriter(file.getAbsoluteFile()));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            for(int i \u003d 0; i \u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                newFile.write(tasks.get(i).toString());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                newFile.newLine();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            newFile.close();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void readFile() throws IOException, OtherException{"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // get path"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        Path path2 \u003d Paths.get(path, fileName);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // find file"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        File file \u003d new File(path, fileName);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // check file and its directory"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        isFolderExisted(file);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // change the file into string"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String fileData \u003d Files.readString(path2, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // scan the file data"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        Scanner data \u003d new Scanner(fileData);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // make read by line then insert to the corresponding task"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        while(data.hasNextLine()){"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            insertExistingFileDataToTasks(data.nextLine());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        data.close();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void isFolderExisted(File file) throws IOException {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        if (!file.exists() \u0026\u0026 !file.isDirectory()) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            // make new directory"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            File dir \u003d new File(folder);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            // create the file"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void isTaskDone(String userDataSymbol){"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        if(userDataSymbol.equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            tasks.get(tasks.size()-1).setDone();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void passToToDo(String userData){"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take out the description"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String description \u003d userData.split(\"]\")[2];"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take the symbol"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String isTaskDone \u003d userData.substring(4,5);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // create To-Do task for passing over the user input to the actual task array"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        ToDo task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // assign task into actual task and increment listCounter"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // check whether the task is done"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        isTaskDone(isTaskDone);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void passToDeadline(String userData){"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // erase brackets"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        userData \u003d userData.replace(\"(\",\"\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        userData \u003d userData.replace(\")\",\"\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take symbol"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String isTaskDone \u003d userData.substring(4,5);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take indexes"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        int descriptionStartIndex \u003d userData.indexOf(\" \");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        int descriptionEndIndex \u003d userData.indexOf(\"by:\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String description \u003d userData.substring(descriptionStartIndex, descriptionEndIndex);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take the event time"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String by \u003d userData.substring(descriptionEndIndex + 3);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // create event task to be passed over to the actual task array"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        Deadline task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // assign task into actual task and increment listCounter"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // check whether the task is done"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        isTaskDone(isTaskDone);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void passToEvent(String userData){"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // erase brackets"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        userData \u003d userData.replace(\"(\",\"\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        userData \u003d userData.replace(\")\",\"\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take the symbol"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String isTaskDone \u003d userData.substring(4,5);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take indexes"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        int descriptionStartIndex \u003d userData.indexOf(\" \");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        int descriptionEndIndex \u003d userData.indexOf(\"at:\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String description \u003d userData.substring(descriptionStartIndex, descriptionEndIndex);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take the event time"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        String at \u003d userData.substring(descriptionEndIndex + 3);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // create event task to be passed over to the actual task array"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        Event task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // assign task into actual task and increment listCounter"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // check whether the task is done"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        isTaskDone(isTaskDone);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void insertExistingFileDataToTasks(String userData) throws OtherException {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // take task type"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        char taskType \u003d userData.charAt(1);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // insert the task based on task type"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        switch (taskType){"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            passToToDo(userData);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            passToDeadline(userData);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            passToEvent(userData);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "            throw new OtherException();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void viewInvalidCommandMessage() {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        System.out.println(\"\\n ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    private static void viewEmptyToDoMessage(){"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        System.out.println(\"\\n ☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public static void main(String[] args) throws IOException, OtherException {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // create logo"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        createLogo();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // greet"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // read file first"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        handleCommand();"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // create bye message"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        createByeMessage();"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 346
    }
  },
  {
    "path": "src/main/java/Task/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package Task.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 6
    }
  },
  {
    "path": "src/main/java/Task/Exception/OtherException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package Task.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "public class OtherException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public void OtherException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 7
    }
  },
  {
    "path": "src/main/java/Task/Exception/ToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package Task.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "public class ToDoException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public void ToDoException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 7
    }
  },
  {
    "path": "src/main/java/Task/TaskType/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package Task.TaskType;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 15
    }
  },
  {
    "path": "src/main/java/Task/TaskType/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package Task.TaskType;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 15
    }
  },
  {
    "path": "src/main/java/Task/TaskType/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package Task.TaskType;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // set isDone to be true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        // print the marked task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        System.out.printf(\"    \\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                \"   Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                \"\\t\" + toString() +\"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public void deleteTaskMessage(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "                \"     \" + toString() + \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        return \"[\"+ getStatusIcon() + \"]\" + getDescription();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 42
    }
  },
  {
    "path": "src/main/java/Task/TaskType/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "package Task.TaskType;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public ToDo (String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "\t[T][✘] jamming"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   Now you have 1 task in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "\t[D][✘] home assignment  (by:  Mon 2 pm)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "\t[E][✘] project meeting  (at:  Thurs 7-9pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   Here are the tasks in your list:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   1. [T][✘] jamming"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   2. [D][✘] home assignment  (by:  Mon 2 pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   3. [E][✘] project meeting  (at:  Thurs 7-9pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "\t[✓]  home assignment "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   Here are the tasks in your list:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   1. [T][✘] jamming"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   2. [D][✓] home assignment  (by:  Mon 2 pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   3. [E][✘] project meeting  (at:  Thurs 7-9pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "   "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "todo jamming"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "deadline home assignment /by Mon 2 pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "event project meeting /at Thurs 7-9pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "Bye"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "javac  -cp ..\\src\\main\\java\\Task -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Task.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "if ! javac -cp ../src/main/java/Task -Xlint:none -d ../bin ../src/main/java/Task/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johanesrafael"
        },
        "content": "java -classpath ../bin Task.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "johanesrafael": 2,
      "-": 36
    }
  }
]
