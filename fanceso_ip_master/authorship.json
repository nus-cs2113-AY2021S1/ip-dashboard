[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# Duke Chat Bot User Guide  "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Duke is a **Command Line Interface** (CLI) app which allows you to store 3 types of task; *todo*, *deadline*, *event*.   "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Designed for fast typer which allows you to **store**, **find**, and **mark** personal tasks effortlessly.  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- - -  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Content Table  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "1. [Setting up](#setting-up)    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "2. [Features](#features)  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.1 [Adding To-do Task](#todo) [**todo**]  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.2 [Adding Event Task](#event) [**event**]  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.3 [Adding Task with a Deadline](#deadline) [**deadline**]  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.4 [Listing out all your tasks](#list) [**list**]  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.5 [Deleting a Task from list](#delete) [**delete**]  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.6 [Completing a task](#done) [**done**]  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.7 [Finding tasks](#find) [**find**]  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.8 [Terminate the program](#bye) [**bye**]  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "3. [Commands Summary](#commands-summary)  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- - -  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Setting up  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Prerequisites  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- JDK 11 or above  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- Download the latest release [here](https://github.com/fanceso/ip/releases \"duke.jar\").   "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- Permission rights to create a file and folder in machine  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "##### 1. Start up your terminal and locate the file path of *duke.jar*  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "##### 2. Enter the following commands to run the app "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -jar duke.jar  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "###### Correct Output Result: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```shell script  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "-----------------------------------------------------------  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Version: DUKE 0.2"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Hello! I\u0027m Duke."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "What can I do for you?  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "-----------------------------------------------------------  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Enter command:  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "##### 3. You should see a new folder named \"data-folder\" and inside folder will contain a \"tasks.txt\" which have been created by Duke app. Your data will be store in the file.  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e *Refer to the Features section for the different command features of the Duke app.*"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- - -  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### \u003ch3 id\u003d\"features\"\u003e Features  \u003c/h3\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### \u003ch4 id\u003d\"todo\"\u003eAdding To-do Task: `todo`  \u003c/h4\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Adding a *To-Do* type of task to the list with its description.  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Format: todo \u003cdescription\u003e  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `todo submission CS2113 project`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `todo 3 math assignments`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### \u003ch4 id\u003d\"event\"\u003e Adding Event Task: `event` \u003c/h4\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Adding a *Event* type of task to the list with its description, together with the event date and time.  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Date and time entered must follow the following format accordingly. "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Format: event \u003cdescription\u003e /at \u003cdd/MM/YYYY HH:mm\u003e  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `event Tom\u0027s Wedding Dinner /at 04/10/2020 19:30`  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `event Math Project dicussion /at 01/10/2020 10:00` "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### \u003ch4 id\u003d\"deadline\"\u003e Adding Task with a Deadline: `deadline`  \u003c/h4\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Adding a *Deadline* type of task to the list with its description and its due date. "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Date format must follow the following format accordingly.  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Format: deadline \u003cdescription\u003e /by \u003cdd/MM/YYYY\u003e  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `deadline online submission /by 11/11/2020`  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `deadline Capstone Project presentation /by 04/03/2022 `  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### \u003ch4 id\u003d\"list\"\u003eListing out all your tasks: `list` \u003c/h4\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "List out all tasks which added in the list or stored earlier in the data file. The numbering is the index of each task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": " "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [T] represents To-do task type"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [E] represents Event task type"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [D] represents Deadline task type"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [✘] represents the status of the task is uncompleted"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [✓] represents the status of the task is completed"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Tasks are indexed according to the order in which the tasks were added to the list.  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": " Format: list"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### \u003ch4 id\u003d\"delete\"\u003eDeleting a Task from list: `delete`  \u003c/h4\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Removing an existing task from the list with the given index in numerical value. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Format: delete \u003cindex\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `delete 3`  "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `delete 1`  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                           "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### \u003ch4 id\u003d\"done\"\u003eCompleting a task: `done` \u003c/h4\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Changing the status to done with the selected task index in numerical value."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fanceso"
        },
        "content": " Format: done \u003cindex\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `done 2`  "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `done 1`  "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fanceso"
        },
        "content": "####  \u003ch4 id\u003d\"find\"\u003eFinding tasks: `find` \u003c/h4\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Finding all tasks which contain the keyword required."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fanceso"
        },
        "content": " Format: find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `find submission`  "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `find math projects`  "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### \u003ch4 id\u003d\"bye\"\u003e Terminate the program: `bye`\u003c/h4\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Terminating and exits the app. "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fanceso"
        },
        "content": " Format: bye"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fanceso"
        },
        "content": "##  \u003ch2 id\u003d\"commands-summary\"\u003e Commands Summary \u003c/h2\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fanceso"
        },
        "content": "| **Command** | **Format**                                      | **Example**                              |"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fanceso"
        },
        "content": "|-------------|-------------------------------------------------|------------------------------------------|"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fanceso"
        },
        "content": "| *todo*      | `todo \u003cdescription\u003e`                                         | todo submit assignment                   |"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fanceso"
        },
        "content": "| *event*     | `event \u003cdescription\u003e /at \u003cdd/MM/YYYY HH:mm\u003e  `  | event Tom\u0027s Wedding /at 04/10/2020 19:30 |"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fanceso"
        },
        "content": "| *deadline*  | `deadline \u003cdescription\u003e /by \u003cdd/MM/YYYY\u003e  `     | deadline Final submission /by 03/10/2022 |"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fanceso"
        },
        "content": "| *delete*    | `delete \u003cindex\u003e`                                       | delete 1                                 |"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fanceso"
        },
        "content": "| *done*      | `done \u003cindex\u003e`                                         | done 3                                   |"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fanceso"
        },
        "content": "| *find*      | `find \u003ckeyword\u003e`                                         | find submission                          |"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fanceso"
        },
        "content": "| *bye*       | `bye`                                           | bye                                      |"
      }
    ],
    "authorContributionMap": {
      "fanceso": 152
    }
  },
  {
    "path": "data-folder/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Schedule Action Planner."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": "[✘: Pending |  ✓: Done]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "T: To do | E: Event | D: Deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\t1.[E][✓] sleeping part (at: Jan 01 2021 01:01)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\t2.[D][✘] CS2113 (by: Oct 02 2020)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\t3.[T][✘] say goodbye to CS2113-ip"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\t4.[D][✘] submit IP (by: Oct 02 2020)"
      }
    ],
    "authorContributionMap": {
      "fanceso": 7
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cimg src\u003d\"https://www.ismartcom.com/hs-fs/hubfs/ai%20gif.gif?width\u003d600\u0026amp;name\u003dai%20gif.gif\" alt\u003d\"Duke\" style\u003d\"float:right;width:220px;height:auto;\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# Duke Chat Bot User Guide  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Duke is a **Command Line Interface** (CLI) app which allows you to store 3 types of task; *todo*, *deadline*, *event*.   "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Designed for fast typer which allows you to **store**, **find**, and **mark** personal tasks effortlessly.  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- - -  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Content Table  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "1. [Setting up](#setting-up)    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "2. [Features](#features)  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.1 [Adding To-do Task](#Adding-To-do-Task-todo) [**todo**]  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.2 [Adding Event Task](#Adding-Event-Task-event) [**event**]  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.3 [Adding Task with a Deadline](#Adding-Task-with-a-Deadline-deadline) [**deadline**]  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.4 [Listing out all your tasks](#Listing-out-all-your-tasks-list) [**list**]  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.5 [Deleting a Task from list](#Deleting-a-Task-from-list-delete) [**delete**]  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.6 [Completing a task](#Completin- a-task-done) [**done**]  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.7 [Finding tasks](#Finding-tasks-find) [**find**]  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    2.8 [Terminate the program](#Terminate-the-program-bye) [**bye**]  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "3. [Commands Summary](#commands-summary)  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- - -  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Setting up  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Prerequisites  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- JDK 11 or above  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- Download the latest release [here](https://github.com/fanceso/ip/releases/download/v0.2/duke.jar).   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- Permission rights to create a file and folder in machine  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "##### 1. Start up your terminal and locate the file path of *duke.jar*  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "##### 2. Enter the following commands to run the app "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -jar duke.jar  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "###### Correct Output Result: "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "-----------------------------------------------------------  "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Version: DUKE 0.2"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Hello! I\u0027m Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "What can I do for you?  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "-----------------------------------------------------------  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Enter command:  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "##### 3. You should see a new folder named \"data-folder\" and inside folder will contain a \"tasks.txt\" which have been created by Duke app. Your data will be store in the file.  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e *Refer to the Features section for the different command features of the Duke app.*"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- - -  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Features "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Adding To-do Task: `todo` "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Adding a *To-Do* type of task to the list with its description.  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Format: todo \u003cdescription\u003e  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `todo submission CS2113 project`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `todo 3 math assignments`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Adding Event Task: `event`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Adding a *Event* type of task to the list with its description, together with the event date and time.  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Date and time entered must follow the following format accordingly. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Format: event \u003cdescription\u003e /at \u003cdd/MM/YYYY HH:mm\u003e  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `event Tom\u0027s Wedding Dinner /at 04/10/2020 19:30`  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `event Math Project dicussion /at 01/10/2020 10:00` "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Adding Task with a Deadline: `deadline`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Adding a *Deadline* type of task to the list with its description and its due date. "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Date format must follow the following format accordingly.  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Format: deadline \u003cdescription\u003e /by \u003cdd/MM/YYYY\u003e  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `deadline online submission /by 11/11/2020`  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `deadline Capstone Project presentation /by 04/03/2022 `  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Listing out all your tasks: `list`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": "List out all tasks which added in the list or stored earlier in the data file. The numbering is the index of each task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": " "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [T] represents To-do task type"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [E] represents Event task type"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [D] represents Deadline task type"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [✘] represents the status of the task is uncompleted"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003e [✓] represents the status of the task is completed"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Tasks are indexed according to the order in which the tasks were added to the list.  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": " Format: list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Deleting a Task from list: `delete`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Removing an existing task from the list with the given index in numerical value. "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Format: delete \u003cindex\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `delete 3`  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `delete 1`  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                           "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Completing a task: `done`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Changing the status to done with the selected task index in numerical value."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fanceso"
        },
        "content": " Format: done \u003cindex\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `done 2`  "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `done 1`  "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Finding tasks: `find` "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Finding all tasks which contain the keyword required."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fanceso"
        },
        "content": " Format: find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `find submission`  "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `find math projects`  "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr /\u003e "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Terminate the program: `bye`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Terminating and exits the app. "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```bat  "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fanceso"
        },
        "content": " Format: bye"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fanceso"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Commands Summary "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cstyle type\u003d\"text/css\"\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fanceso"
        },
        "content": ".tg  {border-collapse:collapse;border-spacing:0;}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fanceso"
        },
        "content": ".tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  overflow:hidden;padding:10px 5px;word-break:normal;}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fanceso"
        },
        "content": ".tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fanceso"
        },
        "content": ".tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003c/style\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003ctable class\u003d\"tg\" style\u003d\"undefined;table-layout: fixed; width: 683px\"\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003ccolgroup\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003ccol style\u003d\"width: 80px\"\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003ccol style\u003d\"width: 326px\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003ccol style\u003d\"width: 277px\"\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003c/colgroup\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cthead\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003cth class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-weight:bold\"\u003eCommand\u003c/span\u003e\u003c/th\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003cth class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-weight:bold\"\u003eFormat\u003c/span\u003e\u003c/th\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003cth class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-weight:bold\"\u003eExample\u003c/span\u003e\u003c/th\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003c/thead\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003ctbody\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-style:italic\"\u003etodo\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"color:#905;background-color:#DDD\"\u003etodo \u0026lt;description\u0026gt; \u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003etodo submit assignment\u003c/td\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-style:italic\"\u003eevent\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"color:#905;background-color:#DDD\"\u003eevent \u0026lt;description\u0026gt; /at \u0026lt;dd/MM/yyyy HH:mm\u0026gt;\u003c/span\u003e\u003cbr\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003eevent Tom\u0027s Wedding /at 04/10/2020 19:30\u003c/td\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-style:italic\"\u003edeadline\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"color:#905;background-color:#DDD\"\u003edeadline \u0026lt;description\u0026gt; /by \u0026lt;dd/MM/yyyy\u0026gt;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003edeadline Final submission /by 03/10/2022\u003c/td\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-style:italic\"\u003edelete\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"color:#905;background-color:#DDD\"\u003edelete \u0026lt;index\u0026gt;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003edelete 1\u003c/td\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-style:italic\"\u003edone\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"color:#905;background-color:#DDD\"\u003edone \u0026lt;index\u0026gt;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003edone 3\u003c/td\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-style:italic\"\u003efind\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"color:#905;background-color:#DDD\"\u003efind \u0026lt;keyword\u0026gt;\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003efind submission\u003c/td\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003ctr\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"font-style:italic\"\u003ebye\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003e\u003cspan style\u003d\"color:#905;background-color:#ddd\"\u003e`bye`\u003c/span\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    \u003ctd class\u003d\"tg-0pky\"\u003ebye\u003c/td\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003c/tbody\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003c/table\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "fanceso": 188
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Interactive chat bot for personal task taking. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static FileStorage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Initializes Duke chat bot."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param filePath is the path to store and load task in local disk"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        storage \u003d new FileStorage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        new Duke(\"data-folder/tasks.txt\").run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /** Runs Duke chat bot. */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        initializeDuke();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        runProgram();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        exitProgram();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /** Exit Duke chat bot and display the actual data file location in disk. */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private void exitProgram() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        ui.showFileLocation();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /** Runs Duke chat bot. */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void initializeDuke() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            FileStorage.loadFile(taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ui.showInvalidFileMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Runs the main program and receives user\u0027s input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Executes the commands and terminates the program when receives exit command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void runProgram() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        boolean isExit;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            Command command \u003d Parser.parseCommand(userInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            command.execute(taskList, storage, ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            isExit \u003d Command.isExit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "fanceso": 68
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_ADDED;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Adds a task into Duke\u0027s list. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_EVENT_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_TODO_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private Task taskToAdd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Initializes the task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.taskToAdd \u003d task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Adds a task, shows the feedback message and saves list of tasks into file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Ui will not be activated before local data file is loaded."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList used for recording all tasks as TaskList object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param storage  used for storing data in local file as FileStorage object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param ui       used for user interface display as Ui object"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void execute(TaskList taskList, FileStorage storage, Ui ui) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (FileStorage.fileLoaded) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            storage.autoSave(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String messageContent \u003d MESSAGE_ADDED + ui.indentPrint() + taskToAdd;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ui.showCommandResult(messageContent);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 45
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Represents an executable command. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    protected static boolean programShutdown;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        programShutdown \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Executes the command, displays the result and saves the list of tasks into file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList used for recording all tasks as TaskList object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param storage  used for storing data in local file as FileStorage object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param ui       used for user interface display as Ui object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public abstract void execute(TaskList taskList, FileStorage storage, Ui ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return programShutdown;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_REMOVED;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Deletes a task identified using it\u0027s index from Duke. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_DELETE_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    int indexForDelete;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Initializes the task index to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param indexForDelete Task index to remove from duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public DeleteCommand(int indexForDelete) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.indexForDelete \u003d indexForDelete;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Deletes the selected task, shows the feedback message and saves updates content to file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList used for recording all tasks as TaskList object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param storage  used for storing data in local file as FileStorage object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param ui       used for user interface display as Ui object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void execute(TaskList taskList, FileStorage storage, Ui ui) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Task task \u003d taskList.getTask(indexForDelete);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        taskList.taskRemove(indexForDelete);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String messageContent \u003d MESSAGE_REMOVED + ui.indentPrint() + task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        ui.showCommandResult(messageContent);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        storage.autoSave(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_WELL_DONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Marking a task as done identified using it\u0027s index from Duke. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Initializes the task index to be mark as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskIndex Task index to mark done from duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Marks the selected task as done, shows feedback messages and updates content to file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Ui will not be activated before local data file is loaded."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList used for recording all tasks as TaskList object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param storage  used for storing data in local file as FileStorage object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param ui       used for user interface display as Ui object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void execute(TaskList taskList, FileStorage storage, Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Task task \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        taskList.markDone(taskIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (FileStorage.fileLoaded) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String messageContent \u003d MESSAGE_WELL_DONE + ui.indentPrint() + task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ui.showCommandResult(messageContent);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            storage.autoSave(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": " * Tells user where is data file located."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_EXIT_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_BYE_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Exits the program, shows feedback messages."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Ui will not be activated before local data file is loaded."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList used for recording all tasks as TaskList object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param storage  used for storing data in local file as FileStorage object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param ui       used for user interface display as Ui object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void execute(TaskList taskList, FileStorage storage, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        programShutdown \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (FileStorage.fileLoaded) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ui.showExitMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 32
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": " * Finds and lists all tasks in Duke which description contains any of the argument keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": " * Keyword used for matching is case sensitive."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Initializes the keyword for finding."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param keyword used to search within the task list in Duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Retrieves all tasks which contains some of the specified keywords."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList used for recording all tasks as TaskList object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param storage  used for storing data in local file as FileStorage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param ui       used for user interface display as Ui object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void execute(TaskList taskList, FileStorage storage, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        ui.showFindResult(taskList.tasks, keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 37
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Represents an incorrect or invalid command. Upon execution, produces feedback to the user. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Initializes the feedback for invalid command used."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param feedbackToUser used to display an error message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public InvalidCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Retrieves all tasks which contains some of the specified keywords."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList used for recording all tasks as TaskList object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param storage  used for storing data in local file as FileStorage object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param ui       used for user interface display as Ui object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void execute(TaskList taskList, FileStorage storage, Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (FileStorage.fileLoaded) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ui.showCommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Lists all tasks in the Duke to the user. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void execute(TaskList taskList, FileStorage storage, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        ui.showTaskList(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 17
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Container for user visible messages. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_VERSION \u003d \"Version: DUKE 0.2\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke.\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_NO_TASK \u003d \"There is no task in the list. Please add new task!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND \u003d \"Invalid command!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"There is no record data file found!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_NO_SUCH_TASK \u003d \"There is no such task related to such keyword: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_INVALID_FILE \u003d \"The file used is invalid.\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_INVALID_FILE_DATA \u003d \"The content used in file used is invalid!\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_NUMBER_OF_TASK \u003d \"You have %d tasks in the list now.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_INDEX \u003d \"The task index provided is invalid\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_NUMERICAL_ERROR \u003d \"Please enter the correct numerical task index\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_FILE_INTRO \u003d \"Schedule Action Planner.\\n[✘: Pending |  ✓: Done]\\nT: To do | E: Event | D: Deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_LIST_OUT \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_ADDED \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_FOUND \u003d \"Here are the filtered tasks :\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_REMOVED \u003d \"Roger that. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_WELL_DONE \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_TIME_FORMAT \u003d \"Date and time format is invalid! \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            + \"Please use format (dd//MM//yyyy HH:mm)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Date format is invalid! \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            + \"Please use format (dd//MM//yyyy)\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 29
    }
  },
  {
    "path": "src/main/java/duke/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Stores all tasks in ArrayList. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /** Initializes new task ArrayList. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static int getTaskListSize() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void taskRemove(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Marks selected task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param index used as the index of task to mark as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Returns the task with the display index in list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param index used to identify the display index"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return Tasks that indexed as the display."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 47
    }
  },
  {
    "path": "src/main/java/duke/data/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Signals an error caused by invalid command. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 5
    }
  },
  {
    "path": "src/main/java/duke/data/exception/InvalidDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Signals an error caused by invalid date format which format should be \"dd/MM/yyyy\". */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class InvalidDateFormatException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 5
    }
  },
  {
    "path": "src/main/java/duke/data/exception/InvalidDateTimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Signals an error caused by invalid date and time format which format should be \"dd/MM/yyyy HH:mm\". */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class InvalidDateTimeFormatException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 5
    }
  },
  {
    "path": "src/main/java/duke/data/exception/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Signals an error caused by invalid task index enter by user during done and delete commands. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class InvalidTaskIndexException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 5
    }
  },
  {
    "path": "src/main/java/duke/data/exception/InvalidValueException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Signals an error caused by none integer task index enter by user during done and delete commands. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class InvalidValueException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 5
    }
  },
  {
    "path": "src/main/java/duke/data/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Represents deadline type of task in Duke. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public LocalDate dueDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Initializes deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param description used as the description of deadline task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param dueDate     used as the due date for deadline task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Deadline(String description, LocalDate dueDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Returns string format of the deadline task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return Task string and formats the due date as \"MMM dd yyyy\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH)));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 32
    }
  },
  {
    "path": "src/main/java/duke/data/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Represents event type of task in Duke. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public LocalDateTime eventTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Event(String description, LocalDateTime eventTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Returns string format of the event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return Task string and formats the event time and date as \"MMM dd yyyy HH:mm\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), eventTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.ENGLISH)));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 26
    }
  },
  {
    "path": "src/main/java/duke/data/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Parent Task class used for all type. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public final static String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public final static String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Initializes task and setting status of done to be false."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param description used as the task\u0027s description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /** Marks the task status as done which is true. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Gets a Unicode character representing if the duke.task.Task is done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * (tick for yes, cross for no)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return Task status string with UTF-8 icon"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return (isDone ? \"[\" + TICK + \"]\" : \"[\" + CROSS + \"]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Returns string version of task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return Task string with its status in UTF-8 icon"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 45
    }
  },
  {
    "path": "src/main/java/duke/data/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Represents todo type of task in Duke. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Returns string format of the todo task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return Task as string format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 20
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.exception.InvalidDateFormatException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.exception.InvalidDateTimeFormatException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.exception.InvalidValueException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.ToDo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_INVALID_COMMAND;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_INVALID_DATE_FORMAT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_INVALID_DATE_TIME_FORMAT;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_INVALID_TASK_INDEX;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_NUMERICAL_ERROR;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Parses user input. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static String taskContent;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static Task tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param userCommand full user input string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static Command parseCommand(String userCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String taskAction \u003d taskIdentify(userCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        switch (taskAction) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        case ExitCommand.COMMAND_EXIT_WORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        case ExitCommand.COMMAND_BYE_WORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (!taskContent.equals(\"\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_INVALID_COMMAND);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new ListCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        case AddCommand.COMMAND_TODO_WORD:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                verifyTodoTask(taskContent);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new AddCommand(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (InvalidCommandException exception) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_INVALID_COMMAND);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        case AddCommand.COMMAND_EVENT_WORD:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                verifyEventTask(taskContent);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new AddCommand(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (InvalidCommandException exception) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_INVALID_COMMAND);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (InvalidDateTimeFormatException exception) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_INVALID_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        case AddCommand.COMMAND_DEADLINE_WORD:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                verifyDeadlineTask(taskContent);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new AddCommand(tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (InvalidCommandException exception) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_INVALID_COMMAND);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (InvalidDateFormatException exception) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                // no index input or index is not in integer"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                if (stringIsNotNumeric(taskContent) || taskContent.equals(\"\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    throw new InvalidValueException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                } else if (Integer.parseInt(taskContent) \u003e TaskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    throw new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new DoneCommand(Integer.parseInt(taskContent) - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (InvalidValueException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_NUMERICAL_ERROR);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (InvalidTaskIndexException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_INVALID_TASK_INDEX);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        case DeleteCommand.COMMAND_DELETE_WORD:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                if (stringIsNotNumeric(taskContent) || taskContent.equals(\"\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    throw new InvalidValueException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                } else if (Integer.parseInt(taskContent) \u003e TaskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    throw new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new DeleteCommand(Integer.parseInt(taskContent) - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (InvalidValueException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_NUMERICAL_ERROR);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (InvalidTaskIndexException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_INVALID_TASK_INDEX);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (taskContent.equals(\"\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new InvalidCommand(MESSAGE_INVALID_COMMAND);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                command \u003d new FindCommand(taskContent);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            command \u003d new InvalidCommand(MESSAGE_INVALID_COMMAND);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Checking if is a single word or multiple words used command"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param singleLineCommand full line input from user"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return the first word of the input"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static String taskIdentify(String singleLineCommand) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String singleWord \u003d singleLineCommand.trim();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (singleWord.contains(\" \")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String[] splitWords \u003d singleWord.split(\" \", 2);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String taskName \u003d splitWords[0];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            taskContent \u003d splitWords[1];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return taskName;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        taskContent \u003d \"\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return singleWord;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Verify that description of todo task is not empty"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws InvalidCommandException if there no description of the task"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static void verifyTodoTask(String taskDescription) throws InvalidCommandException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (!taskDescription.equals(\"\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            tasks \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Verify that description of event task is enter correctly"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws InvalidCommandException        if there no description or time of the event task"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws InvalidDateTimeFormatException if the format of date and time for the event task is wrong"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static void verifyEventTask(String taskDescription) throws InvalidCommandException, InvalidDateTimeFormatException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            int timeSeparator \u003d taskDescription.indexOf(\"/at\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String task \u003d taskDescription.substring(0, timeSeparator).trim();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String atTime \u003d taskDescription.substring(timeSeparator + 3).trim();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (task.equals(\"\") || atTime.equals(\"\")) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            LocalDateTime eventTime \u003d LocalDateTime.parse(atTime, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            tasks \u003d new Event(task, eventTime);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (StringIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            throw new InvalidDateTimeFormatException();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Verify that description of deadline task is enter correctly"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws InvalidCommandException    if there no description or date of the event task"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws InvalidDateFormatException if the format of date for the event task is wrong"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static void verifyDeadlineTask(String taskDescription) throws InvalidCommandException, InvalidDateFormatException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            int timeSeparator \u003d taskDescription.indexOf(\"/by\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String task \u003d taskDescription.substring(0, timeSeparator).trim();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String dueDate \u003d taskDescription.substring(timeSeparator + 3).trim();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (task.equals(\"\") || dueDate.equals(\"\")) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            LocalDate deadlineDate \u003d LocalDate.parse(dueDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            tasks \u003d new Deadline(task, deadlineDate);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (StringIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            throw new InvalidDateFormatException();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Return true if String value can be converted to integer"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param str is the second word from input"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return true only if string content can be converted to integer"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static boolean stringIsNotNumeric(String str) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            Double.parseDouble(str);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 222
    }
  },
  {
    "path": "src/main/java/duke/storage/FileStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_FILE_INTRO;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_FILE_NOT_FOUND;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.MESSAGE_INVALID_FILE_DATA;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Represents the file used to store tasks of Duke data. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class FileStorage {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static boolean fileLoaded;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static String FOLDER_FULL_PATH;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static String FILE_FULL_NAME;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static String folderName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Initializes path of folder and ui, define the exact location in the disk."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param filePath is the full file path used"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public FileStorage(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int divider \u003d filePath.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        folderName \u003d filePath.substring(0, divider);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        FOLDER_FULL_PATH \u003d System.getProperty(\"user.dir\") + folderName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        FILE_FULL_NAME \u003d System.getProperty(\"user.dir\") + \"\\\\\" + filePath.replace(\"/\", \"\\\\\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        fileLoaded \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Saves data automatically into file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList is to save into file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static void autoSave(TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        StringBuilder msgContent \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // if file does not exist, create new file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (i \u003d 0; i \u003c TaskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            msgContent.append(\"\\n\\t\").append(i + 1).append(\".\").append(taskList.getTask(i));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            writeToFile(msgContent.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ui.showError();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Saves the {@code TaskList} data to the storage file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param textToAdd is the string content to add into file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws IOException if there were errors writing the data to file"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_FULL_NAME, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        fw.write(MESSAGE_FILE_INTRO + textToAdd);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Loads the data file into {@code TaskList} TaskList ."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList is to save into file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws IOException if there were errors loading the data to file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static void loadFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        File theDir \u003d new File(folderName);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        File file \u003d new File(FILE_FULL_NAME);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // create directory if does not exist"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (!theDir.exists()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.println(\"Creating new directory: \" + theDir.getName());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            boolean result \u003d false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                theDir.mkdir();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (SecurityException se) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                System.out.println(\"Permission Denied\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (result) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                System.out.println(\"DIR created\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String content;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int lines \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (file.createNewFile()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            fileLoaded \u003d true;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.println(MESSAGE_FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (!fileLoaded) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                LocalDate date;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                LocalDateTime dateTime;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                //File reading from UTF-8 charset"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                Scanner s \u003d new Scanner(file, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                // loading existing file once and add them into list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                boolean completed \u003d false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    // Skipping the first 3 lines of introduction from files"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    if (lines \u003c 3 \u0026\u0026 !completed) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        s.nextLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        completed \u003d true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        content \u003d s.nextLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        int dividePoint1 \u003d content.indexOf(\".[\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        int dividePoint2 \u003d content.indexOf(\"] \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        char taskType \u003d content.charAt(dividePoint1 + 2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        String taskDetails \u003d content.substring(dividePoint2 + 2);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        String taskIsDone;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        String taskInFile \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        taskIsDone \u003d content.substring(dividePoint1 + 5, dividePoint2);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        switch (taskType) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        case \u0027T\u0027:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskInFile +\u003d \"todo \" + taskDetails;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        case \u0027E\u0027:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskDetails \u003d taskDetails.replace(\"(at:\", \"/at\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskDetails \u003d taskDetails.replace(\")\", \"\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            int atSeparator \u003d taskDetails.indexOf(\"/at\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            String eventTime \u003d taskDetails.substring(atSeparator + 4);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskDetails \u003d taskDetails.substring(0, atSeparator);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                                dateTime \u003d LocalDateTime.parse(eventTime, dateTimeFormat);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                                System.out.println(MESSAGE_INVALID_FILE_DATA);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskInFile +\u003d \"event \" + taskDetails + \" /at \" + DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\").format(dateTime);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        case \u0027D\u0027:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskDetails \u003d taskDetails.replace(\"(by:\", \"/by\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskDetails \u003d taskDetails.replace(\")\", \"\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            int bySeparator \u003d taskDetails.indexOf(\"/by\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            String dueDate \u003d taskDetails.substring(bySeparator + 4);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                                date \u003d LocalDate.parse(dueDate, dateFormat);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                                System.out.println(MESSAGE_INVALID_FILE_DATA);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskDetails \u003d taskDetails.substring(0, bySeparator);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskInFile +\u003d \"deadline \" + taskDetails + \" /by \" + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(date);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        // sending converted data as command to program"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        Command command \u003d Parser.parseCommand(taskInFile);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        command.execute(taskList, Duke.storage, Duke.ui);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        int taskIndexInFile \u003d lines - 3;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        if (taskIsDone.equals(Task.TICK)) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                            taskList.markDone(taskIndexInFile);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    lines++;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                System.out.println(\"Loaded from local data file: \" + FILE_FULL_NAME);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                fileLoaded \u003d true;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 186
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import duke.storage.FileStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static duke.common.Messages.*;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/** Text UI of the application. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String LINE \u003d \"-\".repeat(Math.max(0, 59));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this(new Scanner(System.in), System.out);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Ui(Scanner in, PrintStream out) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.in \u003d in;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String indentPrint() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return INDENT;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /** Draws line with dashes in terminal */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void drawlLine() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(LINE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Gets the input from user and echo out the input back in given format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return fullInputLine which entered by user before line break"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.print(\"Enter command: \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(\"[Command entered:\" + fullInputLine + \"]\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        drawlLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(MESSAGE_VERSION);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        drawlLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Show the filtered result from the keyword used with find with given lists"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param tasks   used for finding"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param keyword used to match string which contains which is case sensitive"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void showFindResult(ArrayList\u003cTask\u003e tasks, String keyword) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        drawlLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // make sure there are tasks in list before filter"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ArrayList\u003cTask\u003e resultList \u003d (ArrayList\u003cTask\u003e) tasks.stream().filter((task) -\u003e (task.description.contains(keyword))).collect(Collectors.toList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            // there are tasks matches keyword"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (resultList.size() \u003e 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                out.print(MESSAGE_FOUND);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                resultList.forEach(out::println);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                out.println(MESSAGE_NO_SUCH_TASK + Parser.taskContent);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            out.println(MESSAGE_NO_TASK);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        drawlLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /** Shows the invalid file message with the file\u0027s exact location in disk. */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void showInvalidFileMessage() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(FileStorage.FILE_FULL_NAME);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(MESSAGE_INVALID_FILE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void showCommandResult(String result) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        drawlLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(result);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        drawlLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Show the list of tasks in terminal"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param taskList is the TaskList that used in Duke"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        drawlLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (taskList.getTaskListSize() \u003e 0) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            out.print(MESSAGE_LIST_OUT);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            int i;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            for (i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                out.println(INDENT + String.format(\"%d.%s\", i + 1, taskList.getTask(i)));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            out.printf((MESSAGE_NUMBER_OF_TASK) + \"%n\", i);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            out.println(MESSAGE_NO_TASK);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        drawlLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void showFileLocation() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(\"Your file has been saved to:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(FileStorage.FILE_FULL_NAME);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        drawlLine();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        out.println(\"Something went wrong\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 132
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "todo T-task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": "todo T-task2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "deadline D-task3 /by this Friday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "event E-task4 /at next Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "event /at next Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "event wedding /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "fanceso": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java  ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\common\\*.java ..\\src\\main\\java\\duke\\data\\*.java ..\\src\\main\\java\\duke\\data\\exception\\*.java ..\\src\\main\\java\\duke\\data\\task\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "fanceso": 2
    }
  }
]
