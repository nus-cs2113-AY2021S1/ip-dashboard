[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "fchensan": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Duke is a **command-line chat bot app that helps you keep track of your todos, deadlines, and events.**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    * [Add a new Todo item : `todo`](#todo---add-a-new-todo-item)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    * [Add a new Deadline item : `deadline`](#deadline---add-a-new-deadline-item)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    * [Add a new Event item : `event`](#event---add-a-new-event-item)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    * [List all items : `list`](#list---list-all-items)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    * [Mark an item as done : `done`](#done---mark-an-item-as-done)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    * [Delete an item : `delete`](#delete---delete-an-item)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    * [Find an item : `find`](#find---find-an-item)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    * [Exit out of Duke : `bye`](#bye---exit-out-of-duke)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "* [Command Summary](#commmand-summary)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "1. Make sure you have Java 11 or above installed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "2. Download the latest [`ip.jar`](https://github.com/fchensan/ip/releases/tag/A-Release)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "3. Copy the file to a folder where you want to run it from."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "4. Using the terminal, navigate to the directory where the `ip.jar` file is."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "5. Run `java -jar ip.jar`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "6. You should see a welcome message. It is now ready to go."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "### `todo` - Add a new Todo item"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "`todo clean up room`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "`Added: [T] [    ] clean up room`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": "### `deadline` - Add a new Deadline item"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Adds a new Deadline with a date."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Format: `deadline DESCRIPTION /by yyyy-MM-dd HH:mm`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fchensan"
        },
        "content": "`deadline submit progress report /by 2020-10-10 23:59`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fchensan"
        },
        "content": "`Added: [D] [    ] submit progress report (by: 2020-10-10 23:59)`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fchensan"
        },
        "content": "### `Event` - Add a new Event item"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Adds a new Event with a date."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Format: `event DESCRIPTION /at yyyy-MM-dd HH:mm`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fchensan"
        },
        "content": "`event dinner with friends /at 2020-10-25 19:00`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fchensan"
        },
        "content": "`Added: [E] [    ] dinner with friends (at: 2020-10-25 19:00)`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fchensan"
        },
        "content": "### `list` - List all items"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fchensan"
        },
        "content": "1. [T] [    ] clean up room"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fchensan"
        },
        "content": "2. [D] [    ] submit report (by: 2020-10-12 18:00)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fchensan"
        },
        "content": "3. [E] [    ] appreciation dinner (at: 2020-09-08 18:00)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "### `done` - Mark an item as done"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Marks an item as done, given its number as shown in `list`."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Format: `done ITEM_NUMBER`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fchensan"
        },
        "content": "\u003e\u003e list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fchensan"
        },
        "content": "1. [T] [    ] clean up room"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fchensan"
        },
        "content": "2. [D] [    ] submit report (by: 2020-10-12 18:00)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fchensan"
        },
        "content": "3. [E] [    ] party (at: 2020-09-11 18:00)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fchensan"
        },
        "content": "\u003e\u003e done 2"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Ok! \"submit report\" is marked as done!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fchensan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fchensan"
        },
        "content": "### `delete` - Delete an item"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Delete an item with a given number as shown in `list`."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Format: `delete ITEM_NUMBER`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fchensan"
        },
        "content": "\u003e\u003e list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fchensan"
        },
        "content": "1. [T] [    ] clean up room"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fchensan"
        },
        "content": "2. [D] [DONE] submit report (by: 2020-10-12 18:00)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fchensan"
        },
        "content": "3. [E] [    ] party (at: 2020-09-11 18:00)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fchensan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fchensan"
        },
        "content": "\u003e\u003e delete 3"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Ok! I have deleted this task:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fchensan"
        },
        "content": "[E] [    ] party (at: 2020-09-11 18:00)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fchensan"
        },
        "content": "You now have 2 task(s) left."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fchensan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fchensan"
        },
        "content": "### `find` - Find an item"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Find an item with a search phrase."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Format: `find SEARCH_PHRASE`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fchensan"
        },
        "content": "\u003e\u003e find dinner"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Here are some matching tasks:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fchensan"
        },
        "content": "[E] [    ] dinner date (at: 2020-10-20 18:00)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fchensan"
        },
        "content": "[E] [    ] dinner with friends (at: 2020-10-25 19:00)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fchensan"
        },
        "content": "### `bye` - Exit out of Duke"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Exits Duke and saves all data into `duke-data.txt`."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fchensan"
        },
        "content": "\u003e\u003e bye"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fchensan"
        },
        "content": "Good bye!"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fchensan"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fchensan"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**1. How do I move my data to another computer?**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    Simply copy `duke-data.txt` to the other computer. You should run `ip.jar` from the same directory "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    where `duke-data.txt` is."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fchensan"
        },
        "content": "## Commmand Summary"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fchensan"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**todo**|`todo DESCRIPTION` \u003cbr\u003ee.g. `todo CS1231 homework`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**deadline**|`deadline DESCRIPTION /by yyyy-mm-dd hh:mm` \u003cbr\u003ee.g. `deadline UTC1001 essay /by 2020-10-09 20:00`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**event**|`event DESCRIPTION /at yyyy-mm-dd hh:mm`\u003cbr\u003ee.g. `event beach party /at 2020-10-09 10:00`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**list**|`list`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**done**|`done \u003cindex\u003e` \u003cbr\u003ee.g. `done 3`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**delete**|`delete \u003cindex\u003e` \u003cbr\u003ee.g. `delete 2`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**find**|`find \u003ckeyword\u003e`\u003cbr\u003ee.g. `find assignment`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fchensan"
        },
        "content": "**exit**|`bye`"
      }
    ],
    "authorContributionMap": {
      "fchensan": 143,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.parsers.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.parsers.TaskParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static final String STORAGE_FILEPATH \u003d \"duke-data.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static final String DATETIME_FORMAT \u003d \"yyyy-MM-dd HH:mm\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static TaskParser taskParser \u003d new TaskParser(dateTimeFormatter);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static Storage storage \u003d new Storage(ui, STORAGE_FILEPATH, dateTimeFormatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * A list of commands available to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static final Command[] commandList \u003d {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            new CommandAddTodo(taskParser),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            new CommandAddDeadline(taskParser),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            new CommandAddEvent(taskParser),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            new CommandPrintTaskList(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            new CommandMarkDone(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            new CommandDeleteTask(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            new CommandFind(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            new CommandExit(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static Parser parser \u003d new Parser(commandList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static void showTasksForToday() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        TaskList tasksForToday \u003d tasks.getTasksByDate(LocalDate.now());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (tasksForToday.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            ui.printMessage(\"You have no deadlines or events today!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            ui.printMessage(\"Here are your deadlines or events for today: \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            ui.printTasksList(tasksForToday, false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static void performInputLoop() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            ui.printDividerLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            input \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                command.execute(tasks, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } while (!(command instanceof CommandExit));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printDukeLogo();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (!storage.performFileSetup(tasks)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        showTasksForToday();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        performInputLoop();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 79,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Handles saving and reading data in and out of a text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private File storageFile;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String storageFilepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private DateTimeFormatter dateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Storage(TextUi ui, String storageFilepath, DateTimeFormatter dateTimeFormatter) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.storageFilepath \u003d storageFilepath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.dateTimeFormatter \u003d dateTimeFormatter;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private Task deserializeTask(String inputLine) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String[] lineSegments \u003d inputLine.split(\";\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        boolean isDone \u003d lineSegments[1].equals(\"1\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        switch (lineSegments[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        case Todo.IDENTIFIER:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            task \u003d new Todo(isDone, lineSegments[2]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        case Deadline.IDENTIFIER:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            dateTime \u003d LocalDateTime.parse(lineSegments[3], dateTimeFormatter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            task \u003d new Deadline(isDone, lineSegments[2], dateTime, dateTimeFormatter);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        case Event.IDENTIFIER:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            dateTime \u003d LocalDateTime.parse(lineSegments[3], dateTimeFormatter);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            task \u003d new Event(isDone, lineSegments[2], dateTime, dateTimeFormatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String serializeTask(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String line \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        line +\u003d task.getIdentifier() + \";\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        line +\u003d (task.isDone() ? 1 : 0) + \";\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        line +\u003d task.getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            line +\u003d \";\" + ((Deadline) task).getBy().format(dateTimeFormatter);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            line +\u003d \";\" + ((Event) task).getAt().format(dateTimeFormatter);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private TaskList readDataFromFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Scanner s \u003d new Scanner(storageFile);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String currLine;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            currLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (currLine.equals(\"\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            tasks.add(deserializeTask(currLine));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private void saveDataToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        FileWriter fw \u003d new FileWriter(storageFile);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String textToWrite \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Task value : tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            task \u003d value;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            textToWrite +\u003d serializeTask(task) + System.lineSeparator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        fw.write(textToWrite);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Opens up the storage text file containing tasks, and adds all of the tasks into the given TaskList."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param taskList the list of tasks to add on to"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @return true if operation is successful, false otherwise"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public boolean performFileSetup(TaskList taskList) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            storageFile \u003d new File(storageFilepath);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            storageFile.createNewFile();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            taskList.addAll(readDataFromFile());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            ui.printErrorMessage(\"Unable to perform file setup.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Saves the tasks from the given list into the storage text file."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param tasks the list containing tasks to be saved"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            saveDataToFile(tasks);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            ui.printErrorMessage(\"Unable to save file.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 137
    }
  },
  {
    "path": "src/main/java/duke/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Handles input and output from the command line interface."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Scanner in;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printDukeLogo() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printDividerLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(\"Good bye!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Prints a list of tasks with numbering."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param tasks the list of tasks to be printed"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printTasksList(ArrayList\u003cTask\u003e tasks, boolean isNumberShown) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (isNumberShown) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                System.out.print(i + 1 + \". \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            System.out.println(tasks.get(i).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printTaskMarkedAsDone(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(\"Ok! \\\"\" + task.getDescription() + \"\\\" is marked as done!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printTaskDeleted(Task removedTask) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(\"Ok! I have deleted this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(removedTask.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printNumberOfTasksLeft(int numOfTasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(\"You now have \" + numOfTasks + \" task(s) left.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void printErrorMessage(String message) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.println(\"ERROR: \" + message);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Prompts the user for command input and returns the raw input String."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @return raw input string"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        System.out.print(\"\u003e\u003e \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 85
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a user command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEFAULT_KEYWORD \u003d \"keyword\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.keyword \u003d DEFAULT_KEYWORD;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Perform all the necessary setup and input parsing for the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param input raw user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeException if there user input is invalid or an error occurs while executing command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public abstract void setup(String input) throws DukeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public abstract void execute(TaskList tasks, TextUi ui) throws DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandAddDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.parsers.TaskParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a command to add a Deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class CommandAddDeadline extends CommandAddTask {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEFAULT_KEYWORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private Deadline deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private TaskParser taskParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public CommandAddDeadline(TaskParser taskParser) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.keyword \u003d DEFAULT_KEYWORD;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.taskParser \u003d taskParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void setup(String input) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        deadline \u003d taskParser.parseDeadline(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(TaskList tasks, TextUi ui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printMessage(\"Added: \" + deadline.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandAddEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.parsers.TaskParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a command to add an Event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class CommandAddEvent extends CommandAddTask {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEFAULT_KEYWORD \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private TaskParser taskParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public CommandAddEvent(TaskParser taskParser) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.keyword \u003d DEFAULT_KEYWORD;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.taskParser \u003d taskParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void setup(String input) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        event \u003d taskParser.parseEvent(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(TaskList tasks, TextUi ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printMessage(\"Added: \" + event.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandAddTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a command to add a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public abstract class CommandAddTask extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 8
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandAddTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeNoDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.parsers.TaskParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a command to add a Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class CommandAddTodo extends CommandAddTask {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEFAULT_KEYWORD \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private Todo todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private TaskParser taskParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public CommandAddTodo(TaskParser taskParser) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.keyword \u003d DEFAULT_KEYWORD;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.taskParser \u003d taskParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void setup(String input) throws DukeNoDescriptionException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        todo \u003d taskParser.parseTodo(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(TaskList tasks, TextUi ui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printMessage(\"Added: \" + todo.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandDeleteTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeNoArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a command to delete a Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class CommandDeleteTask extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEFAULT_KEYWORD \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public CommandDeleteTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.keyword \u003d DEFAULT_KEYWORD;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void setup(String input) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            // Get the second word (the task number), convert to int, then subtract 1 to make the index zero-based."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            taskIndex \u003d Integer.parseInt(input) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new DukeNoArgumentException(\"task number\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(TaskList tasks, TextUi ui) throws DukeIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            ui.printMessage(\"You have no tasks.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        Task removedTask;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            removedTask \u003d tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new DukeIndexOutOfBoundsException(\"task number\", 1, tasks.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printTaskDeleted(removedTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printNumberOfTasksLeft(tasks.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandExit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a command to exit Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class CommandExit extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEFAULT_KEYWORD \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public CommandExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.keyword \u003d DEFAULT_KEYWORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void setup(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(TaskList tasks, TextUi ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printByeMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 25
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a command to search for a Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class CommandFind extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEFAULT_KEYWORD \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private String searchPhrase;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public CommandFind() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.keyword \u003d DEFAULT_KEYWORD;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void setup(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.searchPhrase \u003d input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(TaskList tasks, TextUi ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        TaskList matchingTasks \u003d tasks.findTasks(searchPhrase);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printMessage(\"Here are some matching tasks:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printTasksList(matchingTasks, false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandMarkDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeNoArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a command to mark a Task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class CommandMarkDone extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEFAULT_KEYWORD \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public CommandMarkDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.keyword \u003d DEFAULT_KEYWORD;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void setup(String input) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            // Get the second word (the task number), convert to int, then subtract 1 to make the index zero-based."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            taskIndex \u003d Integer.parseInt(input) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new DukeNoArgumentException(\"task number\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(TaskList tasks, TextUi ui) throws DukeIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            ui.printMessage(\"You have no tasks.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            tasks.markAsDone(taskIndex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new DukeIndexOutOfBoundsException(\"task number\", 1, tasks.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printTaskMarkedAsDone(tasks.get(taskIndex));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 46
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandNotFound.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents an unrecognized command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class CommandNotFound extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void setup(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(TaskList tasks, TextUi ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printMessage(\"Hmm, I\u0027m not sure what that means...\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandPrintTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents a command to print the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class CommandPrintTaskList extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String DEFAULT_KEYWORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public CommandPrintTaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.keyword \u003d DEFAULT_KEYWORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void setup(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void execute(TaskList tasks, TextUi ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        ui.printTasksList(tasks, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 26
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Represents exceptions thrown within Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Thrown when the user inputs an invalid index that is out of bounds."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class DukeIndexOutOfBoundsException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public DukeIndexOutOfBoundsException(String variableName, int startIndex, int lastIndex) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(\"Index for \" + variableName + \" should be within the range from \" + startIndex + \" to \" + lastIndex);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeInvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Thrown when the user inputs date and time in an invalid format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class DukeInvalidDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public DukeInvalidDateTimeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(\"Please insert the date and time in this format: yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeNoArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Thrown when the user inputs an invalid index that is out of bounds."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class DukeNoArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public DukeNoArgumentException(String identifier) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(\"Please provide \" + identifier);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeNoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Thrown when the user does not input the description of a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class DukeNoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public DukeNoDescriptionException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public DukeNoDescriptionException(String itemType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(\"The description of a \" + itemType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 15
    }
  },
  {
    "path": "src/main/java/duke/parsers/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.commands.CommandNotFound;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Parses the user\u0027s input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private Command[] commandList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Parser(Command[] commandList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.commandList \u003d commandList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Parses the user input and returns a Command from commandList that should be executed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param input the raw String input that the user types in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @return the Command associated with the user\u0027s input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeException if an error occurs when calling the \u003ccode\u003esetup\u003c/code\u003e function of the Command instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String inputFirstWord \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String inputWithoutCommand \u003d input.substring(inputFirstWord.length()).trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Command command : commandList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (command.keyword.equals(inputFirstWord)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                command.setup(inputWithoutCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                return command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return new CommandNotFound();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 38
    }
  },
  {
    "path": "src/main/java/duke/parsers/TaskParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeInvalidDateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeNoArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.exceptions.DukeNoDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * Returns a new instance of a Task with a description and attribute, based on raw user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private DateTimeFormatter dateTimeFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public TaskParser(DateTimeFormatter dateTimeFormatter) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.dateTimeFormatter \u003d dateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Given a Task input in the form of \"DESCRIPTION /identifier ARGUMENT\", returns the description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param input    user input string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param itemType the name of the Task type to be used in error messages"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @return the description part of the user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeNoDescriptionException if the input is missing the description part"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static String parseDescription(String input, String itemType) throws DukeNoDescriptionException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        int argumentStartIndex \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (argumentStartIndex \u003d\u003d 0 || input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new DukeNoDescriptionException(itemType);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } else if (argumentStartIndex !\u003d -1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            description \u003d input.substring(0, argumentStartIndex - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            description \u003d input;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Given a Task input in the form of \"DESCRIPTION /identifier ARGUMENT\", returns the argument."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param input      user input string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param identifier the identifier, such as \"/at\" or \"/by\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @return the argument part of the user input"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeNoArgumentException if the input is missing the argument part"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static String parseArgument(String input, String identifier) throws DukeNoArgumentException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        int identifierIndex \u003d input.indexOf(identifier);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        if (identifierIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new DukeNoArgumentException(identifier);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        int startIndex \u003d input.indexOf(identifier) + identifier.length() + 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return input.substring(startIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private LocalDateTime parseDateTimeArgument(String input, String identifier)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throws DukeNoArgumentException, DukeInvalidDateTimeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String timeInString \u003d parseArgument(input, identifier);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            dateTime \u003d LocalDateTime.parse(timeInString, dateTimeFormatter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            throw new DukeInvalidDateTimeException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Creates a new Todo object with the user input as the description."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param input the user input string, which will be the description"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @return a new Task object"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeNoDescriptionException if the input does not contain the description"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Todo parseTodo(String input) throws DukeNoDescriptionException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String description \u003d parseDescription(input, \"todo\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return new Todo(description);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Creates a new Deadline object based on user input in the form of \"DESCRIPTION /by DATETIME\"."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param input user input string"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @return a new Deadline object"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeNoArgumentException      if the input does not contain the argument"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeInvalidDateTimeException if the input contains invalid datetime format"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeNoDescriptionException   if the input does not contain the description"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Deadline parseDeadline(String input) throws DukeNoArgumentException, DukeInvalidDateTimeException,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            DukeNoDescriptionException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String description \u003d parseDescription(input, \"deadline\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        LocalDateTime dateTime \u003d parseDateTimeArgument(input, \"/by\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return new Deadline(description, dateTime, dateTimeFormatter);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Creates a new Event object based on user input in the form of \"DESCRIPTION /at DATETIME\"."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param input user input string"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @return a new Event object"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeNoArgumentException      if the input does not contain the argument"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeInvalidDateTimeException if the input contains invalid datetime format"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @throws DukeNoDescriptionException   if the input does not contain the description"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Event parseEvent(String input) throws DukeNoArgumentException, DukeInvalidDateTimeException,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            DukeNoDescriptionException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        String description \u003d parseDescription(input, \"event\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        LocalDateTime dateTime \u003d parseDateTimeArgument(input, \"/at\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return new Event(description, dateTime, dateTimeFormatter);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 130
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String IDENTIFIER \u003d \"D\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private DateTimeFormatter dateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Deadline(String description, LocalDateTime by, DateTimeFormatter dateTimeFormatter) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.dateTimeFormatter \u003d dateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Deadline(boolean isDone, String description, LocalDateTime by, DateTimeFormatter dateTimeFormatter) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.dateTimeFormatter \u003d dateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return IDENTIFIER;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return \"[\" + IDENTIFIER + \"] \" + super.toString() + \" (by: \" + by.format(dateTimeFormatter) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String IDENTIFIER \u003d \"E\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private DateTimeFormatter dateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Event(String description, LocalDateTime at, DateTimeFormatter dateTimeFormatter) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.dateTimeFormatter \u003d dateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Event(boolean isDone, String description, LocalDateTime at, DateTimeFormatter dateTimeFormatter) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.dateTimeFormatter \u003d dateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return IDENTIFIER;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public LocalDateTime getAt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return \"[\" + IDENTIFIER + \"] \" + super.toString() + \" (at: \" + at.format(dateTimeFormatter) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static final String CHECKMARK_DONE \u003d \"[DONE]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    private static final String CHECKMARK_NOT_DONE \u003d \"[    ]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Task(boolean isDone, String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return (isDone ? CHECKMARK_DONE : CHECKMARK_NOT_DONE); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return \"?\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 44
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": " * An ArrayList Task instances with helper functions."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     * @param taskIndex the index of the task to be marked as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public void markAsDone(int taskIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        get(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public TaskList findTasks(String searchPhrase) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Task task : this) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if (task.getDescription().contains(searchPhrase)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public TaskList getTasksByDate(LocalDate date) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        for (Task task : this) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            if ((task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy().toLocalDate().equals(date)) ||"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                    (task instanceof Event \u0026\u0026 ((Event) task).getAt().toLocalDate().equals(date))) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fchensan"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 43
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public static final String IDENTIFIER \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public Todo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return IDENTIFIER;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "        return \"[\" + IDENTIFIER + \"] \" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fchensan": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fchensan"
        },
        "content": "todo finish presentation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fchensan"
        },
        "content": "deadline submit lab report /by 2020-10-10 23:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fchensan"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fchensan"
        },
        "content": "event party /at 2020-09-08 20:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fchensan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fchensan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fchensan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fchensan"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fchensan"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fchensan"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fchensan"
        },
        "content": "deadline do ip"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fchensan"
        },
        "content": "deadline /by 2020-10-05"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fchensan"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "event party"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "event /at 2020-08-08"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "random-command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "todo buy detergent"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "todo finish up orbital poster"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": "event supper /at 2020-10-02 10:00"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fchensan"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "done 101"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "fchensan": 27
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fchensan"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "fchensan": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fchensan"
        },
        "content": "# delete storage text file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fchensan"
        },
        "content": "if [ -e \"./duke-data.txt\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fchensan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fchensan"
        },
        "content": "  rm duke-data.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fchensan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fchensan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fchensan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin \\"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fchensan"
        },
        "content": "../src/main/java/duke/*.java \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fchensan"
        },
        "content": "../src/main/java/duke/task/*.java \\"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fchensan"
        },
        "content": "../src/main/java/duke/parsers/*.java \\"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fchensan"
        },
        "content": "../src/main/java/duke/commands/*.java \\"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fchensan"
        },
        "content": "../src/main/java/duke/exceptions/*.java"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fchensan"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fchensan"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "fchensan": 14,
      "-": 35
    }
  }
]
