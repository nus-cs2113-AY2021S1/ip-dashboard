[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "A quick overview of how to use Duke, a CLI-based task manager."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "## Adding tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Duke supports 3 different types of tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Todos"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "The vanilla type of task, requiring just a description of it."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "e.g. Read a book."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "todo Read a book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Got it. I\u0027ve added this task :"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "   [T][✘] read a book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "  Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Deadlines"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Tasks with both a descriptor and a deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "e.g. Read a book by midnight"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "deadline read a book by midnight"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Got it. I\u0027ve added this task :"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "   [D][✘] read a book (by: midnight)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "  Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Events"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Tasks with a descriptor and venue and/or time."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "e.g. read a book at the library"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Example of usuage:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "event read a book at the library"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Got it. I\u0027ve added this task :"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "   [E][✘] read a book (at: the library)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "  Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "## Viewing the List and Finding tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "To view all the tasks in your list, use the `list` command."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Example of usuage:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "1. [T][✘] read a book "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "2. [D][✘] read a book (by: midnight)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "3. [E][✘] read a book (at: the library)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Finding a task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Find all tasks that contain a certain phrase or word using the `find` command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Example of usuage:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "find book"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "1. [T][✘] read a book"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "2. [D][✘] read a book (by: midnight)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "3. [E][✘] read a book (at: the library)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Advanced usage: Finding dated tasks"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Deadline and Event tasks support dated deadlines/times."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Creating a dated deadline or event involves using an ISO date as the deadline/time."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "To find such a dated deadline or time, use the `dated` command with a valid ISO date."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Example of usuage:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "deadline read a book by 2020-10-04"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "dated 2020-10-04"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Expected outcomes:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Got it. I\u0027ve added this task :"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "   [D][✘] read a book (at: 04/10/2020)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "  Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "1. [D][✘] read a book (at: 04/10/2020)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "## Managing tasks"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Tasks can be deleted and marked as complete."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Completing a task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Tasks are marked complete using the `done` keyword"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Example of usuage:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     [T][✓] read a book"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Deleting a task"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Tasks are deleted using the `delete` keyword"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Example of usuage:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "  Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    [T][✓] read a book"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "  Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " ```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "## Troubleshooting"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Here are a list of common errors that might arise during usage"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Invalid keywords or missing details"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Error Messages:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "You need to tell me more about what you want to do."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Sorry. I don\u0027t know what that means"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Issue: You need to enter a valid command or keyword pre-fix such as `list` or `todo` followed by a descriptor."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "This is likely caused by a mispelled keyword or missing phrase."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Invalid Indexing"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Error Messages:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "You need to provide me with an integer index."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "I couldn\u0027t delete the task at position 6"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "I think you don\u0027t have that many tasks in your list."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Issue: `delete` and `done` require an integer index within the range of the list. This index starts from 1."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "### Invalid Date"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Error Message:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Sorry, I could not figure out that date. It needs to be in ISO format."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Issue: The date provided is not in ISO format, which is YYYY-MM-DD (note the number of digits)."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "This is similarly the issue when dated tasks such as `deadline` and `event` do not reformat your ISO date into a DD/MM/YYYY format."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "## Closing Duke"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Finally, to end the application, use the `bye` keyword"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Example of usuage:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "bye"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 174,
      "-": 17
    }
  },
  {
    "path": "src/main/java/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class DatedTask extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private Optional\u003cLocalDate\u003e date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private String detail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public DatedTask(String description, String date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        this.detail \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            CharSequence dateCharSeq \u003d new StringBuffer(date.strip());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(dateCharSeq);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            this.date \u003d Optional.of(localDate);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            this.date \u003d Optional.empty();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected Optional\u003cLocalDate\u003e getBy() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String getDateOrDetail() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        if (date.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return detail;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return date.get().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 33
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        super(description, deadline);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return String.format(\"[D]%s (at: %s)\", super.toString(), "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                super.getDateOrDetail());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Main method which handles initial and closing interactions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.introduceDuke();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.greetUser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.byeUser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     *  Method containing the continuous while loop that parses user inputs and handles interactions accordingly"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     *  Also initialises the task list. Attempts to retrieve a stored task list, if any."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private static void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        TaskManager manager \u003d RetrieveList.retrieveList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        while(manager.parseInput(scan.nextLine())) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printBreak();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printEmptyLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        scan.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 35,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public Event(String description, String event) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        super(description, event);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                super.getDateOrDetail());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 14
    }
  },
  {
    "path": "src/main/java/Output.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Class that strictly handles all System.outs to the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Formats the outputs for consistency/the apearance of a UI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class Output {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Prints a standard breakline meant to break up sections of text"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public static void printBreak() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"  ________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Prints out the logo to introduce the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public static void introduceDuke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        printBreak();   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Standard greeting that indicates program start / ready to recieve user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public static void greetUser() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        printBreak();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Standard farewell that marks end of program"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public static void byeUser() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        printBreak();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        printBreak();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Informs user of a caught error by providing a message with proper indentation/formating."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public static void printError(String s) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printBreak();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"    \" + s);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public static void printEmptyLine() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Informs user of task that has been deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param taskString"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected static void printDeletedTask(String taskString) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(String.format(\"  Noted. I\u0027ve removed this task: \\n    %s\", taskString));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Informs user of task that has been added."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param taskString"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected static void printAddedTask(String taskString) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task :\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"   \" + taskString);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Informs user of task that has been updated and marked as complete/done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected static void printCompletedTask(String taskString) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"     \" + taskString);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Presents the user with their list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param listString string representation of the tasklist"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected static void printTaskList (String listString) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(listString);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected static void printMatches (String matchList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        printBreak();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        if (matchList.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            System.out.println(\"  Sorry! I couldn\u0027t find any matches.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(matchList);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Conveniently inform the user of the number of tasks in their list after having executed commands."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected static void printTaskCount(int count) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        System.out.println(String.format(\"  Now you have %s tasks in the list.\", count));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 113
    }
  },
  {
    "path": "src/main/java/RetrieveList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.nio.file.InvalidPathException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Instantiates TaskManager objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Provides a TaskManager object with the retrieved list if successful in retrieval."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class RetrieveList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private static int TASK_TYPE_INDEX \u003d 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private static int TASK_STATUS_INDEX \u003d 4;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private static int TASK_DESCRIPTION_INDEX \u003d 7;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * RetrieveList attempts to load the previously stored list in [user.home]/duke-data.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @return TaskManager object with pre-loaded list or an empty one if stored list could not be retrieved."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public static TaskManager retrieveList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Path path \u003d Paths.get(home, \"duke-data.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return parseTxt(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        } catch (InvalidPathException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printError(\"Seems like this is your first time using Duke.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return new TaskManager();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private static TaskManager parseTxt(Path path) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Files.lines(path).forEachOrdered(line -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                char key \u003d line.charAt(TASK_TYPE_INDEX);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                Character statusChar \u003d line.charAt(TASK_STATUS_INDEX);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                String description \u003d line.substring(TASK_DESCRIPTION_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                boolean status \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                if (statusChar.equals(\u0027\\u2713\u0027)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    status \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                switch (key) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    case \u0027T\u0027:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                        addTodo(tasks, description, status);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    case \u0027D\u0027:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                        addDeadline(tasks, description, status);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    case \u0027E\u0027:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                        addEvent(tasks, description, status);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return new TaskManager(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return new TaskManager();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private static void addTodo(TaskList tasks, String description, boolean status) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.addTodo(description.strip(), status);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private static void addDeadline(TaskList tasks, String description, boolean status) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        String cleanString \u003d description.replace(\u0027)\u0027, \u0027 \u0027).replace(\u0027(\u0027, \u0027 \u0027).replaceFirst(\"by\", \" \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        String[] inputs \u003d cleanString.split(\":\", 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.addDeadline(inputs[0].strip(), inputs[1].strip(), status);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private static void addEvent(TaskList tasks, String description, boolean status) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        // dev note: \"repeated code\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        String cleanString \u003d description.replace(\u0027)\u0027, \u0027 \u0027).replace(\u0027(\u0027, \u0027 \u0027).replaceFirst(\"at\", \" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        String[] inputs \u003d cleanString.split(\":\", 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.addEvent(inputs[0].strip(), inputs[1].strip(), status);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 81
    }
  },
  {
    "path": "src/main/java/SaveList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Helper class to TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Saves the TaskList (which is an ArrayList) to a file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class SaveList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Writes tasks in their toString() representation directly to the text file specified in path."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param path A path pointing to the text file in the system."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected static void saveListToFile(Path path, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            FileWriter writer \u003d new FileWriter(path.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            list.forEach(x -\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    writer.write(x.toString() + \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    Output.printError(\"A task could not be saved: \" + x.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printError(\"Not able to open or close the filewriter\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 32
    }
  },
  {
    "path": "src/main/java/StringPair.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Data structure class to store a pair of strings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * For easier/cleaner method IO"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public final class StringPair {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public String first;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public String second;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public StringPair(String first, String second) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        this.first \u003d first;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        this.second \u003d second;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Data class to contain task descriptions and its completion status."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Parent class of Todo, Event, Deadline."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private boolean isComplete;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        this.isComplete \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return this.getCompletionStatusIcon() + \" \" + this.description; "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected boolean markAsComplete() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        this.isComplete \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return this.isComplete;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected boolean checkIsComplete() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return this.isComplete;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private String getCompletionStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return (isComplete ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Wrapper class for the underlying implementation of tasklist as an arraylist."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Is an abstraction barrier for Task and its subclasses:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * TaskList does not return task objects, only strings."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * No classes above has direct access to task objects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public TaskList(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.add(new Task(description));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Depreciated method. Adds a generic task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String addTask(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.add(new Task(description));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return String.format(\"added: %s\", description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Adds a todo to the tasklist."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * The call sequenence for this method should originate from TaskManager"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * The same applies to the subsequent add___ methods."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * They should be the go-to method of adding tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String addTodo(String description) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String addDeadline(String description, String deadline) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Task task \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String addEvent(String description, String detail) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Task task \u003d new Event(description, detail);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Adds a todo to the tasklist while specifying its completion status."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * The call sequence for this method should originate from RetrieveList only."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * This is a non-default method of adding tasks, created to support adding completed tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * The same applies to the subsequent add___ methods."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param status"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String addTodo(String description, boolean status) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        if (status) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            task.markAsComplete();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String addDeadline(String description, String deadline, boolean status) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Task task \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        if (status) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            task.markAsComplete();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String addEvent(String description, String detail, boolean status) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Task task \u003d new Event(description, detail);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        if (status) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            task.markAsComplete();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Mark a task in the list at the specified index as completed."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Throws IndexOutOfBounds error."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @return the completed task in its string rep"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String markComplete(int index) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        index \u003d index - 1; // start from 0 instead of 1"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        task.markAsComplete();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return (task.toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected int size() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Delete the task in the list at specified index"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Throws IndexOutOfBounds error."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String delete(int index) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return tasks.remove(index - 1).toString();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected void saveToFile(Path path) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        SaveList.saveListToFile(path, tasks);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String findTasksWithKeyword(String keyword) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        CharSequence keywordCharSeq \u003d new StringBuffer(keyword.toLowerCase());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            // Use the task\u0027s description for a case insensitve comparison (all lower case)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            String taskDescription \u003d task.getDescription().toLowerCase(); "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            if (! taskDescription.contains(keywordCharSeq)){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            matchingTasks.add(task);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return listToString(matchingTasks);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Searches the task list for (dated) tasks that match the date queried by the user"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param dateString ISO formated date as a string"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @return list of matched tasks as a string"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @throws DateTimeParseException exception thrown as is."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    protected String findTasksWithDate(String dateString) throws DateTimeParseException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        CharSequence dateCharSeq \u003d new StringBuffer(dateString.strip());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(dateCharSeq);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                if (!(task instanceof DatedTask)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                DatedTask datedTask \u003d (DatedTask) task;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                if (datedTask.getBy().isEmpty()) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                if (!(localDate.equals(datedTask.getBy().get()))) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return listToString(matchingTasks);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private String listToString(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Task task \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            listString +\u003d i + \". \""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return listString;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        String result \u003d listToString(tasks);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        result +\u003d String.format(\"Now you have %s tasks in the list.\", tasks.size());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 206
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.nio.file.InvalidPathException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " * Manager class that interprets user commands and executes them."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private int COMMAND_START_INDEX\u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Default constructor method that creates a new TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Intended for first time use and when the previous list could not be retrieved."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Constructor method to allow TaskManager to be instantiated with an existing TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Necessary to support loading previously saved lists."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public TaskManager(TaskList tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Parses the user input for keywords and commands."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Calls the relevant methods to manage the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Also informs user of parsing related errors: unrecognised keyword, not enough inputs, invalid input type."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param userInput scanned user input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @return boolean that informs the while loop if the program should still proceed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public boolean parseInput(String userInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        String[] inputs \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        String keyword \u003d inputs[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                listTaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            case \"save\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                saveTaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        if (inputs.length \u003d\u003d COMMAND_START_INDEX) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printError(\"You need to tell me more about what you want to do.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                markComplete(Integer.parseInt(inputs[COMMAND_START_INDEX]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                Output.printError(\"You need to provide me with an integer index.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                deleteTask(Integer.parseInt(inputs[COMMAND_START_INDEX]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                Output.printError(\"You need to provide me with an integer index.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            addTodo(String.join(\" \", Arrays.copyOfRange(inputs, COMMAND_START_INDEX, inputs.length)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            addDeadline(Arrays.copyOfRange(inputs, COMMAND_START_INDEX, inputs.length));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            addEvent(Arrays.copyOfRange(inputs, COMMAND_START_INDEX, inputs.length));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            findTasks(String.join(\" \", Arrays.copyOfRange(inputs, COMMAND_START_INDEX, inputs.length)));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        case \"dated\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            findDated(String.join(\" \", Arrays.copyOfRange(inputs, COMMAND_START_INDEX, inputs.length)));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        default: "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printError(\"Sorry. I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printTaskCount(tasks.size());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        saveTaskList(); // task list is automatically saved without user input of save."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private void findDated(String date) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printMatches(tasks.findTasksWithDate(date));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printError(\"Sorry, I could not figure out that date. It needs to be in ISO format.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private void findTasks(String keyword) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printMatches(tasks.findTasksWithKeyword(keyword));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private void deleteTask(int index) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printBreak();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printDeletedTask(tasks.delete(index));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printError(\"I couldn\u0027t delete the task at position \" + index +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    \"\\n   I think you don\u0027t have that many tasks in your list.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Saves the tasklist to the user\u0027s home directory under duke-data.txt"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Informs user of error where their home directory is not available."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private void saveTaskList() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Path path \u003d Paths.get(home, \"duke-data.txt\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            tasks.saveToFile(path);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        } catch (InvalidPathException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printError(\"Not able to path the file.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private void markComplete(int index) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printBreak();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printCompletedTask(tasks.markComplete(index));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            Output.printError(\"I couldn\u0027t mark the task at position \" + index +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                    \"\\n   I think you don\u0027t have that many tasks in your list.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private void listTaskList() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printBreak();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printTaskList(tasks.toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private void addTodo(String userInput) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printBreak();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printAddedTask(tasks.addTodo(userInput));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private void addEvent(String[] userInput) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        StringPair taskInfo \u003d splitAtCommand(userInput, \"at\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printBreak();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printAddedTask(tasks.addEvent(taskInfo.first, taskInfo.second));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private void addDeadline(String[] userInput) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        StringPair taskInfo \u003d splitAtCommand(userInput, \"by\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printBreak();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        Output.printAddedTask(tasks.addDeadline(taskInfo.first, taskInfo.second));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * Helper method to parse userInput and get the pair of arguments for addDeadline and addEvent."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @param command the keyword that is used by the command to indicate that a timing/venue is subsequently written."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    private StringPair splitAtCommand(String[] userInput, String command) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        boolean flag \u003d false;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        ArrayList\u003cString\u003e detailWords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        ArrayList\u003cString\u003e descriptionWords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        for (String input : userInput) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            if (flag) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                detailWords.add(input);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            if (input.equals(\"/\" + command) || input.equals(command)) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                flag \u003d true;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "            descriptionWords.add(input);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return new StringPair(String.join(\" \", descriptionWords), String.join(\" \", detailWords));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mxksowie": 204
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mxksowie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mxksowie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mxksowie": 12
    }
  }
]
