[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 1,
      "-": 25
    }
  },
  {
    "path": "src/main/java/duke/command/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String BY \u003d \"/by\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String AT \u003d \"/at\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String DOTTED_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String LOGO \u003d (\" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                            .replaceAll(\"\\n\", \"\\n\\t\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final int INSTRUCTION_LENGTH \u003d 2;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private Task[] tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private int taskCount;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        tasks \u003d new Task[MAX_TASKS];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        taskCount \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void printWithIndent(String string) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        System.out.println(\"\\t\" + string);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void greetUser() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(LOGO);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(\" What can I do for you?\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void addTask(Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        tasks[taskCount] \u003d task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(\" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(\"   \" + tasks[taskCount].toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(\" Now you have \" + taskCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void addToDo(String description) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        addTask(new ToDo(description));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void addDeadline(String line) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String[] instructions \u003d line.split(BY);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (instructions.length \u003c INSTRUCTION_LENGTH) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Cannot decipher description or date/time.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String description \u003d instructions[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String by \u003d instructions[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (description.isBlank() || by.isBlank()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Cannot decipher description or date/time.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        addTask(new Deadline(description, by));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void addEvent(String line) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String[] instructions \u003d line.split(AT);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (instructions.length \u003c INSTRUCTION_LENGTH) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Cannot decipher description or date/time.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String description \u003d instructions[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String at \u003d instructions[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (description.isBlank() || at.isBlank()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Cannot decipher description or date/time.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        addTask(new Event(description, at));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void listTasks() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            printWithIndent(\" \" + (i + 1) + \".\" + tasks[i]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void markTaskAsDone(String instruction) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(instruction);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            if (taskNumber \u003c 1 || taskNumber \u003e Math.min(MAX_TASKS, taskCount)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            tasks[taskNumber - 1].markAsDone();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            printWithIndent(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            printWithIndent(\"   \" + tasks[taskNumber - 1].toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(DOTTED_LINE);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void verifyInstructionLength(String[] instructions) throws DukeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (instructions.length \u003c INSTRUCTION_LENGTH) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \" + instructions[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void processInput() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            String[] instructions \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                switch (instructions[0]) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    listTasks();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    verifyInstructionLength(instructions);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    addToDo(instructions[1]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    verifyInstructionLength(instructions);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    addDeadline(instructions[1]);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    verifyInstructionLength(instructions);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    addEvent(instructions[1]);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    verifyInstructionLength(instructions);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    markTaskAsDone(instructions[1]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        duke.greetUser();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        duke.processInput();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 186,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        System.out.println(\"\\t\" + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        System.out.println(\"\\t \" + errorMessage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        System.out.println(\"\\t\" + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String LOGO \u003d \"[D]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return LOGO + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String LOGO \u003d \"[E]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return LOGO + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String TICK \u003d \"[✓]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String CROSS \u003d \"[✗]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return isDone ? TICK : CROSS;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 33
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String LOGO \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return LOGO + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "blah"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "done abc"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "deadline a"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "deadline /by Sunday"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\Duke.java ..\\src\\main\\java\\duke\\exception\\DukeException.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "java -classpath ..\\bin duke.command.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/command/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 1,
      "-": 37
    }
  }
]
